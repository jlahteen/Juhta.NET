<?xml version="1.0" encoding="utf-8"?>

<!-- Copyright © 2011-2012 Juha Lähteenmäki. All rights reserved. -->

<xs:schema
  elementFormDefault="qualified"
  targetNamespace="http://www.softart.fi/businessframework/diagnostics"
  xmlns="http://www.softart.fi/businessframework/diagnostics"
  xmlns:bf="http://www.softart.fi/businessframework/common"
  xmlns:xs="http://www.w3.org/2001/XMLSchema">

  <xsd:import
    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    namespace="http://www.softart.fi/businessframework/common"/>

  <!-- Declare the root element -->
  <xs:element name="businessFramework.diagnostics" type="businessFramework.diagnosticsType"/>

  <!-- Define businessFramework.diagnosticsType -->
  <xs:complexType name="businessFramework.diagnosticsType">
    <xs:sequence>
      <xs:element name="eventLogger" type="eventLoggerType" minOccurs="0"/>
      <xs:element name="trace" type="traceType" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  
  <!-- emailStreamType -->
  <xs:complexType name="emailStreamType">
    <xs:complexContent>
      <xs:extension base="eventStreamType">
        <xs:attribute name="ccRecipients" type="bf:emailAddressListType" use="optional"/>
        <xs:attribute name="smtpHost" type="bf:hostNameOrIPAddressType" use="required"/>
        <xs:attribute name="smtpPassword" type="bf:nonEmptyStringType" use="optional"/>
        <xs:attribute name="smtpPort" type="bf:tcpPortType" use="optional" default="25"/>
        <xs:attribute name="smtpUsername" type="bf:nonEmptyStringType" use="optional"/>
        <xs:attribute name="smtpUseSsl" type="xs:boolean" use="optional" default="false"/>
        <xs:attribute name="toRecipients" type="bf:emailAddressListType" use="required"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
  <!-- Define eventFieldTypeType -->
  <xs:simpleType name="eventFieldTypeType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="ExecutablePath"/>
      <xs:enumeration value="ID"/>
      <xs:enumeration value="MachineName"/>
      <xs:enumeration value="ManagedThreadID"/>
      <xs:enumeration value="Message"/>
      <xs:enumeration value="ProcessID"/>
      <xs:enumeration value="ProcessOwner"/>
      <xs:enumeration value="Timestamp"/>
      <xs:enumeration value="Type"/>
    </xs:restriction>
  </xs:simpleType>
  
  <!-- Define eventLoggerType -->
  <xs:complexType name="eventLoggerType">
    <xs:sequence>
      <xs:element name="eventStreams" type="eventStreamsType" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  
  <!-- eventLogStreamType -->
  <xs:complexType name="eventLogStreamType">
    <xs:complexContent>
      <xs:extension base="eventStreamType">
        <xs:attribute name="log" type="bf:nonEmptyTrimmedStringType" use="optional" default="Application"/>
        <xs:attribute name="source" type="bf:nonEmptyTrimmedStringType" use="optional" default="Application"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
  <!-- Define eventStreamsType -->
  <xs:complexType name="eventStreamsType">
    <xs:choice maxOccurs="unbounded">
      <xs:element name="emailStream" type="emailStreamType"/>
      <xs:element name="eventLogStream" type="eventLogStreamType"/>
      <xs:element name="htmlFileStream" type="fileStreamType"/>
      <xs:element name="textFileStream" type="fileStreamType"/>
      <xs:element name="xmlFileStream" type="fileStreamType"/>
    </xs:choice>
  </xs:complexType>
  
  <!-- Define eventStreamType -->
  <xs:complexType name="eventStreamType">
    <xs:sequence>
      <xs:element name="eventFilter" type="operatorRuleType" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  
  <!-- Define fileSplitIntervalType -->
  <xs:simpleType name="fileSplitIntervalType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Day"/>
      <xs:enumeration value="Hour"/>
      <xs:enumeration value="Minute"/>
      <xs:enumeration value="Month"/>
      <xs:enumeration value="None"/>
      <xs:enumeration value="Week"/>
      <xs:enumeration value="Year"/>
    </xs:restriction>
  </xs:simpleType>

  <!-- Define fileStreamType -->
  <xs:complexType name="fileStreamType">
    <xs:complexContent>
      <xs:extension base="eventStreamType">
        <xs:attribute name="filePath" type="bf:filePathType" use="required"/>
        <xs:attribute name="fileSplitInterval" type="fileSplitIntervalType" use="optional" default="None"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
  <!-- Define leafRuleType -->
  <xs:complexType name="leafRuleType">
    <xs:attribute name="field" type="eventFieldTypeType" use="required"/>
  </xs:complexType>
  
  <!-- Define multiValueRuleType -->
  <xs:complexType name="multiValueRuleType">
    <xs:complexContent>
      <xs:extension base="leafRuleType">
        <xs:sequence minOccurs="1" maxOccurs="unbounded">
          <xs:element name="value" type="bf:nonEmptyTrimmedStringType"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
  <!-- Define operatorRuleType -->
  <xs:complexType name="operatorRuleType">
    <xs:choice maxOccurs="unbounded">
      <xs:element name="andRule" type="operatorRuleType"/>
      <xs:element name="containsRule" type="singleValueRuleType"/>
      <xs:element name="endsWithRule" type="singleValueRuleType"/>
      <xs:element name="equalsRule" type="singleValueRuleType"/>
      <xs:element name="inListRule" type="multiValueRuleType"/>
      <xs:element name="isNullRule" type="leafRuleType"/>
      <xs:element name="notContainsRule" type="singleValueRuleType"/>
      <xs:element name="notEndsWithRule" type="singleValueRuleType"/>
      <xs:element name="notEqualsRule" type="singleValueRuleType"/>
      <xs:element name="notInListRule" type="multiValueRuleType"/>
      <xs:element name="notIsNullRule" type="leafRuleType"/>
      <xs:element name="notStartsWithRule" type="singleValueRuleType"/>
      <xs:element name="orRule" type="operatorRuleType"/>
      <xs:element name="startsWithRule" type="singleValueRuleType"/>
    </xs:choice>
  </xs:complexType>
  
  <!-- Define singleValueRuleType -->
  <xs:complexType name="singleValueRuleType">
    <xs:complexContent>
      <xs:extension base="leafRuleType">
        <xs:attribute name="value" type="bf:nonEmptyTrimmedStringType" use="required"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
  <!-- Define traceType -->
  <xs:complexType name="traceType">
    <xs:sequence>
      <xs:element name="traceWriter" type="bf:objectType" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="traceDirectory" type="bf:directoryPathType" use="optional"/>
    <xs:attribute name="tracingOn" type="xs:boolean" use="optional" default="false"/>
  </xs:complexType>

</xs:schema>
