<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Juhta.Net.Validation</name>
    </assembly>
    <members>
        <member name="T:Juhta.Net.Validation.DirectoryPathValidator">
            <summary>
            Defines a validator class for validating directory paths.
            </summary>
        </member>
        <member name="M:Juhta.Net.Validation.DirectoryPathValidator.#ctor">
            <summary>
            Initializes a new instance.
            </summary>
        </member>
        <member name="M:Juhta.Net.Validation.DirectoryPathValidator.#ctor(Juhta.Net.Diagnostics.ErrorMessage)">
            <summary>
            Initializes a new instance.
            </summary>
            <param name="errorMessage">Specifies an error message to associate with the instance.</param>
        </member>
        <member name="M:Juhta.Net.Validation.DirectoryPathValidator.Validate(System.String)">
            <summary>
            See <see cref="M:Juhta.Net.Validation.IValidator`1.Validate(`0)"/>.
            </summary>
        </member>
        <member name="T:Juhta.Net.Validation.FilePathValidator">
            <summary>
            Defines a validator class for validating file paths.
            </summary>
        </member>
        <member name="M:Juhta.Net.Validation.FilePathValidator.#ctor">
            <summary>
            Initializes a new instance.
            </summary>
        </member>
        <member name="M:Juhta.Net.Validation.FilePathValidator.#ctor(Juhta.Net.Diagnostics.ErrorMessage)">
            <summary>
            Initializes a new instance.
            </summary>
            <param name="errorMessage">Specifies an error message to associate with the instance.</param>
        </member>
        <member name="M:Juhta.Net.Validation.FilePathValidator.Validate(System.String)">
            <summary>
            See <see cref="M:Juhta.Net.Validation.IValidator`1.Validate(`0)"/>.
            </summary>
        </member>
        <member name="T:Juhta.Net.Validation.IStringValidator">
            <summary>
            Defines an interface for string value validators.
            </summary>
        </member>
        <member name="T:Juhta.Net.Validation.IValidator`1">
            <summary>
            Defines a generic interface for validators.
            </summary>
            <typeparam name="T">Specifies the type of values to validate.</typeparam>
        </member>
        <member name="M:Juhta.Net.Validation.IValidator`1.Validate(`0)">
            <summary>
            Validates a specified value. If the specified value doesn't pass validation, the method must throw a
            <see cref="T:Juhta.Net.Validation.ValidationException"/>.
            </summary>
            <param name="value">Specifies a value to validate.</param>
        </member>
        <member name="T:Juhta.Net.Validation.LibraryMessages">
            <summary>
            A static class that defines the diagnostic messages for this library.
            </summary>
        </member>
        <member name="F:Juhta.Net.Validation.LibraryMessages.MessageFactory">
            <summary>
            Gets the <see cref="T:Juhta.Net.Diagnostics.DiagnosticMessageFactory"/> instance for creating diagnostic messages.
            </summary>
        </member>
        <member name="F:Juhta.Net.Validation.LibraryMessages.Error001">
            <summary>
            XML document cannot be validated because the target namespace '{0}' is not present in the schema collection
            of the XML validator.
            </summary>
        </member>
        <member name="F:Juhta.Net.Validation.LibraryMessages.Error002">
            <summary>
            Value '{0}' is not a valid file path.
            </summary>
        </member>
        <member name="F:Juhta.Net.Validation.LibraryMessages.Error003">
            <summary>
            Value '{0}' is not a valid directory path.
            </summary>
        </member>
        <member name="F:Juhta.Net.Validation.LibraryMessages.Error004">
            <summary>
            XML document is not valid according to the given schema(s).
            </summary>
        </member>
        <member name="T:Juhta.Net.Validation.PathValidator">
            <summary>
            Defines an abstract base class for validator classes validating directory or file paths.
            </summary>
        </member>
        <member name="M:Juhta.Net.Validation.PathValidator.#ctor(Juhta.Net.Diagnostics.ErrorMessage)">
            <summary>
            Initializes a new instance.
            </summary>
            <param name="errorMessage">Specifies an error message to associate with the instance.</param>
        </member>
        <member name="M:Juhta.Net.Validation.PathValidator.IsValidDirectoryName(System.String)">
            <summary>
            Checks whether a specified value is a valid directory name.
            </summary>
            <param name="value">Specifies a value to be checked.</param>
            <returns>Returns true if the specified value is a valid directory name, otherwise false.</returns>
        </member>
        <member name="M:Juhta.Net.Validation.PathValidator.IsValidFileName(System.String)">
            <summary>
            Checks whether a specified value is a valid file name.
            </summary>
            <param name="value">Specifies a value to be checked.</param>
            <returns>Returns true if the specified value is a valid file name, otherwise false.</returns>
        </member>
        <member name="M:Juhta.Net.Validation.PathValidator.IsValidPath(System.String,Juhta.Net.Validation.PathValidator.PathType)">
            <summary>
            Checks whether a specified value is a valid path.
            </summary>
            <param name="value">Specifies a value to be checked.</param>
            <param name="pathType">Specifies a path type.</param>
            <returns>Returns true if the specified value is a valid path, otherwise false.</returns>
        </member>
        <member name="T:Juhta.Net.Validation.PathValidator.PathType">
            <summary>
            Defines an enumeration for the path types.
            </summary>
        </member>
        <member name="F:Juhta.Net.Validation.PathValidator.PathType.DirectoryPath">
            <summary>
            The path is a directory path.
            </summary>
        </member>
        <member name="F:Juhta.Net.Validation.PathValidator.PathType.FilePath">
            <summary>
            The path is a file path.
            </summary>
        </member>
        <member name="F:Juhta.Net.Validation.PathValidator.m_errorMessage">
            <summary>
            Specifies the error message associated with this validator instance.
            </summary>
        </member>
        <member name="T:Juhta.Net.Validation.ValidationException">
            <summary>
            This exception will be thrown by validator classes when a value doesn't pass validation.
            </summary>
        </member>
        <member name="M:Juhta.Net.Validation.ValidationException.#ctor(System.String)">
            <summary>
            Initializes a new instance.
            </summary>
            <param name="message">Specifies an error message.</param>
        </member>
        <member name="M:Juhta.Net.Validation.ValidationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance.
            </summary>
            <param name="message">Specifies an error message.</param>
            <param name="innerException">Specifies an inner exception.</param>
        </member>
        <member name="T:Juhta.Net.Validation.XmlDocumentValidator">
            <summary>
            A validator class that makes easier to validate XML documents against XML schemas.
            </summary>
        </member>
        <member name="M:Juhta.Net.Validation.XmlDocumentValidator.#ctor">
            <summary>
            Initializes a new instance.
            </summary>
        </member>
        <member name="M:Juhta.Net.Validation.XmlDocumentValidator.AddSchema(System.Xml.Schema.XmlSchema)">
            <summary>
            Adds an XML schema to this validator instance.
            </summary>
            <param name="schema">Specifies an XmlSchema object.</param>
        </member>
        <member name="M:Juhta.Net.Validation.XmlDocumentValidator.AddSchema(System.String)">
            <summary>
            Adds an XML schema to this validator instance.
            </summary>
            <param name="schema">Specifies an XML schema string.</param>
        </member>
        <member name="M:Juhta.Net.Validation.XmlDocumentValidator.AddSchema(System.Uri)">
            <summary>
            Adds an XML schema to this validator instance.
            </summary>
            <param name="schemaUri">Specifies the URI of a schema to be added to the instance.</param>
        </member>
        <member name="M:Juhta.Net.Validation.XmlDocumentValidator.Validate(System.Xml.XmlDocument)">
            <summary>
            Validates a specified XML document.
            </summary>
            <param name="document">Specifies an <see cref="T:System.Xml.XmlDocument"/> object.</param>
            <remarks>If the XML document contains validation errors, the method collects the corresponding exceptions
            to an exception chain of the type <see cref="T:System.Xml.Schema.XmlSchemaValidationException"/>. This exception chain will be
            thrown as an inner exception of <see cref="T:Juhta.Net.Validation.ValidationException"/> after the validation process is finished.</remarks>
        </member>
        <member name="M:Juhta.Net.Validation.XmlDocumentValidator.Validate(System.Xml.XmlDocument,System.String)">
            <summary>
            Validates a specified XML document against a specified XML schema.
            </summary>
            <param name="document">Specifies an XmlDocument object.</param>
            <param name="schema">Specifies an XML schema as a string.</param>
            <remarks>If the XML document contains validation errors, the function collects the corresponding exceptions
            to an exception chain of the type XmlSchemaValidationException. This exception chain will be thrown after
            the validation process is finished.</remarks>
        </member>
        <member name="M:Juhta.Net.Validation.XmlDocumentValidator.Validate(System.Xml.XmlDocument,System.Xml.Schema.XmlSchema)">
            <summary>
            Validates a specified XML document against a specified XML schema.
            </summary>
            <param name="document">Specifies an XmlDocument object.</param>
            <param name="schema">Specifies an XmlSchema object.</param>
            <remarks>If the XML document contains validation errors, the function collects the corresponding exceptions
            to an exception chain of the type XmlSchemaValidationException. This exception chain will be thrown after
            the validation process is finished.</remarks>
        </member>
        <member name="M:Juhta.Net.Validation.XmlDocumentValidator.ValidationEventHandler(System.Object,System.Xml.Schema.ValidationEventArgs)">
            <summary>
            Implements a validation event handler.
            </summary>
        </member>
        <member name="F:Juhta.Net.Validation.XmlDocumentValidator.m_schemaSet">
            <summary>
            Specifies a set of XML schemas added to this instance.
            </summary>
        </member>
        <member name="F:Juhta.Net.Validation.XmlDocumentValidator.m_validationException">
            <summary>
            Specifies the latest validation exception chain.
            </summary>
        </member>
    </members>
</doc>
