<?xml version="1.0" encoding="utf-8"?>

<!--
  Juhta.NET, Copyright (c) 2017 Juha Lähteenmäki

  This source code may be used, modified and distributed under the terms of
  the MIT license. Please refer to the LICENSE.txt file for details.
-->

<xs:schema
  elementFormDefault="qualified"
  targetNamespace="http://schemas.juhta.net/root-v1.xsd"
  xmlns="http://schemas.juhta.net/root-v1.xsd"
  xmlns:common="http://schemas.juhta.net/common-v1.xsd"
  xmlns:xs="http://www.w3.org/2001/XMLSchema">
  
  <xsd:import
    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    namespace="http://schemas.juhta.net/common-v1.xsd"/>
  
  <!-- Define the root element -->
  <xs:element name="Juhta.Net" type="Juhta.NetType"/>
  
  <!-- Define applicationType -->
  <xs:complexType name="applicationType">
    <xs:sequence>
      <xs:element name="startup" type="startupType"/>
      <xs:element name="services" type="servicesType" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="name" type="common:nonEmptyTrimmedStringType" use="optional"/>
    <xs:attribute name="defaultConfigFileName" type="common:configFileNameType" use="optional"/>
  </xs:complexType>
  
  <!-- Define booleanParamType -->
  <xs:complexType name="booleanParamType">
    <xs:simpleContent>
      <xs:restriction base="stringParamType">
        <xs:enumeration value="true"/>
        <xs:enumeration value="false"/>
      </xs:restriction>
    </xs:simpleContent>
  </xs:complexType>
  
  <!-- Define byteParamType -->
  <xs:complexType name="byteParamType">
    <xs:simpleContent>
      <xs:extension base="xs:unsignedByte">
        <xs:attribute name="name" type="common:paramNameType" use="required"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  
  <!-- Define charParamType -->
  <xs:complexType name="charParamType">
    <xs:simpleContent>
      <xs:restriction base="stringParamType">
        <xs:minLength value="1"/>
        <xs:maxLength value="1"/>
        <xs:attribute name="name" type="common:paramNameType" use="required"/>
      </xs:restriction>
    </xs:simpleContent>
  </xs:complexType>
  
  <!-- Define constructorParamsType -->
  <xs:complexType name="constructorParamsType">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="boolean" type="booleanParamType"/>
      <xs:element name="byte" type="byteParamType"/>
      <xs:element name="char" type="charParamType"/>
      <xs:element name="date" type="dateParamType"/>
      <xs:element name="dateTime" type="dateTimeParamType"/>
      <xs:element name="decimal" type="decimalParamType"/>
      <xs:element name="double" type="doubleParamType"/>
      <xs:element name="float" type="floatParamType"/>
      <xs:element name="int" type="intParamType"/>
      <xs:element name="int16" type="int16ParamType"/>
      <xs:element name="int32" type="int32ParamType"/>
      <xs:element name="int64" type="int64ParamType"/>
      <xs:element name="long" type="longParamType"/>
      <xs:element name="sbyte" type="sbyteParamType"/>
      <xs:element name="service" type="serviceParamType"/>
      <xs:element name="short" type="shortParamType"/>
      <xs:element name="single" type="singleParamType"/>
      <xs:element name="string" type="stringParamType"/>
      <xs:element name="time" type="timeParamType"/>
      <xs:element name="timeSpan" type="timeSpanParamType"/>
      <xs:element name="uint" type="uintParamType"/>
      <xs:element name="uint16" type="uint16ParamType"/>
      <xs:element name="uint32" type="uint32ParamType"/>
      <xs:element name="uint64" type="uint64ParamType"/>
      <xs:element name="ulong" type="ulongParamType"/>
      <xs:element name="ushort" type="ushortParamType"/>
    </xs:choice>
  </xs:complexType>
  
  <!-- Define dateParamType -->
  <xs:complexType name="dateParamType">
    <xs:simpleContent>
      <xs:extension base="xs:date">
        <xs:attribute name="name" type="common:paramNameType" use="required"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  
  <!-- Define dateTimeParamType -->
  <xs:complexType name="dateTimeParamType">
    <xs:simpleContent>
      <xs:extension base="xs:dateTime">
        <xs:attribute name="name" type="common:paramNameType" use="required"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  
  <!-- Define decimalParamType -->
  <xs:complexType name="decimalParamType">
    <xs:simpleContent>
      <xs:extension base="xs:decimal">
        <xs:attribute name="name" type="common:paramNameType" use="required"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <!-- Define doubleParamType -->
  <xs:complexType name="doubleParamType">
    <xs:simpleContent>
      <xs:extension base="xs:double">
        <xs:attribute name="name" type="common:paramNameType" use="required"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  
  <!-- Define floatParamType -->
  <xs:complexType name="floatParamType">
    <xs:simpleContent>
      <xs:extension base="xs:float">
        <xs:attribute name="name" type="common:paramNameType" use="required"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  
  <!-- Define intParamType -->
  <xs:complexType name="intParamType">
    <xs:simpleContent>
      <xs:extension base="xs:int">
        <xs:attribute name="name" type="common:paramNameType" use="required"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  
  <!-- Define int16ParamType -->
  <xs:complexType name="int16ParamType">
    <xs:simpleContent>
      <xs:extension base="xs:short">
        <xs:attribute name="name" type="common:paramNameType" use="required"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  
  <!-- Define int32ParamType -->
  <xs:complexType name="int32ParamType">
    <xs:simpleContent>
      <xs:extension base="xs:int">
        <xs:attribute name="name" type="common:paramNameType" use="required"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  
  <!-- Define int64ParamType -->
  <xs:complexType name="int64ParamType">
    <xs:simpleContent>
      <xs:extension base="xs:long">
        <xs:attribute name="name" type="common:paramNameType" use="required"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  
  <!-- Define Juhta.NetType -->
  <xs:complexType name="Juhta.NetType">
    <xs:sequence>
      <xs:element name="application" type="applicationType"/>
    </xs:sequence>
  </xs:complexType>
  
  <!-- Define librariesType -->
  <xs:complexType name="librariesType">
    <xs:sequence>
      <xs:element name="library" type="libraryType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  
  <!-- Define libraryType -->
  <xs:complexType name="libraryType">
    <xs:attribute name="handleClass" type="common:shortClassIdType" use="required"/>
    <xs:attribute name="configFileName" type="common:configFileNameType" use="optional"/>
  </xs:complexType>
  
  <!-- Define longParamType -->
  <xs:complexType name="longParamType">
    <xs:simpleContent>
      <xs:extension base="xs:long">
        <xs:attribute name="name" type="common:paramNameType" use="required"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  
  <!-- Define sbyteParamType -->
  <xs:complexType name="sbyteParamType">
    <xs:simpleContent>
      <xs:extension base="xs:byte">
        <xs:attribute name="name" type="common:paramNameType" use="required"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <!-- Define serviceGroupType -->
  <xs:complexType name="serviceGroupType">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="service" type="serviceType"/>
      <xs:element name="serviceGroup" type="serviceGroupType"/>
    </xs:choice>
    <xs:attribute name="name" type="common:nonEmptyStringType" use="optional"/>
  </xs:complexType>

  <!-- Define serviceParamType -->
  <xs:complexType name="serviceParamType">
    <xs:simpleContent>
      <xs:restriction base="stringParamType">
        <xs:pattern value="([a-zA-Z0-9])+:([a-zA-Z0-9\._/-])+"/>
        <xs:attribute name="name" type="common:paramNameType" use="required"/>
      </xs:restriction>
    </xs:simpleContent>
  </xs:complexType>
  
  <!-- Define servicesType -->
  <xs:complexType name="servicesType">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="service" type="serviceType"/>
      <xs:element name="serviceGroup" type="serviceGroupType"/>
    </xs:choice>
  </xs:complexType>
  
  <!-- Define serviceType -->
  <xs:complexType name="serviceType">
    <xs:sequence>
      <xs:element name="constructorParams" type="constructorParamsType" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="id" type="common:serviceIdType" use="required"/>
    <xs:attribute name="class" type="common:shortClassIdType" use="required"/>
  </xs:complexType>
  
  <!-- Define shortParamType -->
  <xs:complexType name="shortParamType">
    <xs:simpleContent>
      <xs:extension base="xs:short">
        <xs:attribute name="name" type="common:paramNameType" use="required"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  
  <!-- Define singleParamType -->
  <xs:complexType name="singleParamType">
    <xs:simpleContent>
      <xs:extension base="xs:float">
        <xs:attribute name="name" type="common:paramNameType" use="required"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  
  <!-- Define startupType -->
  <xs:complexType name="startupType">
    <xs:sequence>
      <xs:element name="libraries" type="librariesType"/>
    </xs:sequence>
  </xs:complexType>
  
  <!-- Define stringParamType -->
  <xs:complexType name="stringParamType">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="name" type="common:paramNameType" use="optional"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  
  <!-- Define timeParamType -->
  <xs:complexType name="timeParamType">
    <xs:simpleContent>
      <xs:extension base="xs:time">
        <xs:attribute name="name" type="common:paramNameType" use="required"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  
  <!-- Define timeSpanParamType -->
  <xs:complexType name="timeSpanParamType">
    <xs:simpleContent>
      <xs:restriction base="stringParamType">
        <xs:pattern value="([\d]{1,5}\:)?(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]"/>
        <xs:attribute name="name" type="common:paramNameType" use="required"/>
      </xs:restriction>
    </xs:simpleContent>
  </xs:complexType>
  
  <!-- Define uintParamType -->
  <xs:complexType name="uintParamType">
    <xs:simpleContent>
      <xs:extension base="xs:unsignedInt">
        <xs:attribute name="name" type="common:paramNameType" use="required"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  
  <!-- Define uint16ParamType -->
  <xs:complexType name="uint16ParamType">
    <xs:simpleContent>
      <xs:extension base="xs:unsignedShort">
        <xs:attribute name="name" type="common:paramNameType" use="required"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  
  <!-- Define uint32ParamType -->
  <xs:complexType name="uint32ParamType">
    <xs:simpleContent>
      <xs:extension base="xs:unsignedInt">
        <xs:attribute name="name" type="common:paramNameType" use="required"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  
  <!-- Define uint64ParamType -->
  <xs:complexType name="uint64ParamType">
    <xs:simpleContent>
      <xs:extension base="xs:unsignedLong">
        <xs:attribute name="name" type="common:paramNameType" use="required"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  
  <!-- Define ulongParamType -->
  <xs:complexType name="ulongParamType">
    <xs:simpleContent>
      <xs:extension base="xs:unsignedLong">
        <xs:attribute name="name" type="common:paramNameType" use="required"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  
  <!-- Define ushortParamType -->
  <xs:complexType name="ushortParamType">
    <xs:simpleContent>
      <xs:extension base="xs:unsignedShort">
        <xs:attribute name="name" type="common:paramNameType" use="required"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  
</xs:schema>
