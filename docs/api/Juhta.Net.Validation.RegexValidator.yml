### YamlMime:ManagedReference
items:
- uid: Juhta.Net.Validation.RegexValidator
  commentId: T:Juhta.Net.Validation.RegexValidator
  id: RegexValidator
  parent: Juhta.Net.Validation
  children:
  - Juhta.Net.Validation.RegexValidator.#ctor(System.String)
  - Juhta.Net.Validation.RegexValidator.#ctor(System.String,Juhta.Net.Common.ErrorMessage)
  - Juhta.Net.Validation.RegexValidator.#ctor(System.String,System.Text.RegularExpressions.RegexOptions)
  - Juhta.Net.Validation.RegexValidator.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,Juhta.Net.Common.ErrorMessage)
  - Juhta.Net.Validation.RegexValidator.#ctor(System.String[],System.Text.RegularExpressions.RegexOptions,Juhta.Net.Validation.RegexValidator.PatternMatchMode,Juhta.Net.Common.ErrorMessage)
  - Juhta.Net.Validation.RegexValidator.Validate(System.String)
  langs:
  - csharp
  - vb
  name: RegexValidator
  nameWithType: RegexValidator
  fullName: Juhta.Net.Validation.RegexValidator
  type: Class
  source:
    remote:
      path: Source/Juhta.Net/Validation/RegexValidator.cs
      branch: Dev
      repo: https://github.com/jlahteen/juhta.net
    id: RegexValidator
    path: ../../Juhta.NET/Source/Juhta.Net/Validation/RegexValidator.cs
    startLine: 18
  assemblies:
  - Juhta.Net
  namespace: Juhta.Net.Validation
  summary: "\nDefines a validator class that can validate string values based on a regular expression.\n"
  example: []
  syntax:
    content: 'public class RegexValidator : IStringValidator, IValidator<string>'
    content.vb: >-
      Public Class RegexValidator

          Implements IStringValidator, IValidator(Of String)
  inheritance:
  - System.Object
  implements:
  - Juhta.Net.Validation.IStringValidator
  - Juhta.Net.Validation.IValidator{System.String}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Juhta.Net.Validation.RegexValidator.#ctor(System.String)
  commentId: M:Juhta.Net.Validation.RegexValidator.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Juhta.Net.Validation.RegexValidator
  langs:
  - csharp
  - vb
  name: RegexValidator(String)
  nameWithType: RegexValidator.RegexValidator(String)
  fullName: Juhta.Net.Validation.RegexValidator.RegexValidator(System.String)
  type: Constructor
  source:
    remote:
      path: Source/Juhta.Net/Validation/RegexValidator.cs
      branch: Dev
      repo: https://github.com/jlahteen/juhta.net
    id: .ctor
    path: ../../Juhta.NET/Source/Juhta.Net/Validation/RegexValidator.cs
    startLine: 26
  assemblies:
  - Juhta.Net
  namespace: Juhta.Net.Validation
  summary: "\nInitializes a new instance.\n"
  example: []
  syntax:
    content: public RegexValidator(string pattern)
    parameters:
    - id: pattern
      type: System.String
      description: Specifies a regular expression pattern.
    content.vb: Public Sub New(pattern As String)
  overload: Juhta.Net.Validation.RegexValidator.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Juhta.Net.Validation.RegexValidator.#ctor(System.String,Juhta.Net.Common.ErrorMessage)
  commentId: M:Juhta.Net.Validation.RegexValidator.#ctor(System.String,Juhta.Net.Common.ErrorMessage)
  id: '#ctor(System.String,Juhta.Net.Common.ErrorMessage)'
  parent: Juhta.Net.Validation.RegexValidator
  langs:
  - csharp
  - vb
  name: RegexValidator(String, ErrorMessage)
  nameWithType: RegexValidator.RegexValidator(String, ErrorMessage)
  fullName: Juhta.Net.Validation.RegexValidator.RegexValidator(System.String, Juhta.Net.Common.ErrorMessage)
  type: Constructor
  source:
    remote:
      path: Source/Juhta.Net/Validation/RegexValidator.cs
      branch: Dev
      repo: https://github.com/jlahteen/juhta.net
    id: .ctor
    path: ../../Juhta.NET/Source/Juhta.Net/Validation/RegexValidator.cs
    startLine: 35
  assemblies:
  - Juhta.Net
  namespace: Juhta.Net.Validation
  summary: "\nInitializes a new instance.\n"
  example: []
  syntax:
    content: public RegexValidator(string pattern, ErrorMessage errorMessage)
    parameters:
    - id: pattern
      type: System.String
      description: Specifies a regular expression pattern.
    - id: errorMessage
      type: Juhta.Net.Common.ErrorMessage
      description: Specifies an error message to use in validation errors.
    content.vb: Public Sub New(pattern As String, errorMessage As ErrorMessage)
  overload: Juhta.Net.Validation.RegexValidator.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Juhta.Net.Validation.RegexValidator.#ctor(System.String,System.Text.RegularExpressions.RegexOptions)
  commentId: M:Juhta.Net.Validation.RegexValidator.#ctor(System.String,System.Text.RegularExpressions.RegexOptions)
  id: '#ctor(System.String,System.Text.RegularExpressions.RegexOptions)'
  parent: Juhta.Net.Validation.RegexValidator
  langs:
  - csharp
  - vb
  name: RegexValidator(String, RegexOptions)
  nameWithType: RegexValidator.RegexValidator(String, RegexOptions)
  fullName: Juhta.Net.Validation.RegexValidator.RegexValidator(System.String, System.Text.RegularExpressions.RegexOptions)
  type: Constructor
  source:
    remote:
      path: Source/Juhta.Net/Validation/RegexValidator.cs
      branch: Dev
      repo: https://github.com/jlahteen/juhta.net
    id: .ctor
    path: ../../Juhta.NET/Source/Juhta.Net/Validation/RegexValidator.cs
    startLine: 44
  assemblies:
  - Juhta.Net
  namespace: Juhta.Net.Validation
  summary: "\nInitializes a new instance.\n"
  example: []
  syntax:
    content: public RegexValidator(string pattern, RegexOptions options)
    parameters:
    - id: pattern
      type: System.String
      description: Specifies a regular expression pattern.
    - id: options
      type: System.Text.RegularExpressions.RegexOptions
      description: Specifies a bitwise combination of regular expression options.
    content.vb: Public Sub New(pattern As String, options As RegexOptions)
  overload: Juhta.Net.Validation.RegexValidator.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Juhta.Net.Validation.RegexValidator.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,Juhta.Net.Common.ErrorMessage)
  commentId: M:Juhta.Net.Validation.RegexValidator.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,Juhta.Net.Common.ErrorMessage)
  id: '#ctor(System.String,System.Text.RegularExpressions.RegexOptions,Juhta.Net.Common.ErrorMessage)'
  parent: Juhta.Net.Validation.RegexValidator
  langs:
  - csharp
  - vb
  name: RegexValidator(String, RegexOptions, ErrorMessage)
  nameWithType: RegexValidator.RegexValidator(String, RegexOptions, ErrorMessage)
  fullName: Juhta.Net.Validation.RegexValidator.RegexValidator(System.String, System.Text.RegularExpressions.RegexOptions, Juhta.Net.Common.ErrorMessage)
  type: Constructor
  source:
    remote:
      path: Source/Juhta.Net/Validation/RegexValidator.cs
      branch: Dev
      repo: https://github.com/jlahteen/juhta.net
    id: .ctor
    path: ../../Juhta.NET/Source/Juhta.Net/Validation/RegexValidator.cs
    startLine: 54
  assemblies:
  - Juhta.Net
  namespace: Juhta.Net.Validation
  summary: "\nInitializes a new instance.\n"
  example: []
  syntax:
    content: public RegexValidator(string pattern, RegexOptions options, ErrorMessage errorMessage)
    parameters:
    - id: pattern
      type: System.String
      description: Specifies a regular expression pattern.
    - id: options
      type: System.Text.RegularExpressions.RegexOptions
      description: Specifies a bitwise combination of regular expression options.
    - id: errorMessage
      type: Juhta.Net.Common.ErrorMessage
      description: Specifies an error message to use in validation errors.
    content.vb: Public Sub New(pattern As String, options As RegexOptions, errorMessage As ErrorMessage)
  overload: Juhta.Net.Validation.RegexValidator.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Juhta.Net.Validation.RegexValidator.Validate(System.String)
  commentId: M:Juhta.Net.Validation.RegexValidator.Validate(System.String)
  id: Validate(System.String)
  parent: Juhta.Net.Validation.RegexValidator
  langs:
  - csharp
  - vb
  name: Validate(String)
  nameWithType: RegexValidator.Validate(String)
  fullName: Juhta.Net.Validation.RegexValidator.Validate(System.String)
  type: Method
  source:
    remote:
      path: Source/Juhta.Net/Validation/RegexValidator.cs
      branch: Dev
      repo: https://github.com/jlahteen/juhta.net
    id: Validate
    path: ../../Juhta.NET/Source/Juhta.Net/Validation/RegexValidator.cs
    startLine: 65
  assemblies:
  - Juhta.Net
  namespace: Juhta.Net.Validation
  summary: "\nSee <xref href=\"Juhta.Net.Validation.IValidator%601.Validate(%600)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public virtual void Validate(string value)
    parameters:
    - id: value
      type: System.String
    content.vb: Public Overridable Sub Validate(value As String)
  overload: Juhta.Net.Validation.RegexValidator.Validate*
  implements:
  - Juhta.Net.Validation.IValidator{System.String}.Validate(System.String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Juhta.Net.Validation.RegexValidator.#ctor(System.String[],System.Text.RegularExpressions.RegexOptions,Juhta.Net.Validation.RegexValidator.PatternMatchMode,Juhta.Net.Common.ErrorMessage)
  commentId: M:Juhta.Net.Validation.RegexValidator.#ctor(System.String[],System.Text.RegularExpressions.RegexOptions,Juhta.Net.Validation.RegexValidator.PatternMatchMode,Juhta.Net.Common.ErrorMessage)
  id: '#ctor(System.String[],System.Text.RegularExpressions.RegexOptions,Juhta.Net.Validation.RegexValidator.PatternMatchMode,Juhta.Net.Common.ErrorMessage)'
  parent: Juhta.Net.Validation.RegexValidator
  langs:
  - csharp
  - vb
  name: RegexValidator(String[], RegexOptions, RegexValidator.PatternMatchMode, ErrorMessage)
  nameWithType: RegexValidator.RegexValidator(String[], RegexOptions, RegexValidator.PatternMatchMode, ErrorMessage)
  fullName: Juhta.Net.Validation.RegexValidator.RegexValidator(System.String[], System.Text.RegularExpressions.RegexOptions, Juhta.Net.Validation.RegexValidator.PatternMatchMode, Juhta.Net.Common.ErrorMessage)
  type: Constructor
  source:
    remote:
      path: Source/Juhta.Net/Validation/RegexValidator.cs
      branch: Dev
      repo: https://github.com/jlahteen/juhta.net
    id: .ctor
    path: ../../Juhta.NET/Source/Juhta.Net/Validation/RegexValidator.cs
    startLine: 122
  assemblies:
  - Juhta.Net
  namespace: Juhta.Net.Validation
  summary: "\nInitializes a new instance.\n"
  example: []
  syntax:
    content: protected RegexValidator(string[] patterns, RegexOptions options, RegexValidator.PatternMatchMode patternMatchMode, ErrorMessage errorMessage)
    parameters:
    - id: patterns
      type: System.String[]
      description: Specifies an array of regular expression patterns.
    - id: options
      type: System.Text.RegularExpressions.RegexOptions
      description: Specifies a bitwise combination of regular expression options.
    - id: patternMatchMode
      type: Juhta.Net.Validation.RegexValidator.PatternMatchMode
      description: >-
        Specifies a pattern match mode determining how many of the specified regular

        expression patterns must match for a successful validation.
    - id: errorMessage
      type: Juhta.Net.Common.ErrorMessage
      description: >-
        Specifies an error message to use in validation errors. The message can contain

        a placeholder for a value to validate.
    content.vb: Protected Sub New(patterns As String(), options As RegexOptions, patternMatchMode As RegexValidator.PatternMatchMode, errorMessage As ErrorMessage)
  overload: Juhta.Net.Validation.RegexValidator.#ctor*
  nameWithType.vb: RegexValidator.RegexValidator(String(), RegexOptions, RegexValidator.PatternMatchMode, ErrorMessage)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Juhta.Net.Validation.RegexValidator.RegexValidator(System.String(), System.Text.RegularExpressions.RegexOptions, Juhta.Net.Validation.RegexValidator.PatternMatchMode, Juhta.Net.Common.ErrorMessage)
  name.vb: RegexValidator(String(), RegexOptions, RegexValidator.PatternMatchMode, ErrorMessage)
references:
- uid: Juhta.Net.Validation
  commentId: N:Juhta.Net.Validation
  isExternal: false
  name: Juhta.Net.Validation
  nameWithType: Juhta.Net.Validation
  fullName: Juhta.Net.Validation
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Juhta.Net.Validation.IStringValidator
  commentId: T:Juhta.Net.Validation.IStringValidator
  parent: Juhta.Net.Validation
  isExternal: false
  name: IStringValidator
  nameWithType: IStringValidator
  fullName: Juhta.Net.Validation.IStringValidator
- uid: Juhta.Net.Validation.IValidator{System.String}
  commentId: T:Juhta.Net.Validation.IValidator{System.String}
  parent: Juhta.Net.Validation
  definition: Juhta.Net.Validation.IValidator`1
  name: IValidator<String>
  nameWithType: IValidator<String>
  fullName: Juhta.Net.Validation.IValidator<System.String>
  nameWithType.vb: IValidator(Of String)
  fullName.vb: Juhta.Net.Validation.IValidator(Of System.String)
  name.vb: IValidator(Of String)
  spec.csharp:
  - uid: Juhta.Net.Validation.IValidator`1
    name: IValidator
    nameWithType: IValidator
    fullName: Juhta.Net.Validation.IValidator
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Juhta.Net.Validation.IValidator`1
    name: IValidator
    nameWithType: IValidator
    fullName: Juhta.Net.Validation.IValidator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Juhta.Net.Validation.IValidator`1
  commentId: T:Juhta.Net.Validation.IValidator`1
  isExternal: false
  name: IValidator<T>
  nameWithType: IValidator<T>
  fullName: Juhta.Net.Validation.IValidator<T>
  nameWithType.vb: IValidator(Of T)
  fullName.vb: Juhta.Net.Validation.IValidator(Of T)
  name.vb: IValidator(Of T)
  spec.csharp:
  - uid: Juhta.Net.Validation.IValidator`1
    name: IValidator
    nameWithType: IValidator
    fullName: Juhta.Net.Validation.IValidator
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Juhta.Net.Validation.IValidator`1
    name: IValidator
    nameWithType: IValidator
    fullName: Juhta.Net.Validation.IValidator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Juhta.Net.Validation.RegexValidator.#ctor*
  commentId: Overload:Juhta.Net.Validation.RegexValidator.#ctor
  isExternal: false
  name: RegexValidator
  nameWithType: RegexValidator.RegexValidator
  fullName: Juhta.Net.Validation.RegexValidator.RegexValidator
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Juhta.Net.Common.ErrorMessage
  commentId: T:Juhta.Net.Common.ErrorMessage
  parent: Juhta.Net.Common
  isExternal: false
  name: ErrorMessage
  nameWithType: ErrorMessage
  fullName: Juhta.Net.Common.ErrorMessage
- uid: Juhta.Net.Common
  commentId: N:Juhta.Net.Common
  isExternal: false
  name: Juhta.Net.Common
  nameWithType: Juhta.Net.Common
  fullName: Juhta.Net.Common
- uid: System.Text.RegularExpressions.RegexOptions
  commentId: T:System.Text.RegularExpressions.RegexOptions
  parent: System.Text.RegularExpressions
  isExternal: true
  name: RegexOptions
  nameWithType: RegexOptions
  fullName: System.Text.RegularExpressions.RegexOptions
- uid: System.Text.RegularExpressions
  commentId: N:System.Text.RegularExpressions
  isExternal: false
  name: System.Text.RegularExpressions
  nameWithType: System.Text.RegularExpressions
  fullName: System.Text.RegularExpressions
- uid: Juhta.Net.Validation.IValidator`1.Validate(`0)
  commentId: M:Juhta.Net.Validation.IValidator`1.Validate(`0)
  isExternal: false
  name: Validate(T)
  nameWithType: IValidator<T>.Validate(T)
  fullName: Juhta.Net.Validation.IValidator<T>.Validate(T)
  nameWithType.vb: IValidator(Of T).Validate(T)
  fullName.vb: Juhta.Net.Validation.IValidator(Of T).Validate(T)
  spec.csharp:
  - uid: Juhta.Net.Validation.IValidator`1.Validate(`0)
    name: Validate
    nameWithType: IValidator<T>.Validate
    fullName: Juhta.Net.Validation.IValidator<T>.Validate
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Juhta.Net.Validation.IValidator`1.Validate(`0)
    name: Validate
    nameWithType: IValidator(Of T).Validate
    fullName: Juhta.Net.Validation.IValidator(Of T).Validate
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Juhta.Net.Validation.RegexValidator.Validate*
  commentId: Overload:Juhta.Net.Validation.RegexValidator.Validate
  isExternal: false
  name: Validate
  nameWithType: RegexValidator.Validate
  fullName: Juhta.Net.Validation.RegexValidator.Validate
- uid: Juhta.Net.Validation.IValidator{System.String}.Validate(System.String)
  commentId: M:Juhta.Net.Validation.IValidator{System.String}.Validate(System.String)
  parent: Juhta.Net.Validation.IValidator{System.String}
  definition: Juhta.Net.Validation.IValidator`1.Validate(`0)
  name: Validate(String)
  nameWithType: IValidator<String>.Validate(String)
  fullName: Juhta.Net.Validation.IValidator<System.String>.Validate(System.String)
  nameWithType.vb: IValidator(Of String).Validate(String)
  fullName.vb: Juhta.Net.Validation.IValidator(Of System.String).Validate(System.String)
  spec.csharp:
  - uid: Juhta.Net.Validation.IValidator`1.Validate(`0)
    name: Validate
    nameWithType: IValidator<String>.Validate
    fullName: Juhta.Net.Validation.IValidator<System.String>.Validate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Juhta.Net.Validation.IValidator`1.Validate(`0)
    name: Validate
    nameWithType: IValidator(Of String).Validate
    fullName: Juhta.Net.Validation.IValidator(Of System.String).Validate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String[]
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Juhta.Net.Validation.RegexValidator.PatternMatchMode
  commentId: T:Juhta.Net.Validation.RegexValidator.PatternMatchMode
  parent: Juhta.Net.Validation
  isExternal: false
  name: RegexValidator.PatternMatchMode
  nameWithType: RegexValidator.PatternMatchMode
  fullName: Juhta.Net.Validation.RegexValidator.PatternMatchMode
