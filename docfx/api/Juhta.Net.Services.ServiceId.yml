### YamlMime:ManagedReference
items:
- uid: Juhta.Net.Services.ServiceId
  commentId: T:Juhta.Net.Services.ServiceId
  id: ServiceId
  parent: Juhta.Net.Services
  children:
  - Juhta.Net.Services.ServiceId.#ctor(System.String)
  - Juhta.Net.Services.ServiceId.#ctor(System.String,System.String)
  - Juhta.Net.Services.ServiceId.Scheme
  - Juhta.Net.Services.ServiceId.Specifier
  - Juhta.Net.Services.ServiceId.Value
  langs:
  - csharp
  - vb
  name: ServiceId
  nameWithType: ServiceId
  fullName: Juhta.Net.Services.ServiceId
  type: Class
  source:
    remote:
      path: src/Juhta.Net/Services/ServiceId.cs
      branch: develop
      repo: https://github.com/jlahteen/juhta.net
    id: ServiceId
    path: ../src/Juhta.Net/Services/ServiceId.cs
    startLine: 17
  assemblies:
  - Juhta.Net
  namespace: Juhta.Net.Services
  summary: "\nDefines an identifier class for dependency injection services. A service identifier consists of two parts,\nscheme and specifier, which are separated by a colon. Type binded services can be defined by the &apos;type&apos; scheme\nand name binded by the &apos;name&apos; scheme.\n"
  example: []
  syntax:
    content: public class ServiceId
    content.vb: Public Class ServiceId
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Juhta.Net.Services.ServiceId.#ctor(System.String)
  commentId: M:Juhta.Net.Services.ServiceId.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Juhta.Net.Services.ServiceId
  langs:
  - csharp
  - vb
  name: ServiceId(String)
  nameWithType: ServiceId.ServiceId(String)
  fullName: Juhta.Net.Services.ServiceId.ServiceId(System.String)
  type: Constructor
  source:
    remote:
      path: src/Juhta.Net/Services/ServiceId.cs
      branch: develop
      repo: https://github.com/jlahteen/juhta.net
    id: .ctor
    path: ../src/Juhta.Net/Services/ServiceId.cs
    startLine: 25
  assemblies:
  - Juhta.Net
  namespace: Juhta.Net.Services
  summary: "\nInitializes a new instance.\n"
  example: []
  syntax:
    content: public ServiceId(string serviceId)
    parameters:
    - id: serviceId
      type: System.String
      description: Specifies a service identifier as a string.
    content.vb: Public Sub New(serviceId As String)
  overload: Juhta.Net.Services.ServiceId.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Juhta.Net.Services.ServiceId.#ctor(System.String,System.String)
  commentId: M:Juhta.Net.Services.ServiceId.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: Juhta.Net.Services.ServiceId
  langs:
  - csharp
  - vb
  name: ServiceId(String, String)
  nameWithType: ServiceId.ServiceId(String, String)
  fullName: Juhta.Net.Services.ServiceId.ServiceId(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/Juhta.Net/Services/ServiceId.cs
      branch: develop
      repo: https://github.com/jlahteen/juhta.net
    id: .ctor
    path: ../src/Juhta.Net/Services/ServiceId.cs
    startLine: 45
  assemblies:
  - Juhta.Net
  namespace: Juhta.Net.Services
  summary: "\nInitializes a new instance.\n"
  example: []
  syntax:
    content: public ServiceId(string scheme, string specifier)
    parameters:
    - id: scheme
      type: System.String
      description: Specifies a service identifier scheme.
    - id: specifier
      type: System.String
      description: Specifies a service identifier specifier.
    content.vb: Public Sub New(scheme As String, specifier As String)
  overload: Juhta.Net.Services.ServiceId.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Juhta.Net.Services.ServiceId.Scheme
  commentId: P:Juhta.Net.Services.ServiceId.Scheme
  id: Scheme
  parent: Juhta.Net.Services.ServiceId
  langs:
  - csharp
  - vb
  name: Scheme
  nameWithType: ServiceId.Scheme
  fullName: Juhta.Net.Services.ServiceId.Scheme
  type: Property
  source:
    remote:
      path: src/Juhta.Net/Services/ServiceId.cs
      branch: develop
      repo: https://github.com/jlahteen/juhta.net
    id: Scheme
    path: ../src/Juhta.Net/Services/ServiceId.cs
    startLine: 65
  assemblies:
  - Juhta.Net
  namespace: Juhta.Net.Services
  summary: "\nGets the scheme part of the service identifier.\n"
  example: []
  syntax:
    content: public string Scheme { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Scheme As String
  overload: Juhta.Net.Services.ServiceId.Scheme*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Juhta.Net.Services.ServiceId.Specifier
  commentId: P:Juhta.Net.Services.ServiceId.Specifier
  id: Specifier
  parent: Juhta.Net.Services.ServiceId
  langs:
  - csharp
  - vb
  name: Specifier
  nameWithType: ServiceId.Specifier
  fullName: Juhta.Net.Services.ServiceId.Specifier
  type: Property
  source:
    remote:
      path: src/Juhta.Net/Services/ServiceId.cs
      branch: develop
      repo: https://github.com/jlahteen/juhta.net
    id: Specifier
    path: ../src/Juhta.Net/Services/ServiceId.cs
    startLine: 73
  assemblies:
  - Juhta.Net
  namespace: Juhta.Net.Services
  summary: "\nGets the specifier part of the service identifier.\n"
  example: []
  syntax:
    content: public string Specifier { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Specifier As String
  overload: Juhta.Net.Services.ServiceId.Specifier*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Juhta.Net.Services.ServiceId.Value
  commentId: P:Juhta.Net.Services.ServiceId.Value
  id: Value
  parent: Juhta.Net.Services.ServiceId
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: ServiceId.Value
  fullName: Juhta.Net.Services.ServiceId.Value
  type: Property
  source:
    remote:
      path: src/Juhta.Net/Services/ServiceId.cs
      branch: develop
      repo: https://github.com/jlahteen/juhta.net
    id: Value
    path: ../src/Juhta.Net/Services/ServiceId.cs
    startLine: 81
  assemblies:
  - Juhta.Net
  namespace: Juhta.Net.Services
  summary: "\nGets the service identifier as a string.\n"
  example: []
  syntax:
    content: public string Value { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Value As String
  overload: Juhta.Net.Services.ServiceId.Value*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Juhta.Net.Services
  commentId: N:Juhta.Net.Services
  isExternal: false
  name: Juhta.Net.Services
  nameWithType: Juhta.Net.Services
  fullName: Juhta.Net.Services
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Juhta.Net.Services.ServiceId.#ctor*
  commentId: Overload:Juhta.Net.Services.ServiceId.#ctor
  isExternal: false
  name: ServiceId
  nameWithType: ServiceId.ServiceId
  fullName: Juhta.Net.Services.ServiceId.ServiceId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Juhta.Net.Services.ServiceId.Scheme*
  commentId: Overload:Juhta.Net.Services.ServiceId.Scheme
  isExternal: false
  name: Scheme
  nameWithType: ServiceId.Scheme
  fullName: Juhta.Net.Services.ServiceId.Scheme
- uid: Juhta.Net.Services.ServiceId.Specifier*
  commentId: Overload:Juhta.Net.Services.ServiceId.Specifier
  isExternal: false
  name: Specifier
  nameWithType: ServiceId.Specifier
  fullName: Juhta.Net.Services.ServiceId.Specifier
- uid: Juhta.Net.Services.ServiceId.Value*
  commentId: Overload:Juhta.Net.Services.ServiceId.Value
  isExternal: false
  name: Value
  nameWithType: ServiceId.Value
  fullName: Juhta.Net.Services.ServiceId.Value
