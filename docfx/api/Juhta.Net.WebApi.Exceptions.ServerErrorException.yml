### YamlMime:ManagedReference
items:
- uid: Juhta.Net.WebApi.Exceptions.ServerErrorException
  commentId: T:Juhta.Net.WebApi.Exceptions.ServerErrorException
  id: ServerErrorException
  parent: Juhta.Net.WebApi.Exceptions
  children:
  - Juhta.Net.WebApi.Exceptions.ServerErrorException.#ctor(Juhta.Net.WebApi.Exceptions.ServerErrorResponse)
  - Juhta.Net.WebApi.Exceptions.ServerErrorException.#ctor(System.Net.HttpStatusCode)
  - Juhta.Net.WebApi.Exceptions.ServerErrorException.#ctor(System.Net.HttpStatusCode,System.String)
  - Juhta.Net.WebApi.Exceptions.ServerErrorException.#ctor(System.Net.HttpStatusCode,System.String,System.Exception)
  - Juhta.Net.WebApi.Exceptions.ServerErrorException.ErrorMessage
  - Juhta.Net.WebApi.Exceptions.ServerErrorException.ToServerErrorResponse
  langs:
  - csharp
  - vb
  name: ServerErrorException
  nameWithType: ServerErrorException
  fullName: Juhta.Net.WebApi.Exceptions.ServerErrorException
  type: Class
  source:
    remote:
      path: src/Juhta.Net.WebApi.Exceptions/ServerErrorException.cs
      branch: release/v1.1.0
      repo: https://github.com/jlahteen/juhta.net.git
    id: ServerErrorException
    path: ../src/Juhta.Net.WebApi.Exceptions/ServerErrorException.cs
    startLine: 16
  assemblies:
  - Juhta.Net.WebApi.Exceptions
  namespace: Juhta.Net.WebApi.Exceptions
  summary: "\nDefines an abstract base class for the server error Web API exceptions.\n"
  example: []
  syntax:
    content: 'public abstract class ServerErrorException : WebApiException, ISerializable'
    content.vb: >-
      Public MustInherit Class ServerErrorException

          Inherits WebApiException

          Implements ISerializable
  inheritance:
  - System.Object
  - System.Exception
  - Juhta.Net.WebApi.Exceptions.WebApiException
  derivedClasses:
  - Juhta.Net.WebApi.Exceptions.ServerErrors.BadGatewayException
  - Juhta.Net.WebApi.Exceptions.ServerErrors.GatewayTimeoutException
  - Juhta.Net.WebApi.Exceptions.ServerErrors.HttpVersionNotSupportedException
  - Juhta.Net.WebApi.Exceptions.ServerErrors.InternalServerErrorException
  - Juhta.Net.WebApi.Exceptions.ServerErrors.NotImplementedException
  - Juhta.Net.WebApi.Exceptions.ServerErrors.ServiceUnavailableException
  implements:
  - System.Runtime.Serialization.ISerializable
  inheritedMembers:
  - Juhta.Net.WebApi.Exceptions.WebApiException.SetServiceName(System.String)
  - Juhta.Net.WebApi.Exceptions.WebApiException.ToString
  - Juhta.Net.WebApi.Exceptions.WebApiException.ServiceStack
  - Juhta.Net.WebApi.Exceptions.WebApiException.StatusCode
  - System.Exception.GetBaseException
  - System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Exception.GetType
  - System.Exception.Data
  - System.Exception.HelpLink
  - System.Exception.HResult
  - System.Exception.InnerException
  - System.Exception.Message
  - System.Exception.Source
  - System.Exception.StackTrace
  - System.Exception.TargetSite
  - System.Exception.SerializeObjectState
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Juhta.Net.WebApi.Exceptions.ServerErrorException.ToServerErrorResponse
  commentId: M:Juhta.Net.WebApi.Exceptions.ServerErrorException.ToServerErrorResponse
  id: ToServerErrorResponse
  parent: Juhta.Net.WebApi.Exceptions.ServerErrorException
  langs:
  - csharp
  - vb
  name: ToServerErrorResponse()
  nameWithType: ServerErrorException.ToServerErrorResponse()
  fullName: Juhta.Net.WebApi.Exceptions.ServerErrorException.ToServerErrorResponse()
  type: Method
  source:
    remote:
      path: src/Juhta.Net.WebApi.Exceptions/ServerErrorException.cs
      branch: release/v1.1.0
      repo: https://github.com/jlahteen/juhta.net.git
    id: ToServerErrorResponse
    path: ../src/Juhta.Net.WebApi.Exceptions/ServerErrorException.cs
    startLine: 24
  assemblies:
  - Juhta.Net.WebApi.Exceptions
  namespace: Juhta.Net.WebApi.Exceptions
  summary: "\nConverts this <xref href=\"Juhta.Net.WebApi.Exceptions.ServerErrorException\" data-throw-if-not-resolved=\"false\"></xref> object to a <xref href=\"Juhta.Net.WebApi.Exceptions.ServerErrorResponse\" data-throw-if-not-resolved=\"false\"></xref> object.\n"
  example: []
  syntax:
    content: public ServerErrorResponse ToServerErrorResponse()
    return:
      type: Juhta.Net.WebApi.Exceptions.ServerErrorResponse
      description: Returns the resulting <xref href="Juhta.Net.WebApi.Exceptions.ServerErrorResponse" data-throw-if-not-resolved="false"></xref> object.
    content.vb: Public Function ToServerErrorResponse As ServerErrorResponse
  overload: Juhta.Net.WebApi.Exceptions.ServerErrorException.ToServerErrorResponse*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Juhta.Net.WebApi.Exceptions.ServerErrorException.ErrorMessage
  commentId: P:Juhta.Net.WebApi.Exceptions.ServerErrorException.ErrorMessage
  id: ErrorMessage
  parent: Juhta.Net.WebApi.Exceptions.ServerErrorException
  langs:
  - csharp
  - vb
  name: ErrorMessage
  nameWithType: ServerErrorException.ErrorMessage
  fullName: Juhta.Net.WebApi.Exceptions.ServerErrorException.ErrorMessage
  type: Property
  source:
    remote:
      path: src/Juhta.Net.WebApi.Exceptions/ServerErrorException.cs
      branch: release/v1.1.0
      repo: https://github.com/jlahteen/juhta.net.git
    id: ErrorMessage
    path: ../src/Juhta.Net.WebApi.Exceptions/ServerErrorException.cs
    startLine: 44
  assemblies:
  - Juhta.Net.WebApi.Exceptions
  namespace: Juhta.Net.WebApi.Exceptions
  summary: "\nGets the error message related to this <xref href=\"Juhta.Net.WebApi.Exceptions.ServerErrorException\" data-throw-if-not-resolved=\"false\"></xref> instance.\n"
  example: []
  syntax:
    content: public string ErrorMessage { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property ErrorMessage As String
  overload: Juhta.Net.WebApi.Exceptions.ServerErrorException.ErrorMessage*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Juhta.Net.WebApi.Exceptions.ServerErrorException.#ctor(System.Net.HttpStatusCode)
  commentId: M:Juhta.Net.WebApi.Exceptions.ServerErrorException.#ctor(System.Net.HttpStatusCode)
  id: '#ctor(System.Net.HttpStatusCode)'
  parent: Juhta.Net.WebApi.Exceptions.ServerErrorException
  langs:
  - csharp
  - vb
  name: ServerErrorException(HttpStatusCode)
  nameWithType: ServerErrorException.ServerErrorException(HttpStatusCode)
  fullName: Juhta.Net.WebApi.Exceptions.ServerErrorException.ServerErrorException(System.Net.HttpStatusCode)
  type: Constructor
  source:
    remote:
      path: src/Juhta.Net.WebApi.Exceptions/ServerErrorException.cs
      branch: release/v1.1.0
      repo: https://github.com/jlahteen/juhta.net.git
    id: .ctor
    path: ../src/Juhta.Net.WebApi.Exceptions/ServerErrorException.cs
    startLine: 57
  assemblies:
  - Juhta.Net.WebApi.Exceptions
  namespace: Juhta.Net.WebApi.Exceptions
  summary: "\nInitializes a new instance.\n"
  example: []
  syntax:
    content: protected ServerErrorException(HttpStatusCode httpStatusCode)
    parameters:
    - id: httpStatusCode
      type: System.Net.HttpStatusCode
      description: Specifies an HTTP status code.
    content.vb: Protected Sub New(httpStatusCode As HttpStatusCode)
  overload: Juhta.Net.WebApi.Exceptions.ServerErrorException.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Juhta.Net.WebApi.Exceptions.ServerErrorException.#ctor(Juhta.Net.WebApi.Exceptions.ServerErrorResponse)
  commentId: M:Juhta.Net.WebApi.Exceptions.ServerErrorException.#ctor(Juhta.Net.WebApi.Exceptions.ServerErrorResponse)
  id: '#ctor(Juhta.Net.WebApi.Exceptions.ServerErrorResponse)'
  parent: Juhta.Net.WebApi.Exceptions.ServerErrorException
  langs:
  - csharp
  - vb
  name: ServerErrorException(ServerErrorResponse)
  nameWithType: ServerErrorException.ServerErrorException(ServerErrorResponse)
  fullName: Juhta.Net.WebApi.Exceptions.ServerErrorException.ServerErrorException(Juhta.Net.WebApi.Exceptions.ServerErrorResponse)
  type: Constructor
  source:
    remote:
      path: src/Juhta.Net.WebApi.Exceptions/ServerErrorException.cs
      branch: release/v1.1.0
      repo: https://github.com/jlahteen/juhta.net.git
    id: .ctor
    path: ../src/Juhta.Net.WebApi.Exceptions/ServerErrorException.cs
    startLine: 64
  assemblies:
  - Juhta.Net.WebApi.Exceptions
  namespace: Juhta.Net.WebApi.Exceptions
  summary: "\nInitializes a new instance.\n"
  example: []
  syntax:
    content: protected ServerErrorException(ServerErrorResponse serverErrorResponse)
    parameters:
    - id: serverErrorResponse
      type: Juhta.Net.WebApi.Exceptions.ServerErrorResponse
      description: Specifies a server error.
    content.vb: Protected Sub New(serverErrorResponse As ServerErrorResponse)
  overload: Juhta.Net.WebApi.Exceptions.ServerErrorException.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Juhta.Net.WebApi.Exceptions.ServerErrorException.#ctor(System.Net.HttpStatusCode,System.String)
  commentId: M:Juhta.Net.WebApi.Exceptions.ServerErrorException.#ctor(System.Net.HttpStatusCode,System.String)
  id: '#ctor(System.Net.HttpStatusCode,System.String)'
  parent: Juhta.Net.WebApi.Exceptions.ServerErrorException
  langs:
  - csharp
  - vb
  name: ServerErrorException(HttpStatusCode, String)
  nameWithType: ServerErrorException.ServerErrorException(HttpStatusCode, String)
  fullName: Juhta.Net.WebApi.Exceptions.ServerErrorException.ServerErrorException(System.Net.HttpStatusCode, System.String)
  type: Constructor
  source:
    remote:
      path: src/Juhta.Net.WebApi.Exceptions/ServerErrorException.cs
      branch: release/v1.1.0
      repo: https://github.com/jlahteen/juhta.net.git
    id: .ctor
    path: ../src/Juhta.Net.WebApi.Exceptions/ServerErrorException.cs
    startLine: 74
  assemblies:
  - Juhta.Net.WebApi.Exceptions
  namespace: Juhta.Net.WebApi.Exceptions
  summary: "\nInitializes a new instance.\n"
  example: []
  syntax:
    content: protected ServerErrorException(HttpStatusCode httpStatusCode, string message)
    parameters:
    - id: httpStatusCode
      type: System.Net.HttpStatusCode
      description: Specifies an HTTP status code.
    - id: message
      type: System.String
      description: Specifies an error message.
    content.vb: Protected Sub New(httpStatusCode As HttpStatusCode, message As String)
  overload: Juhta.Net.WebApi.Exceptions.ServerErrorException.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Juhta.Net.WebApi.Exceptions.ServerErrorException.#ctor(System.Net.HttpStatusCode,System.String,System.Exception)
  commentId: M:Juhta.Net.WebApi.Exceptions.ServerErrorException.#ctor(System.Net.HttpStatusCode,System.String,System.Exception)
  id: '#ctor(System.Net.HttpStatusCode,System.String,System.Exception)'
  parent: Juhta.Net.WebApi.Exceptions.ServerErrorException
  langs:
  - csharp
  - vb
  name: ServerErrorException(HttpStatusCode, String, Exception)
  nameWithType: ServerErrorException.ServerErrorException(HttpStatusCode, String, Exception)
  fullName: Juhta.Net.WebApi.Exceptions.ServerErrorException.ServerErrorException(System.Net.HttpStatusCode, System.String, System.Exception)
  type: Constructor
  source:
    remote:
      path: src/Juhta.Net.WebApi.Exceptions/ServerErrorException.cs
      branch: release/v1.1.0
      repo: https://github.com/jlahteen/juhta.net.git
    id: .ctor
    path: ../src/Juhta.Net.WebApi.Exceptions/ServerErrorException.cs
    startLine: 83
  assemblies:
  - Juhta.Net.WebApi.Exceptions
  namespace: Juhta.Net.WebApi.Exceptions
  summary: "\nInitializes a new instance.\n"
  example: []
  syntax:
    content: protected ServerErrorException(HttpStatusCode httpStatusCode, string message, Exception innerException)
    parameters:
    - id: httpStatusCode
      type: System.Net.HttpStatusCode
      description: Specifies an HTTP status code.
    - id: message
      type: System.String
      description: Specifies an error message.
    - id: innerException
      type: System.Exception
      description: Specifies an inner exception.
    content.vb: Protected Sub New(httpStatusCode As HttpStatusCode, message As String, innerException As Exception)
  overload: Juhta.Net.WebApi.Exceptions.ServerErrorException.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
references:
- uid: Juhta.Net.WebApi.Exceptions
  commentId: N:Juhta.Net.WebApi.Exceptions
  isExternal: false
  name: Juhta.Net.WebApi.Exceptions
  nameWithType: Juhta.Net.WebApi.Exceptions
  fullName: Juhta.Net.WebApi.Exceptions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: Juhta.Net.WebApi.Exceptions.WebApiException
  commentId: T:Juhta.Net.WebApi.Exceptions.WebApiException
  parent: Juhta.Net.WebApi.Exceptions
  isExternal: false
  name: WebApiException
  nameWithType: WebApiException
  fullName: Juhta.Net.WebApi.Exceptions.WebApiException
- uid: System.Runtime.Serialization.ISerializable
  commentId: T:System.Runtime.Serialization.ISerializable
  parent: System.Runtime.Serialization
  isExternal: true
  name: ISerializable
  nameWithType: ISerializable
  fullName: System.Runtime.Serialization.ISerializable
- uid: Juhta.Net.WebApi.Exceptions.WebApiException.SetServiceName(System.String)
  commentId: M:Juhta.Net.WebApi.Exceptions.WebApiException.SetServiceName(System.String)
  parent: Juhta.Net.WebApi.Exceptions.WebApiException
  isExternal: true
  name: SetServiceName(String)
  nameWithType: WebApiException.SetServiceName(String)
  fullName: Juhta.Net.WebApi.Exceptions.WebApiException.SetServiceName(System.String)
  spec.csharp:
  - uid: Juhta.Net.WebApi.Exceptions.WebApiException.SetServiceName(System.String)
    name: SetServiceName
    nameWithType: WebApiException.SetServiceName
    fullName: Juhta.Net.WebApi.Exceptions.WebApiException.SetServiceName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Juhta.Net.WebApi.Exceptions.WebApiException.SetServiceName(System.String)
    name: SetServiceName
    nameWithType: WebApiException.SetServiceName
    fullName: Juhta.Net.WebApi.Exceptions.WebApiException.SetServiceName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Juhta.Net.WebApi.Exceptions.WebApiException.ToString
  commentId: M:Juhta.Net.WebApi.Exceptions.WebApiException.ToString
  parent: Juhta.Net.WebApi.Exceptions.WebApiException
  isExternal: false
  name: ToString()
  nameWithType: WebApiException.ToString()
  fullName: Juhta.Net.WebApi.Exceptions.WebApiException.ToString()
  spec.csharp:
  - uid: Juhta.Net.WebApi.Exceptions.WebApiException.ToString
    name: ToString
    nameWithType: WebApiException.ToString
    fullName: Juhta.Net.WebApi.Exceptions.WebApiException.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Juhta.Net.WebApi.Exceptions.WebApiException.ToString
    name: ToString
    nameWithType: WebApiException.ToString
    fullName: Juhta.Net.WebApi.Exceptions.WebApiException.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Juhta.Net.WebApi.Exceptions.WebApiException.ServiceStack
  commentId: P:Juhta.Net.WebApi.Exceptions.WebApiException.ServiceStack
  parent: Juhta.Net.WebApi.Exceptions.WebApiException
  isExternal: false
  name: ServiceStack
  nameWithType: WebApiException.ServiceStack
  fullName: Juhta.Net.WebApi.Exceptions.WebApiException.ServiceStack
- uid: Juhta.Net.WebApi.Exceptions.WebApiException.StatusCode
  commentId: P:Juhta.Net.WebApi.Exceptions.WebApiException.StatusCode
  parent: Juhta.Net.WebApi.Exceptions.WebApiException
  isExternal: false
  name: StatusCode
  nameWithType: WebApiException.StatusCode
  fullName: Juhta.Net.WebApi.Exceptions.WebApiException.StatusCode
- uid: System.Exception.GetBaseException
  commentId: M:System.Exception.GetBaseException
  parent: System.Exception
  isExternal: true
  name: GetBaseException()
  nameWithType: Exception.GetBaseException()
  fullName: System.Exception.GetBaseException()
  spec.csharp:
  - uid: System.Exception.GetBaseException
    name: GetBaseException
    nameWithType: Exception.GetBaseException
    fullName: System.Exception.GetBaseException
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Exception.GetBaseException
    name: GetBaseException
    nameWithType: Exception.GetBaseException
    fullName: System.Exception.GetBaseException
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Exception
  isExternal: true
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: Exception.GetObjectData(SerializationInfo, StreamingContext)
  fullName: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  spec.csharp:
  - uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    nameWithType: Exception.GetObjectData
    fullName: System.Exception.GetObjectData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    nameWithType: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    nameWithType: Exception.GetObjectData
    fullName: System.Exception.GetObjectData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    nameWithType: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Exception.GetType
  commentId: M:System.Exception.GetType
  parent: System.Exception
  isExternal: true
  name: GetType()
  nameWithType: Exception.GetType()
  fullName: System.Exception.GetType()
  spec.csharp:
  - uid: System.Exception.GetType
    name: GetType
    nameWithType: Exception.GetType
    fullName: System.Exception.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Exception.GetType
    name: GetType
    nameWithType: Exception.GetType
    fullName: System.Exception.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Exception.Data
  commentId: P:System.Exception.Data
  parent: System.Exception
  isExternal: true
  name: Data
  nameWithType: Exception.Data
  fullName: System.Exception.Data
- uid: System.Exception.HelpLink
  commentId: P:System.Exception.HelpLink
  parent: System.Exception
  isExternal: true
  name: HelpLink
  nameWithType: Exception.HelpLink
  fullName: System.Exception.HelpLink
- uid: System.Exception.HResult
  commentId: P:System.Exception.HResult
  parent: System.Exception
  isExternal: true
  name: HResult
  nameWithType: Exception.HResult
  fullName: System.Exception.HResult
- uid: System.Exception.InnerException
  commentId: P:System.Exception.InnerException
  parent: System.Exception
  isExternal: true
  name: InnerException
  nameWithType: Exception.InnerException
  fullName: System.Exception.InnerException
- uid: System.Exception.Message
  commentId: P:System.Exception.Message
  parent: System.Exception
  isExternal: true
  name: Message
  nameWithType: Exception.Message
  fullName: System.Exception.Message
- uid: System.Exception.Source
  commentId: P:System.Exception.Source
  parent: System.Exception
  isExternal: true
  name: Source
  nameWithType: Exception.Source
  fullName: System.Exception.Source
- uid: System.Exception.StackTrace
  commentId: P:System.Exception.StackTrace
  parent: System.Exception
  isExternal: true
  name: StackTrace
  nameWithType: Exception.StackTrace
  fullName: System.Exception.StackTrace
- uid: System.Exception.TargetSite
  commentId: P:System.Exception.TargetSite
  parent: System.Exception
  isExternal: true
  name: TargetSite
  nameWithType: Exception.TargetSite
  fullName: System.Exception.TargetSite
- uid: System.Exception.SerializeObjectState
  commentId: E:System.Exception.SerializeObjectState
  parent: System.Exception
  isExternal: true
  name: SerializeObjectState
  nameWithType: Exception.SerializeObjectState
  fullName: System.Exception.SerializeObjectState
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Runtime.Serialization
  commentId: N:System.Runtime.Serialization
  isExternal: false
  name: System.Runtime.Serialization
  nameWithType: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
- uid: Juhta.Net.WebApi.Exceptions.ServerErrorException
  commentId: T:Juhta.Net.WebApi.Exceptions.ServerErrorException
  parent: Juhta.Net.WebApi.Exceptions
  isExternal: false
  name: ServerErrorException
  nameWithType: ServerErrorException
  fullName: Juhta.Net.WebApi.Exceptions.ServerErrorException
- uid: Juhta.Net.WebApi.Exceptions.ServerErrorResponse
  commentId: T:Juhta.Net.WebApi.Exceptions.ServerErrorResponse
  parent: Juhta.Net.WebApi.Exceptions
  isExternal: false
  name: ServerErrorResponse
  nameWithType: ServerErrorResponse
  fullName: Juhta.Net.WebApi.Exceptions.ServerErrorResponse
- uid: Juhta.Net.WebApi.Exceptions.ServerErrorException.ToServerErrorResponse*
  commentId: Overload:Juhta.Net.WebApi.Exceptions.ServerErrorException.ToServerErrorResponse
  isExternal: false
  name: ToServerErrorResponse
  nameWithType: ServerErrorException.ToServerErrorResponse
  fullName: Juhta.Net.WebApi.Exceptions.ServerErrorException.ToServerErrorResponse
- uid: Juhta.Net.WebApi.Exceptions.ServerErrorException.ErrorMessage*
  commentId: Overload:Juhta.Net.WebApi.Exceptions.ServerErrorException.ErrorMessage
  isExternal: false
  name: ErrorMessage
  nameWithType: ServerErrorException.ErrorMessage
  fullName: Juhta.Net.WebApi.Exceptions.ServerErrorException.ErrorMessage
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Juhta.Net.WebApi.Exceptions.ServerErrorException.#ctor*
  commentId: Overload:Juhta.Net.WebApi.Exceptions.ServerErrorException.#ctor
  isExternal: false
  name: ServerErrorException
  nameWithType: ServerErrorException.ServerErrorException
  fullName: Juhta.Net.WebApi.Exceptions.ServerErrorException.ServerErrorException
- uid: System.Net.HttpStatusCode
  commentId: T:System.Net.HttpStatusCode
  parent: System.Net
  isExternal: true
  name: HttpStatusCode
  nameWithType: HttpStatusCode
  fullName: System.Net.HttpStatusCode
- uid: System.Net
  commentId: N:System.Net
  isExternal: false
  name: System.Net
  nameWithType: System.Net
  fullName: System.Net
