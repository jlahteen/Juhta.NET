### YamlMime:ManagedReference
items:
- uid: Juhta.Net.Diagnostics.Trace
  commentId: T:Juhta.Net.Diagnostics.Trace
  id: Trace
  parent: Juhta.Net.Diagnostics
  children:
  - Juhta.Net.Diagnostics.Trace.AbsoluteIndent
  - Juhta.Net.Diagnostics.Trace.DecreaseRelativeIndent
  - Juhta.Net.Diagnostics.Trace.Flush
  - Juhta.Net.Diagnostics.Trace.IncreaseRelativeIndent
  - Juhta.Net.Diagnostics.Trace.IsTracingOn
  - Juhta.Net.Diagnostics.Trace.RelativeIndent
  - Juhta.Net.Diagnostics.Trace.TraceDirectory
  - Juhta.Net.Diagnostics.Trace.Write(System.String)
  - Juhta.Net.Diagnostics.Trace.Write(System.String,System.Object[])
  - Juhta.Net.Diagnostics.Trace.WriteBlockEnd
  - Juhta.Net.Diagnostics.Trace.WriteBlockStart
  - Juhta.Net.Diagnostics.Trace.WriteBlockStart(System.String)
  - Juhta.Net.Diagnostics.Trace.WriteConstructorEnd
  - Juhta.Net.Diagnostics.Trace.WriteConstructorEnd(System.String)
  - Juhta.Net.Diagnostics.Trace.WriteConstructorStart(System.String)
  - Juhta.Net.Diagnostics.Trace.WriteException(System.Exception)
  - Juhta.Net.Diagnostics.Trace.WriteGetPropertyEnd
  - Juhta.Net.Diagnostics.Trace.WriteGetPropertyEnd(System.Object)
  - Juhta.Net.Diagnostics.Trace.WriteGetPropertyEnd(System.String,System.String)
  - Juhta.Net.Diagnostics.Trace.WriteGetPropertyEnd(System.String,System.String,System.Object)
  - Juhta.Net.Diagnostics.Trace.WriteGetPropertyStart(System.String,System.String)
  - Juhta.Net.Diagnostics.Trace.WriteLabeledMessage(System.String,System.String)
  - Juhta.Net.Diagnostics.Trace.WriteLabeledMessage(System.String,System.String,System.Object[])
  - Juhta.Net.Diagnostics.Trace.WriteLine
  - Juhta.Net.Diagnostics.Trace.WriteLine(System.String)
  - Juhta.Net.Diagnostics.Trace.WriteLine(System.String,System.Object[])
  - Juhta.Net.Diagnostics.Trace.WriteMethodEnd
  - Juhta.Net.Diagnostics.Trace.WriteMethodEnd(System.Object)
  - Juhta.Net.Diagnostics.Trace.WriteMethodEnd(System.String,System.String)
  - Juhta.Net.Diagnostics.Trace.WriteMethodEnd(System.String,System.String,System.Object)
  - Juhta.Net.Diagnostics.Trace.WriteMethodStart(System.String,System.String)
  - Juhta.Net.Diagnostics.Trace.WriteObjectGraph(System.String,System.Object)
  - Juhta.Net.Diagnostics.Trace.WriteOperationEnd
  - Juhta.Net.Diagnostics.Trace.WriteOperationEnd(System.String)
  - Juhta.Net.Diagnostics.Trace.WriteOperationStart(System.String)
  - Juhta.Net.Diagnostics.Trace.WriteSetPropertyEnd
  - Juhta.Net.Diagnostics.Trace.WriteSetPropertyEnd(System.String,System.String)
  - Juhta.Net.Diagnostics.Trace.WriteSetPropertyStart(System.String,System.String)
  - Juhta.Net.Diagnostics.Trace.WriteSetPropertyStart(System.String,System.String,System.Object)
  langs:
  - csharp
  - vb
  name: Trace
  nameWithType: Trace
  fullName: Juhta.Net.Diagnostics.Trace
  type: Class
  source:
    remote:
      path: src/Juhta.Net.Diagnostics/Trace.cs
      branch: develop
      repo: https://github.com/jlahteen/juhta.net
    id: Trace
    path: ../src/Juhta.Net.Diagnostics/Trace.cs
    startLine: 24
  assemblies:
  - Juhta.Net.Diagnostics
  namespace: Juhta.Net.Diagnostics
  summary: "\nDefines a static class whose purpose is to simplify software tracing. If tracing is not switched on in the\nconfiguration, the methods of this class have no effect but return immediately. In case of tracing is switched\non, the methods of the class encapsulate tracing through the current trace writer. The current trace writer can\nbe an instance of any class that implements the <xref href=\"Juhta.Net.Diagnostics.ITraceWriter\" data-throw-if-not-resolved=\"false\"></xref> interface.\n"
  example: []
  syntax:
    content: public static class Trace
    content.vb: Public Module Trace
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Juhta.Net.Diagnostics.Trace.DecreaseRelativeIndent
  commentId: M:Juhta.Net.Diagnostics.Trace.DecreaseRelativeIndent
  id: DecreaseRelativeIndent
  parent: Juhta.Net.Diagnostics.Trace
  langs:
  - csharp
  - vb
  name: DecreaseRelativeIndent()
  nameWithType: Trace.DecreaseRelativeIndent()
  fullName: Juhta.Net.Diagnostics.Trace.DecreaseRelativeIndent()
  type: Method
  source:
    remote:
      path: src/Juhta.Net.Diagnostics/Trace.cs
      branch: develop
      repo: https://github.com/jlahteen/juhta.net
    id: DecreaseRelativeIndent
    path: ../src/Juhta.Net.Diagnostics/Trace.cs
    startLine: 31
  assemblies:
  - Juhta.Net.Diagnostics
  namespace: Juhta.Net.Diagnostics
  summary: "\nSee <xref href=\"Juhta.Net.Diagnostics.ITraceWriter.DecreaseRelativeIndent\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static void DecreaseRelativeIndent()
    content.vb: Public Shared Sub DecreaseRelativeIndent
  overload: Juhta.Net.Diagnostics.Trace.DecreaseRelativeIndent*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Juhta.Net.Diagnostics.Trace.Flush
  commentId: M:Juhta.Net.Diagnostics.Trace.Flush
  id: Flush
  parent: Juhta.Net.Diagnostics.Trace
  langs:
  - csharp
  - vb
  name: Flush()
  nameWithType: Trace.Flush()
  fullName: Juhta.Net.Diagnostics.Trace.Flush()
  type: Method
  source:
    remote:
      path: src/Juhta.Net.Diagnostics/Trace.cs
      branch: develop
      repo: https://github.com/jlahteen/juhta.net
    id: Flush
    path: ../src/Juhta.Net.Diagnostics/Trace.cs
    startLine: 42
  assemblies:
  - Juhta.Net.Diagnostics
  namespace: Juhta.Net.Diagnostics
  summary: "\nSee <xref href=\"Juhta.Net.Diagnostics.ITraceWriter.Flush\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static void Flush()
    content.vb: Public Shared Sub Flush
  overload: Juhta.Net.Diagnostics.Trace.Flush*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Juhta.Net.Diagnostics.Trace.IncreaseRelativeIndent
  commentId: M:Juhta.Net.Diagnostics.Trace.IncreaseRelativeIndent
  id: IncreaseRelativeIndent
  parent: Juhta.Net.Diagnostics.Trace
  langs:
  - csharp
  - vb
  name: IncreaseRelativeIndent()
  nameWithType: Trace.IncreaseRelativeIndent()
  fullName: Juhta.Net.Diagnostics.Trace.IncreaseRelativeIndent()
  type: Method
  source:
    remote:
      path: src/Juhta.Net.Diagnostics/Trace.cs
      branch: develop
      repo: https://github.com/jlahteen/juhta.net
    id: IncreaseRelativeIndent
    path: ../src/Juhta.Net.Diagnostics/Trace.cs
    startLine: 53
  assemblies:
  - Juhta.Net.Diagnostics
  namespace: Juhta.Net.Diagnostics
  summary: "\nSee <xref href=\"Juhta.Net.Diagnostics.ITraceWriter.IncreaseRelativeIndent\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static void IncreaseRelativeIndent()
    content.vb: Public Shared Sub IncreaseRelativeIndent
  overload: Juhta.Net.Diagnostics.Trace.IncreaseRelativeIndent*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Juhta.Net.Diagnostics.Trace.Write(System.String)
  commentId: M:Juhta.Net.Diagnostics.Trace.Write(System.String)
  id: Write(System.String)
  parent: Juhta.Net.Diagnostics.Trace
  langs:
  - csharp
  - vb
  name: Write(String)
  nameWithType: Trace.Write(String)
  fullName: Juhta.Net.Diagnostics.Trace.Write(System.String)
  type: Method
  source:
    remote:
      path: src/Juhta.Net.Diagnostics/Trace.cs
      branch: develop
      repo: https://github.com/jlahteen/juhta.net
    id: Write
    path: ../src/Juhta.Net.Diagnostics/Trace.cs
    startLine: 64
  assemblies:
  - Juhta.Net.Diagnostics
  namespace: Juhta.Net.Diagnostics
  summary: "\nSee <xref href=\"Juhta.Net.Diagnostics.ITraceWriter.Write(System.String)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static void Write(string s)
    parameters:
    - id: s
      type: System.String
    content.vb: Public Shared Sub Write(s As String)
  overload: Juhta.Net.Diagnostics.Trace.Write*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Juhta.Net.Diagnostics.Trace.Write(System.String,System.Object[])
  commentId: M:Juhta.Net.Diagnostics.Trace.Write(System.String,System.Object[])
  id: Write(System.String,System.Object[])
  parent: Juhta.Net.Diagnostics.Trace
  langs:
  - csharp
  - vb
  name: Write(String, Object[])
  nameWithType: Trace.Write(String, Object[])
  fullName: Juhta.Net.Diagnostics.Trace.Write(System.String, System.Object[])
  type: Method
  source:
    remote:
      path: src/Juhta.Net.Diagnostics/Trace.cs
      branch: develop
      repo: https://github.com/jlahteen/juhta.net
    id: Write
    path: ../src/Juhta.Net.Diagnostics/Trace.cs
    startLine: 75
  assemblies:
  - Juhta.Net.Diagnostics
  namespace: Juhta.Net.Diagnostics
  summary: "\nSee <xref href=\"Juhta.Net.Diagnostics.ITraceWriter.Write(System.String%2cSystem.Object%5b%5d)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static void Write(string format, params object[] args)
    parameters:
    - id: format
      type: System.String
    - id: args
      type: System.Object[]
    content.vb: Public Shared Sub Write(format As String, ParamArray args As Object())
  overload: Juhta.Net.Diagnostics.Trace.Write*
  nameWithType.vb: Trace.Write(String, Object())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Juhta.Net.Diagnostics.Trace.Write(System.String, System.Object())
  name.vb: Write(String, Object())
- uid: Juhta.Net.Diagnostics.Trace.WriteBlockEnd
  commentId: M:Juhta.Net.Diagnostics.Trace.WriteBlockEnd
  id: WriteBlockEnd
  parent: Juhta.Net.Diagnostics.Trace
  langs:
  - csharp
  - vb
  name: WriteBlockEnd()
  nameWithType: Trace.WriteBlockEnd()
  fullName: Juhta.Net.Diagnostics.Trace.WriteBlockEnd()
  type: Method
  source:
    remote:
      path: src/Juhta.Net.Diagnostics/Trace.cs
      branch: develop
      repo: https://github.com/jlahteen/juhta.net
    id: WriteBlockEnd
    path: ../src/Juhta.Net.Diagnostics/Trace.cs
    startLine: 86
  assemblies:
  - Juhta.Net.Diagnostics
  namespace: Juhta.Net.Diagnostics
  summary: "\nSee <xref href=\"Juhta.Net.Diagnostics.ITraceWriter.WriteBlockEnd\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static void WriteBlockEnd()
    content.vb: Public Shared Sub WriteBlockEnd
  overload: Juhta.Net.Diagnostics.Trace.WriteBlockEnd*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Juhta.Net.Diagnostics.Trace.WriteBlockStart
  commentId: M:Juhta.Net.Diagnostics.Trace.WriteBlockStart
  id: WriteBlockStart
  parent: Juhta.Net.Diagnostics.Trace
  langs:
  - csharp
  - vb
  name: WriteBlockStart()
  nameWithType: Trace.WriteBlockStart()
  fullName: Juhta.Net.Diagnostics.Trace.WriteBlockStart()
  type: Method
  source:
    remote:
      path: src/Juhta.Net.Diagnostics/Trace.cs
      branch: develop
      repo: https://github.com/jlahteen/juhta.net
    id: WriteBlockStart
    path: ../src/Juhta.Net.Diagnostics/Trace.cs
    startLine: 97
  assemblies:
  - Juhta.Net.Diagnostics
  namespace: Juhta.Net.Diagnostics
  summary: "\nSee <xref href=\"Juhta.Net.Diagnostics.ITraceWriter.WriteBlockStart\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static void WriteBlockStart()
    content.vb: Public Shared Sub WriteBlockStart
  overload: Juhta.Net.Diagnostics.Trace.WriteBlockStart*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Juhta.Net.Diagnostics.Trace.WriteBlockStart(System.String)
  commentId: M:Juhta.Net.Diagnostics.Trace.WriteBlockStart(System.String)
  id: WriteBlockStart(System.String)
  parent: Juhta.Net.Diagnostics.Trace
  langs:
  - csharp
  - vb
  name: WriteBlockStart(String)
  nameWithType: Trace.WriteBlockStart(String)
  fullName: Juhta.Net.Diagnostics.Trace.WriteBlockStart(System.String)
  type: Method
  source:
    remote:
      path: src/Juhta.Net.Diagnostics/Trace.cs
      branch: develop
      repo: https://github.com/jlahteen/juhta.net
    id: WriteBlockStart
    path: ../src/Juhta.Net.Diagnostics/Trace.cs
    startLine: 108
  assemblies:
  - Juhta.Net.Diagnostics
  namespace: Juhta.Net.Diagnostics
  summary: "\nSee <xref href=\"Juhta.Net.Diagnostics.ITraceWriter.WriteBlockStart(System.String)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static void WriteBlockStart(string description)
    parameters:
    - id: description
      type: System.String
    content.vb: Public Shared Sub WriteBlockStart(description As String)
  overload: Juhta.Net.Diagnostics.Trace.WriteBlockStart*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Juhta.Net.Diagnostics.Trace.WriteConstructorEnd
  commentId: M:Juhta.Net.Diagnostics.Trace.WriteConstructorEnd
  id: WriteConstructorEnd
  parent: Juhta.Net.Diagnostics.Trace
  langs:
  - csharp
  - vb
  name: WriteConstructorEnd()
  nameWithType: Trace.WriteConstructorEnd()
  fullName: Juhta.Net.Diagnostics.Trace.WriteConstructorEnd()
  type: Method
  source:
    remote:
      path: src/Juhta.Net.Diagnostics/Trace.cs
      branch: develop
      repo: https://github.com/jlahteen/juhta.net
    id: WriteConstructorEnd
    path: ../src/Juhta.Net.Diagnostics/Trace.cs
    startLine: 119
  assemblies:
  - Juhta.Net.Diagnostics
  namespace: Juhta.Net.Diagnostics
  summary: "\nSee <xref href=\"Juhta.Net.Diagnostics.ITraceWriter.WriteConstructorEnd\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static void WriteConstructorEnd()
    content.vb: Public Shared Sub WriteConstructorEnd
  overload: Juhta.Net.Diagnostics.Trace.WriteConstructorEnd*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Juhta.Net.Diagnostics.Trace.WriteConstructorEnd(System.String)
  commentId: M:Juhta.Net.Diagnostics.Trace.WriteConstructorEnd(System.String)
  id: WriteConstructorEnd(System.String)
  parent: Juhta.Net.Diagnostics.Trace
  langs:
  - csharp
  - vb
  name: WriteConstructorEnd(String)
  nameWithType: Trace.WriteConstructorEnd(String)
  fullName: Juhta.Net.Diagnostics.Trace.WriteConstructorEnd(System.String)
  type: Method
  source:
    remote:
      path: src/Juhta.Net.Diagnostics/Trace.cs
      branch: develop
      repo: https://github.com/jlahteen/juhta.net
    id: WriteConstructorEnd
    path: ../src/Juhta.Net.Diagnostics/Trace.cs
    startLine: 130
  assemblies:
  - Juhta.Net.Diagnostics
  namespace: Juhta.Net.Diagnostics
  summary: "\nSee <xref href=\"Juhta.Net.Diagnostics.ITraceWriter.WriteConstructorEnd(System.String)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static void WriteConstructorEnd(string className)
    parameters:
    - id: className
      type: System.String
    content.vb: Public Shared Sub WriteConstructorEnd(className As String)
  overload: Juhta.Net.Diagnostics.Trace.WriteConstructorEnd*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Juhta.Net.Diagnostics.Trace.WriteConstructorStart(System.String)
  commentId: M:Juhta.Net.Diagnostics.Trace.WriteConstructorStart(System.String)
  id: WriteConstructorStart(System.String)
  parent: Juhta.Net.Diagnostics.Trace
  langs:
  - csharp
  - vb
  name: WriteConstructorStart(String)
  nameWithType: Trace.WriteConstructorStart(String)
  fullName: Juhta.Net.Diagnostics.Trace.WriteConstructorStart(System.String)
  type: Method
  source:
    remote:
      path: src/Juhta.Net.Diagnostics/Trace.cs
      branch: develop
      repo: https://github.com/jlahteen/juhta.net
    id: WriteConstructorStart
    path: ../src/Juhta.Net.Diagnostics/Trace.cs
    startLine: 141
  assemblies:
  - Juhta.Net.Diagnostics
  namespace: Juhta.Net.Diagnostics
  summary: "\nSee <xref href=\"Juhta.Net.Diagnostics.ITraceWriter.WriteConstructorStart(System.String)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static void WriteConstructorStart(string className)
    parameters:
    - id: className
      type: System.String
    content.vb: Public Shared Sub WriteConstructorStart(className As String)
  overload: Juhta.Net.Diagnostics.Trace.WriteConstructorStart*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Juhta.Net.Diagnostics.Trace.WriteException(System.Exception)
  commentId: M:Juhta.Net.Diagnostics.Trace.WriteException(System.Exception)
  id: WriteException(System.Exception)
  parent: Juhta.Net.Diagnostics.Trace
  langs:
  - csharp
  - vb
  name: WriteException(Exception)
  nameWithType: Trace.WriteException(Exception)
  fullName: Juhta.Net.Diagnostics.Trace.WriteException(System.Exception)
  type: Method
  source:
    remote:
      path: src/Juhta.Net.Diagnostics/Trace.cs
      branch: develop
      repo: https://github.com/jlahteen/juhta.net
    id: WriteException
    path: ../src/Juhta.Net.Diagnostics/Trace.cs
    startLine: 152
  assemblies:
  - Juhta.Net.Diagnostics
  namespace: Juhta.Net.Diagnostics
  summary: "\nSee <xref href=\"Juhta.Net.Diagnostics.ITraceWriter.WriteException(System.Exception)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static void WriteException(Exception exception)
    parameters:
    - id: exception
      type: System.Exception
    content.vb: Public Shared Sub WriteException(exception As Exception)
  overload: Juhta.Net.Diagnostics.Trace.WriteException*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Juhta.Net.Diagnostics.Trace.WriteGetPropertyEnd
  commentId: M:Juhta.Net.Diagnostics.Trace.WriteGetPropertyEnd
  id: WriteGetPropertyEnd
  parent: Juhta.Net.Diagnostics.Trace
  langs:
  - csharp
  - vb
  name: WriteGetPropertyEnd()
  nameWithType: Trace.WriteGetPropertyEnd()
  fullName: Juhta.Net.Diagnostics.Trace.WriteGetPropertyEnd()
  type: Method
  source:
    remote:
      path: src/Juhta.Net.Diagnostics/Trace.cs
      branch: develop
      repo: https://github.com/jlahteen/juhta.net
    id: WriteGetPropertyEnd
    path: ../src/Juhta.Net.Diagnostics/Trace.cs
    startLine: 163
  assemblies:
  - Juhta.Net.Diagnostics
  namespace: Juhta.Net.Diagnostics
  summary: "\nSee <xref href=\"Juhta.Net.Diagnostics.ITraceWriter.WriteGetPropertyEnd\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static void WriteGetPropertyEnd()
    content.vb: Public Shared Sub WriteGetPropertyEnd
  overload: Juhta.Net.Diagnostics.Trace.WriteGetPropertyEnd*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Juhta.Net.Diagnostics.Trace.WriteGetPropertyEnd(System.Object)
  commentId: M:Juhta.Net.Diagnostics.Trace.WriteGetPropertyEnd(System.Object)
  id: WriteGetPropertyEnd(System.Object)
  parent: Juhta.Net.Diagnostics.Trace
  langs:
  - csharp
  - vb
  name: WriteGetPropertyEnd(Object)
  nameWithType: Trace.WriteGetPropertyEnd(Object)
  fullName: Juhta.Net.Diagnostics.Trace.WriteGetPropertyEnd(System.Object)
  type: Method
  source:
    remote:
      path: src/Juhta.Net.Diagnostics/Trace.cs
      branch: develop
      repo: https://github.com/jlahteen/juhta.net
    id: WriteGetPropertyEnd
    path: ../src/Juhta.Net.Diagnostics/Trace.cs
    startLine: 174
  assemblies:
  - Juhta.Net.Diagnostics
  namespace: Juhta.Net.Diagnostics
  summary: "\nSee <xref href=\"Juhta.Net.Diagnostics.ITraceWriter.WriteGetPropertyEnd(System.Object)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static void WriteGetPropertyEnd(object returnValue)
    parameters:
    - id: returnValue
      type: System.Object
    content.vb: Public Shared Sub WriteGetPropertyEnd(returnValue As Object)
  overload: Juhta.Net.Diagnostics.Trace.WriteGetPropertyEnd*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Juhta.Net.Diagnostics.Trace.WriteGetPropertyEnd(System.String,System.String)
  commentId: M:Juhta.Net.Diagnostics.Trace.WriteGetPropertyEnd(System.String,System.String)
  id: WriteGetPropertyEnd(System.String,System.String)
  parent: Juhta.Net.Diagnostics.Trace
  langs:
  - csharp
  - vb
  name: WriteGetPropertyEnd(String, String)
  nameWithType: Trace.WriteGetPropertyEnd(String, String)
  fullName: Juhta.Net.Diagnostics.Trace.WriteGetPropertyEnd(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Juhta.Net.Diagnostics/Trace.cs
      branch: develop
      repo: https://github.com/jlahteen/juhta.net
    id: WriteGetPropertyEnd
    path: ../src/Juhta.Net.Diagnostics/Trace.cs
    startLine: 185
  assemblies:
  - Juhta.Net.Diagnostics
  namespace: Juhta.Net.Diagnostics
  summary: "\nSee <xref href=\"Juhta.Net.Diagnostics.ITraceWriter.WriteGetPropertyEnd(System.String%2cSystem.String)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static void WriteGetPropertyEnd(string className, string propertyName)
    parameters:
    - id: className
      type: System.String
    - id: propertyName
      type: System.String
    content.vb: Public Shared Sub WriteGetPropertyEnd(className As String, propertyName As String)
  overload: Juhta.Net.Diagnostics.Trace.WriteGetPropertyEnd*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Juhta.Net.Diagnostics.Trace.WriteGetPropertyEnd(System.String,System.String,System.Object)
  commentId: M:Juhta.Net.Diagnostics.Trace.WriteGetPropertyEnd(System.String,System.String,System.Object)
  id: WriteGetPropertyEnd(System.String,System.String,System.Object)
  parent: Juhta.Net.Diagnostics.Trace
  langs:
  - csharp
  - vb
  name: WriteGetPropertyEnd(String, String, Object)
  nameWithType: Trace.WriteGetPropertyEnd(String, String, Object)
  fullName: Juhta.Net.Diagnostics.Trace.WriteGetPropertyEnd(System.String, System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/Juhta.Net.Diagnostics/Trace.cs
      branch: develop
      repo: https://github.com/jlahteen/juhta.net
    id: WriteGetPropertyEnd
    path: ../src/Juhta.Net.Diagnostics/Trace.cs
    startLine: 196
  assemblies:
  - Juhta.Net.Diagnostics
  namespace: Juhta.Net.Diagnostics
  summary: "\nSee <xref href=\"Juhta.Net.Diagnostics.ITraceWriter.WriteGetPropertyEnd(System.String%2cSystem.String%2cSystem.Object)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static void WriteGetPropertyEnd(string className, string propertyName, object returnValue)
    parameters:
    - id: className
      type: System.String
    - id: propertyName
      type: System.String
    - id: returnValue
      type: System.Object
    content.vb: Public Shared Sub WriteGetPropertyEnd(className As String, propertyName As String, returnValue As Object)
  overload: Juhta.Net.Diagnostics.Trace.WriteGetPropertyEnd*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Juhta.Net.Diagnostics.Trace.WriteGetPropertyStart(System.String,System.String)
  commentId: M:Juhta.Net.Diagnostics.Trace.WriteGetPropertyStart(System.String,System.String)
  id: WriteGetPropertyStart(System.String,System.String)
  parent: Juhta.Net.Diagnostics.Trace
  langs:
  - csharp
  - vb
  name: WriteGetPropertyStart(String, String)
  nameWithType: Trace.WriteGetPropertyStart(String, String)
  fullName: Juhta.Net.Diagnostics.Trace.WriteGetPropertyStart(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Juhta.Net.Diagnostics/Trace.cs
      branch: develop
      repo: https://github.com/jlahteen/juhta.net
    id: WriteGetPropertyStart
    path: ../src/Juhta.Net.Diagnostics/Trace.cs
    startLine: 207
  assemblies:
  - Juhta.Net.Diagnostics
  namespace: Juhta.Net.Diagnostics
  summary: "\nSee <xref href=\"Juhta.Net.Diagnostics.ITraceWriter.WriteGetPropertyStart(System.String%2cSystem.String)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static void WriteGetPropertyStart(string className, string propertyName)
    parameters:
    - id: className
      type: System.String
    - id: propertyName
      type: System.String
    content.vb: Public Shared Sub WriteGetPropertyStart(className As String, propertyName As String)
  overload: Juhta.Net.Diagnostics.Trace.WriteGetPropertyStart*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Juhta.Net.Diagnostics.Trace.WriteLabeledMessage(System.String,System.String)
  commentId: M:Juhta.Net.Diagnostics.Trace.WriteLabeledMessage(System.String,System.String)
  id: WriteLabeledMessage(System.String,System.String)
  parent: Juhta.Net.Diagnostics.Trace
  langs:
  - csharp
  - vb
  name: WriteLabeledMessage(String, String)
  nameWithType: Trace.WriteLabeledMessage(String, String)
  fullName: Juhta.Net.Diagnostics.Trace.WriteLabeledMessage(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Juhta.Net.Diagnostics/Trace.cs
      branch: develop
      repo: https://github.com/jlahteen/juhta.net
    id: WriteLabeledMessage
    path: ../src/Juhta.Net.Diagnostics/Trace.cs
    startLine: 218
  assemblies:
  - Juhta.Net.Diagnostics
  namespace: Juhta.Net.Diagnostics
  summary: "\nSee <xref href=\"Juhta.Net.Diagnostics.ITraceWriter.WriteLabeledMessage(System.String%2cSystem.String)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static void WriteLabeledMessage(string label, string message)
    parameters:
    - id: label
      type: System.String
    - id: message
      type: System.String
    content.vb: Public Shared Sub WriteLabeledMessage(label As String, message As String)
  overload: Juhta.Net.Diagnostics.Trace.WriteLabeledMessage*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Juhta.Net.Diagnostics.Trace.WriteLabeledMessage(System.String,System.String,System.Object[])
  commentId: M:Juhta.Net.Diagnostics.Trace.WriteLabeledMessage(System.String,System.String,System.Object[])
  id: WriteLabeledMessage(System.String,System.String,System.Object[])
  parent: Juhta.Net.Diagnostics.Trace
  langs:
  - csharp
  - vb
  name: WriteLabeledMessage(String, String, Object[])
  nameWithType: Trace.WriteLabeledMessage(String, String, Object[])
  fullName: Juhta.Net.Diagnostics.Trace.WriteLabeledMessage(System.String, System.String, System.Object[])
  type: Method
  source:
    remote:
      path: src/Juhta.Net.Diagnostics/Trace.cs
      branch: develop
      repo: https://github.com/jlahteen/juhta.net
    id: WriteLabeledMessage
    path: ../src/Juhta.Net.Diagnostics/Trace.cs
    startLine: 229
  assemblies:
  - Juhta.Net.Diagnostics
  namespace: Juhta.Net.Diagnostics
  summary: "\nSee <xref href=\"Juhta.Net.Diagnostics.ITraceWriter.WriteLabeledMessage(System.String%2cSystem.String%2cSystem.Object%5b%5d)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static void WriteLabeledMessage(string label, string messageFormat, params object[] args)
    parameters:
    - id: label
      type: System.String
    - id: messageFormat
      type: System.String
    - id: args
      type: System.Object[]
    content.vb: Public Shared Sub WriteLabeledMessage(label As String, messageFormat As String, ParamArray args As Object())
  overload: Juhta.Net.Diagnostics.Trace.WriteLabeledMessage*
  nameWithType.vb: Trace.WriteLabeledMessage(String, String, Object())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Juhta.Net.Diagnostics.Trace.WriteLabeledMessage(System.String, System.String, System.Object())
  name.vb: WriteLabeledMessage(String, String, Object())
- uid: Juhta.Net.Diagnostics.Trace.WriteLine
  commentId: M:Juhta.Net.Diagnostics.Trace.WriteLine
  id: WriteLine
  parent: Juhta.Net.Diagnostics.Trace
  langs:
  - csharp
  - vb
  name: WriteLine()
  nameWithType: Trace.WriteLine()
  fullName: Juhta.Net.Diagnostics.Trace.WriteLine()
  type: Method
  source:
    remote:
      path: src/Juhta.Net.Diagnostics/Trace.cs
      branch: develop
      repo: https://github.com/jlahteen/juhta.net
    id: WriteLine
    path: ../src/Juhta.Net.Diagnostics/Trace.cs
    startLine: 240
  assemblies:
  - Juhta.Net.Diagnostics
  namespace: Juhta.Net.Diagnostics
  summary: "\nSee <xref href=\"Juhta.Net.Diagnostics.ITraceWriter.WriteLine\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static void WriteLine()
    content.vb: Public Shared Sub WriteLine
  overload: Juhta.Net.Diagnostics.Trace.WriteLine*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Juhta.Net.Diagnostics.Trace.WriteLine(System.String)
  commentId: M:Juhta.Net.Diagnostics.Trace.WriteLine(System.String)
  id: WriteLine(System.String)
  parent: Juhta.Net.Diagnostics.Trace
  langs:
  - csharp
  - vb
  name: WriteLine(String)
  nameWithType: Trace.WriteLine(String)
  fullName: Juhta.Net.Diagnostics.Trace.WriteLine(System.String)
  type: Method
  source:
    remote:
      path: src/Juhta.Net.Diagnostics/Trace.cs
      branch: develop
      repo: https://github.com/jlahteen/juhta.net
    id: WriteLine
    path: ../src/Juhta.Net.Diagnostics/Trace.cs
    startLine: 251
  assemblies:
  - Juhta.Net.Diagnostics
  namespace: Juhta.Net.Diagnostics
  summary: "\nSee <xref href=\"Juhta.Net.Diagnostics.ITraceWriter.WriteLine(System.String)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static void WriteLine(string s)
    parameters:
    - id: s
      type: System.String
    content.vb: Public Shared Sub WriteLine(s As String)
  overload: Juhta.Net.Diagnostics.Trace.WriteLine*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Juhta.Net.Diagnostics.Trace.WriteLine(System.String,System.Object[])
  commentId: M:Juhta.Net.Diagnostics.Trace.WriteLine(System.String,System.Object[])
  id: WriteLine(System.String,System.Object[])
  parent: Juhta.Net.Diagnostics.Trace
  langs:
  - csharp
  - vb
  name: WriteLine(String, Object[])
  nameWithType: Trace.WriteLine(String, Object[])
  fullName: Juhta.Net.Diagnostics.Trace.WriteLine(System.String, System.Object[])
  type: Method
  source:
    remote:
      path: src/Juhta.Net.Diagnostics/Trace.cs
      branch: develop
      repo: https://github.com/jlahteen/juhta.net
    id: WriteLine
    path: ../src/Juhta.Net.Diagnostics/Trace.cs
    startLine: 262
  assemblies:
  - Juhta.Net.Diagnostics
  namespace: Juhta.Net.Diagnostics
  summary: "\nSee <xref href=\"Juhta.Net.Diagnostics.ITraceWriter.WriteLine(System.String%2cSystem.Object%5b%5d)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static void WriteLine(string format, params object[] args)
    parameters:
    - id: format
      type: System.String
    - id: args
      type: System.Object[]
    content.vb: Public Shared Sub WriteLine(format As String, ParamArray args As Object())
  overload: Juhta.Net.Diagnostics.Trace.WriteLine*
  nameWithType.vb: Trace.WriteLine(String, Object())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Juhta.Net.Diagnostics.Trace.WriteLine(System.String, System.Object())
  name.vb: WriteLine(String, Object())
- uid: Juhta.Net.Diagnostics.Trace.WriteMethodEnd
  commentId: M:Juhta.Net.Diagnostics.Trace.WriteMethodEnd
  id: WriteMethodEnd
  parent: Juhta.Net.Diagnostics.Trace
  langs:
  - csharp
  - vb
  name: WriteMethodEnd()
  nameWithType: Trace.WriteMethodEnd()
  fullName: Juhta.Net.Diagnostics.Trace.WriteMethodEnd()
  type: Method
  source:
    remote:
      path: src/Juhta.Net.Diagnostics/Trace.cs
      branch: develop
      repo: https://github.com/jlahteen/juhta.net
    id: WriteMethodEnd
    path: ../src/Juhta.Net.Diagnostics/Trace.cs
    startLine: 273
  assemblies:
  - Juhta.Net.Diagnostics
  namespace: Juhta.Net.Diagnostics
  summary: "\nSee <xref href=\"Juhta.Net.Diagnostics.ITraceWriter.WriteMethodEnd\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static void WriteMethodEnd()
    content.vb: Public Shared Sub WriteMethodEnd
  overload: Juhta.Net.Diagnostics.Trace.WriteMethodEnd*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Juhta.Net.Diagnostics.Trace.WriteMethodEnd(System.Object)
  commentId: M:Juhta.Net.Diagnostics.Trace.WriteMethodEnd(System.Object)
  id: WriteMethodEnd(System.Object)
  parent: Juhta.Net.Diagnostics.Trace
  langs:
  - csharp
  - vb
  name: WriteMethodEnd(Object)
  nameWithType: Trace.WriteMethodEnd(Object)
  fullName: Juhta.Net.Diagnostics.Trace.WriteMethodEnd(System.Object)
  type: Method
  source:
    remote:
      path: src/Juhta.Net.Diagnostics/Trace.cs
      branch: develop
      repo: https://github.com/jlahteen/juhta.net
    id: WriteMethodEnd
    path: ../src/Juhta.Net.Diagnostics/Trace.cs
    startLine: 284
  assemblies:
  - Juhta.Net.Diagnostics
  namespace: Juhta.Net.Diagnostics
  summary: "\nSee <xref href=\"Juhta.Net.Diagnostics.ITraceWriter.WriteMethodEnd(System.Object)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static void WriteMethodEnd(object returnValue)
    parameters:
    - id: returnValue
      type: System.Object
    content.vb: Public Shared Sub WriteMethodEnd(returnValue As Object)
  overload: Juhta.Net.Diagnostics.Trace.WriteMethodEnd*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Juhta.Net.Diagnostics.Trace.WriteMethodEnd(System.String,System.String)
  commentId: M:Juhta.Net.Diagnostics.Trace.WriteMethodEnd(System.String,System.String)
  id: WriteMethodEnd(System.String,System.String)
  parent: Juhta.Net.Diagnostics.Trace
  langs:
  - csharp
  - vb
  name: WriteMethodEnd(String, String)
  nameWithType: Trace.WriteMethodEnd(String, String)
  fullName: Juhta.Net.Diagnostics.Trace.WriteMethodEnd(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Juhta.Net.Diagnostics/Trace.cs
      branch: develop
      repo: https://github.com/jlahteen/juhta.net
    id: WriteMethodEnd
    path: ../src/Juhta.Net.Diagnostics/Trace.cs
    startLine: 295
  assemblies:
  - Juhta.Net.Diagnostics
  namespace: Juhta.Net.Diagnostics
  summary: "\nSee <xref href=\"Juhta.Net.Diagnostics.ITraceWriter.WriteMethodEnd(System.String%2cSystem.String)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static void WriteMethodEnd(string className, string methodName)
    parameters:
    - id: className
      type: System.String
    - id: methodName
      type: System.String
    content.vb: Public Shared Sub WriteMethodEnd(className As String, methodName As String)
  overload: Juhta.Net.Diagnostics.Trace.WriteMethodEnd*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Juhta.Net.Diagnostics.Trace.WriteMethodEnd(System.String,System.String,System.Object)
  commentId: M:Juhta.Net.Diagnostics.Trace.WriteMethodEnd(System.String,System.String,System.Object)
  id: WriteMethodEnd(System.String,System.String,System.Object)
  parent: Juhta.Net.Diagnostics.Trace
  langs:
  - csharp
  - vb
  name: WriteMethodEnd(String, String, Object)
  nameWithType: Trace.WriteMethodEnd(String, String, Object)
  fullName: Juhta.Net.Diagnostics.Trace.WriteMethodEnd(System.String, System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/Juhta.Net.Diagnostics/Trace.cs
      branch: develop
      repo: https://github.com/jlahteen/juhta.net
    id: WriteMethodEnd
    path: ../src/Juhta.Net.Diagnostics/Trace.cs
    startLine: 306
  assemblies:
  - Juhta.Net.Diagnostics
  namespace: Juhta.Net.Diagnostics
  summary: "\nSee <xref href=\"Juhta.Net.Diagnostics.ITraceWriter.WriteMethodEnd(System.String%2cSystem.String%2cSystem.Object)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static void WriteMethodEnd(string className, string methodName, object returnValue)
    parameters:
    - id: className
      type: System.String
    - id: methodName
      type: System.String
    - id: returnValue
      type: System.Object
    content.vb: Public Shared Sub WriteMethodEnd(className As String, methodName As String, returnValue As Object)
  overload: Juhta.Net.Diagnostics.Trace.WriteMethodEnd*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Juhta.Net.Diagnostics.Trace.WriteMethodStart(System.String,System.String)
  commentId: M:Juhta.Net.Diagnostics.Trace.WriteMethodStart(System.String,System.String)
  id: WriteMethodStart(System.String,System.String)
  parent: Juhta.Net.Diagnostics.Trace
  langs:
  - csharp
  - vb
  name: WriteMethodStart(String, String)
  nameWithType: Trace.WriteMethodStart(String, String)
  fullName: Juhta.Net.Diagnostics.Trace.WriteMethodStart(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Juhta.Net.Diagnostics/Trace.cs
      branch: develop
      repo: https://github.com/jlahteen/juhta.net
    id: WriteMethodStart
    path: ../src/Juhta.Net.Diagnostics/Trace.cs
    startLine: 317
  assemblies:
  - Juhta.Net.Diagnostics
  namespace: Juhta.Net.Diagnostics
  summary: "\nSee <xref href=\"Juhta.Net.Diagnostics.ITraceWriter.WriteMethodStart(System.String%2cSystem.String)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static void WriteMethodStart(string className, string methodName)
    parameters:
    - id: className
      type: System.String
    - id: methodName
      type: System.String
    content.vb: Public Shared Sub WriteMethodStart(className As String, methodName As String)
  overload: Juhta.Net.Diagnostics.Trace.WriteMethodStart*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Juhta.Net.Diagnostics.Trace.WriteObjectGraph(System.String,System.Object)
  commentId: M:Juhta.Net.Diagnostics.Trace.WriteObjectGraph(System.String,System.Object)
  id: WriteObjectGraph(System.String,System.Object)
  parent: Juhta.Net.Diagnostics.Trace
  langs:
  - csharp
  - vb
  name: WriteObjectGraph(String, Object)
  nameWithType: Trace.WriteObjectGraph(String, Object)
  fullName: Juhta.Net.Diagnostics.Trace.WriteObjectGraph(System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/Juhta.Net.Diagnostics/Trace.cs
      branch: develop
      repo: https://github.com/jlahteen/juhta.net
    id: WriteObjectGraph
    path: ../src/Juhta.Net.Diagnostics/Trace.cs
    startLine: 328
  assemblies:
  - Juhta.Net.Diagnostics
  namespace: Juhta.Net.Diagnostics
  summary: "\nSee <xref href=\"Juhta.Net.Diagnostics.ITraceWriter.WriteObjectGraph(System.String%2cSystem.Object)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static void WriteObjectGraph(string objectID, object object)
    parameters:
    - id: objectID
      type: System.String
    - id: object
      type: System.Object
    content.vb: Public Shared Sub WriteObjectGraph(objectID As String, object As Object)
  overload: Juhta.Net.Diagnostics.Trace.WriteObjectGraph*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Juhta.Net.Diagnostics.Trace.WriteOperationEnd
  commentId: M:Juhta.Net.Diagnostics.Trace.WriteOperationEnd
  id: WriteOperationEnd
  parent: Juhta.Net.Diagnostics.Trace
  langs:
  - csharp
  - vb
  name: WriteOperationEnd()
  nameWithType: Trace.WriteOperationEnd()
  fullName: Juhta.Net.Diagnostics.Trace.WriteOperationEnd()
  type: Method
  source:
    remote:
      path: src/Juhta.Net.Diagnostics/Trace.cs
      branch: develop
      repo: https://github.com/jlahteen/juhta.net
    id: WriteOperationEnd
    path: ../src/Juhta.Net.Diagnostics/Trace.cs
    startLine: 339
  assemblies:
  - Juhta.Net.Diagnostics
  namespace: Juhta.Net.Diagnostics
  summary: "\nSee <xref href=\"Juhta.Net.Diagnostics.ITraceWriter.WriteOperationEnd\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static void WriteOperationEnd()
    content.vb: Public Shared Sub WriteOperationEnd
  overload: Juhta.Net.Diagnostics.Trace.WriteOperationEnd*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Juhta.Net.Diagnostics.Trace.WriteOperationEnd(System.String)
  commentId: M:Juhta.Net.Diagnostics.Trace.WriteOperationEnd(System.String)
  id: WriteOperationEnd(System.String)
  parent: Juhta.Net.Diagnostics.Trace
  langs:
  - csharp
  - vb
  name: WriteOperationEnd(String)
  nameWithType: Trace.WriteOperationEnd(String)
  fullName: Juhta.Net.Diagnostics.Trace.WriteOperationEnd(System.String)
  type: Method
  source:
    remote:
      path: src/Juhta.Net.Diagnostics/Trace.cs
      branch: develop
      repo: https://github.com/jlahteen/juhta.net
    id: WriteOperationEnd
    path: ../src/Juhta.Net.Diagnostics/Trace.cs
    startLine: 350
  assemblies:
  - Juhta.Net.Diagnostics
  namespace: Juhta.Net.Diagnostics
  summary: "\nSee <xref href=\"Juhta.Net.Diagnostics.ITraceWriter.WriteOperationEnd(System.String)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static void WriteOperationEnd(string description)
    parameters:
    - id: description
      type: System.String
    content.vb: Public Shared Sub WriteOperationEnd(description As String)
  overload: Juhta.Net.Diagnostics.Trace.WriteOperationEnd*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Juhta.Net.Diagnostics.Trace.WriteOperationStart(System.String)
  commentId: M:Juhta.Net.Diagnostics.Trace.WriteOperationStart(System.String)
  id: WriteOperationStart(System.String)
  parent: Juhta.Net.Diagnostics.Trace
  langs:
  - csharp
  - vb
  name: WriteOperationStart(String)
  nameWithType: Trace.WriteOperationStart(String)
  fullName: Juhta.Net.Diagnostics.Trace.WriteOperationStart(System.String)
  type: Method
  source:
    remote:
      path: src/Juhta.Net.Diagnostics/Trace.cs
      branch: develop
      repo: https://github.com/jlahteen/juhta.net
    id: WriteOperationStart
    path: ../src/Juhta.Net.Diagnostics/Trace.cs
    startLine: 361
  assemblies:
  - Juhta.Net.Diagnostics
  namespace: Juhta.Net.Diagnostics
  summary: "\nSee <xref href=\"Juhta.Net.Diagnostics.ITraceWriter.WriteOperationStart(System.String)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static void WriteOperationStart(string description)
    parameters:
    - id: description
      type: System.String
    content.vb: Public Shared Sub WriteOperationStart(description As String)
  overload: Juhta.Net.Diagnostics.Trace.WriteOperationStart*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Juhta.Net.Diagnostics.Trace.WriteSetPropertyEnd
  commentId: M:Juhta.Net.Diagnostics.Trace.WriteSetPropertyEnd
  id: WriteSetPropertyEnd
  parent: Juhta.Net.Diagnostics.Trace
  langs:
  - csharp
  - vb
  name: WriteSetPropertyEnd()
  nameWithType: Trace.WriteSetPropertyEnd()
  fullName: Juhta.Net.Diagnostics.Trace.WriteSetPropertyEnd()
  type: Method
  source:
    remote:
      path: src/Juhta.Net.Diagnostics/Trace.cs
      branch: develop
      repo: https://github.com/jlahteen/juhta.net
    id: WriteSetPropertyEnd
    path: ../src/Juhta.Net.Diagnostics/Trace.cs
    startLine: 372
  assemblies:
  - Juhta.Net.Diagnostics
  namespace: Juhta.Net.Diagnostics
  summary: "\nSee <xref href=\"Juhta.Net.Diagnostics.ITraceWriter.WriteSetPropertyEnd\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static void WriteSetPropertyEnd()
    content.vb: Public Shared Sub WriteSetPropertyEnd
  overload: Juhta.Net.Diagnostics.Trace.WriteSetPropertyEnd*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Juhta.Net.Diagnostics.Trace.WriteSetPropertyEnd(System.String,System.String)
  commentId: M:Juhta.Net.Diagnostics.Trace.WriteSetPropertyEnd(System.String,System.String)
  id: WriteSetPropertyEnd(System.String,System.String)
  parent: Juhta.Net.Diagnostics.Trace
  langs:
  - csharp
  - vb
  name: WriteSetPropertyEnd(String, String)
  nameWithType: Trace.WriteSetPropertyEnd(String, String)
  fullName: Juhta.Net.Diagnostics.Trace.WriteSetPropertyEnd(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Juhta.Net.Diagnostics/Trace.cs
      branch: develop
      repo: https://github.com/jlahteen/juhta.net
    id: WriteSetPropertyEnd
    path: ../src/Juhta.Net.Diagnostics/Trace.cs
    startLine: 383
  assemblies:
  - Juhta.Net.Diagnostics
  namespace: Juhta.Net.Diagnostics
  summary: "\nSee <xref href=\"Juhta.Net.Diagnostics.ITraceWriter.WriteSetPropertyEnd(System.String%2cSystem.String)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static void WriteSetPropertyEnd(string className, string propertyName)
    parameters:
    - id: className
      type: System.String
    - id: propertyName
      type: System.String
    content.vb: Public Shared Sub WriteSetPropertyEnd(className As String, propertyName As String)
  overload: Juhta.Net.Diagnostics.Trace.WriteSetPropertyEnd*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Juhta.Net.Diagnostics.Trace.WriteSetPropertyStart(System.String,System.String)
  commentId: M:Juhta.Net.Diagnostics.Trace.WriteSetPropertyStart(System.String,System.String)
  id: WriteSetPropertyStart(System.String,System.String)
  parent: Juhta.Net.Diagnostics.Trace
  langs:
  - csharp
  - vb
  name: WriteSetPropertyStart(String, String)
  nameWithType: Trace.WriteSetPropertyStart(String, String)
  fullName: Juhta.Net.Diagnostics.Trace.WriteSetPropertyStart(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Juhta.Net.Diagnostics/Trace.cs
      branch: develop
      repo: https://github.com/jlahteen/juhta.net
    id: WriteSetPropertyStart
    path: ../src/Juhta.Net.Diagnostics/Trace.cs
    startLine: 394
  assemblies:
  - Juhta.Net.Diagnostics
  namespace: Juhta.Net.Diagnostics
  summary: "\nSee <xref href=\"Juhta.Net.Diagnostics.ITraceWriter.WriteSetPropertyStart(System.String%2cSystem.String)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static void WriteSetPropertyStart(string className, string propertyName)
    parameters:
    - id: className
      type: System.String
    - id: propertyName
      type: System.String
    content.vb: Public Shared Sub WriteSetPropertyStart(className As String, propertyName As String)
  overload: Juhta.Net.Diagnostics.Trace.WriteSetPropertyStart*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Juhta.Net.Diagnostics.Trace.WriteSetPropertyStart(System.String,System.String,System.Object)
  commentId: M:Juhta.Net.Diagnostics.Trace.WriteSetPropertyStart(System.String,System.String,System.Object)
  id: WriteSetPropertyStart(System.String,System.String,System.Object)
  parent: Juhta.Net.Diagnostics.Trace
  langs:
  - csharp
  - vb
  name: WriteSetPropertyStart(String, String, Object)
  nameWithType: Trace.WriteSetPropertyStart(String, String, Object)
  fullName: Juhta.Net.Diagnostics.Trace.WriteSetPropertyStart(System.String, System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/Juhta.Net.Diagnostics/Trace.cs
      branch: develop
      repo: https://github.com/jlahteen/juhta.net
    id: WriteSetPropertyStart
    path: ../src/Juhta.Net.Diagnostics/Trace.cs
    startLine: 405
  assemblies:
  - Juhta.Net.Diagnostics
  namespace: Juhta.Net.Diagnostics
  summary: "\nSee <xref href=\"Juhta.Net.Diagnostics.ITraceWriter.WriteSetPropertyStart(System.String%2cSystem.String%2cSystem.Object)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static void WriteSetPropertyStart(string className, string propertyName, object newValue)
    parameters:
    - id: className
      type: System.String
    - id: propertyName
      type: System.String
    - id: newValue
      type: System.Object
    content.vb: Public Shared Sub WriteSetPropertyStart(className As String, propertyName As String, newValue As Object)
  overload: Juhta.Net.Diagnostics.Trace.WriteSetPropertyStart*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Juhta.Net.Diagnostics.Trace.AbsoluteIndent
  commentId: P:Juhta.Net.Diagnostics.Trace.AbsoluteIndent
  id: AbsoluteIndent
  parent: Juhta.Net.Diagnostics.Trace
  langs:
  - csharp
  - vb
  name: AbsoluteIndent
  nameWithType: Trace.AbsoluteIndent
  fullName: Juhta.Net.Diagnostics.Trace.AbsoluteIndent
  type: Property
  source:
    remote:
      path: src/Juhta.Net.Diagnostics/Trace.cs
      branch: develop
      repo: https://github.com/jlahteen/juhta.net
    id: AbsoluteIndent
    path: ../src/Juhta.Net.Diagnostics/Trace.cs
    startLine: 420
  assemblies:
  - Juhta.Net.Diagnostics
  namespace: Juhta.Net.Diagnostics
  summary: "\nSee <xref href=\"Juhta.Net.Diagnostics.ITraceWriter.AbsoluteIndent\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static int AbsoluteIndent { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Shared ReadOnly Property AbsoluteIndent As Integer
  overload: Juhta.Net.Diagnostics.Trace.AbsoluteIndent*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Juhta.Net.Diagnostics.Trace.IsTracingOn
  commentId: P:Juhta.Net.Diagnostics.Trace.IsTracingOn
  id: IsTracingOn
  parent: Juhta.Net.Diagnostics.Trace
  langs:
  - csharp
  - vb
  name: IsTracingOn
  nameWithType: Trace.IsTracingOn
  fullName: Juhta.Net.Diagnostics.Trace.IsTracingOn
  type: Property
  source:
    remote:
      path: src/Juhta.Net.Diagnostics/Trace.cs
      branch: develop
      repo: https://github.com/jlahteen/juhta.net
    id: IsTracingOn
    path: ../src/Juhta.Net.Diagnostics/Trace.cs
    startLine: 439
  assemblies:
  - Juhta.Net.Diagnostics
  namespace: Juhta.Net.Diagnostics
  summary: "\nReturns true if tracing is currently switched on.\n"
  example: []
  syntax:
    content: public static bool IsTracingOn { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared ReadOnly Property IsTracingOn As Boolean
  overload: Juhta.Net.Diagnostics.Trace.IsTracingOn*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Juhta.Net.Diagnostics.Trace.RelativeIndent
  commentId: P:Juhta.Net.Diagnostics.Trace.RelativeIndent
  id: RelativeIndent
  parent: Juhta.Net.Diagnostics.Trace
  langs:
  - csharp
  - vb
  name: RelativeIndent
  nameWithType: Trace.RelativeIndent
  fullName: Juhta.Net.Diagnostics.Trace.RelativeIndent
  type: Property
  source:
    remote:
      path: src/Juhta.Net.Diagnostics/Trace.cs
      branch: develop
      repo: https://github.com/jlahteen/juhta.net
    id: RelativeIndent
    path: ../src/Juhta.Net.Diagnostics/Trace.cs
    startLine: 447
  assemblies:
  - Juhta.Net.Diagnostics
  namespace: Juhta.Net.Diagnostics
  summary: "\nSee <xref href=\"Juhta.Net.Diagnostics.ITraceWriter.RelativeIndent\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static int RelativeIndent { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Shared Property RelativeIndent As Integer
  overload: Juhta.Net.Diagnostics.Trace.RelativeIndent*
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
- uid: Juhta.Net.Diagnostics.Trace.TraceDirectory
  commentId: P:Juhta.Net.Diagnostics.Trace.TraceDirectory
  id: TraceDirectory
  parent: Juhta.Net.Diagnostics.Trace
  langs:
  - csharp
  - vb
  name: TraceDirectory
  nameWithType: Trace.TraceDirectory
  fullName: Juhta.Net.Diagnostics.Trace.TraceDirectory
  type: Property
  source:
    remote:
      path: src/Juhta.Net.Diagnostics/Trace.cs
      branch: develop
      repo: https://github.com/jlahteen/juhta.net
    id: TraceDirectory
    path: ../src/Juhta.Net.Diagnostics/Trace.cs
    startLine: 474
  assemblies:
  - Juhta.Net.Diagnostics
  namespace: Juhta.Net.Diagnostics
  summary: "\nGets the directory where files containing trace data will be stored.\n"
  example: []
  syntax:
    content: public static string TraceDirectory { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Shared ReadOnly Property TraceDirectory As String
  overload: Juhta.Net.Diagnostics.Trace.TraceDirectory*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
references:
- uid: Juhta.Net.Diagnostics.ITraceWriter
  commentId: T:Juhta.Net.Diagnostics.ITraceWriter
  isExternal: false
  name: ITraceWriter
  nameWithType: ITraceWriter
  fullName: Juhta.Net.Diagnostics.ITraceWriter
- uid: Juhta.Net.Diagnostics
  commentId: N:Juhta.Net.Diagnostics
  isExternal: false
  name: Juhta.Net.Diagnostics
  nameWithType: Juhta.Net.Diagnostics
  fullName: Juhta.Net.Diagnostics
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Juhta.Net.Diagnostics.ITraceWriter.DecreaseRelativeIndent
  commentId: M:Juhta.Net.Diagnostics.ITraceWriter.DecreaseRelativeIndent
- uid: Juhta.Net.Diagnostics.Trace.DecreaseRelativeIndent*
  commentId: Overload:Juhta.Net.Diagnostics.Trace.DecreaseRelativeIndent
  isExternal: false
  name: DecreaseRelativeIndent
  nameWithType: Trace.DecreaseRelativeIndent
  fullName: Juhta.Net.Diagnostics.Trace.DecreaseRelativeIndent
- uid: Juhta.Net.Diagnostics.ITraceWriter.Flush
  commentId: M:Juhta.Net.Diagnostics.ITraceWriter.Flush
- uid: Juhta.Net.Diagnostics.Trace.Flush*
  commentId: Overload:Juhta.Net.Diagnostics.Trace.Flush
  isExternal: false
  name: Flush
  nameWithType: Trace.Flush
  fullName: Juhta.Net.Diagnostics.Trace.Flush
- uid: Juhta.Net.Diagnostics.ITraceWriter.IncreaseRelativeIndent
  commentId: M:Juhta.Net.Diagnostics.ITraceWriter.IncreaseRelativeIndent
- uid: Juhta.Net.Diagnostics.Trace.IncreaseRelativeIndent*
  commentId: Overload:Juhta.Net.Diagnostics.Trace.IncreaseRelativeIndent
  isExternal: false
  name: IncreaseRelativeIndent
  nameWithType: Trace.IncreaseRelativeIndent
  fullName: Juhta.Net.Diagnostics.Trace.IncreaseRelativeIndent
- uid: Juhta.Net.Diagnostics.ITraceWriter.Write(System.String)
  commentId: M:Juhta.Net.Diagnostics.ITraceWriter.Write(System.String)
- uid: Juhta.Net.Diagnostics.Trace.Write*
  commentId: Overload:Juhta.Net.Diagnostics.Trace.Write
  isExternal: false
  name: Write
  nameWithType: Trace.Write
  fullName: Juhta.Net.Diagnostics.Trace.Write
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Juhta.Net.Diagnostics.ITraceWriter.Write(System.String,System.Object[])
  commentId: M:Juhta.Net.Diagnostics.ITraceWriter.Write(System.String,System.Object[])
- uid: System.Object[]
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullName.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Juhta.Net.Diagnostics.ITraceWriter.WriteBlockEnd
  commentId: M:Juhta.Net.Diagnostics.ITraceWriter.WriteBlockEnd
- uid: Juhta.Net.Diagnostics.Trace.WriteBlockEnd*
  commentId: Overload:Juhta.Net.Diagnostics.Trace.WriteBlockEnd
  isExternal: false
  name: WriteBlockEnd
  nameWithType: Trace.WriteBlockEnd
  fullName: Juhta.Net.Diagnostics.Trace.WriteBlockEnd
- uid: Juhta.Net.Diagnostics.ITraceWriter.WriteBlockStart
  commentId: M:Juhta.Net.Diagnostics.ITraceWriter.WriteBlockStart
- uid: Juhta.Net.Diagnostics.Trace.WriteBlockStart*
  commentId: Overload:Juhta.Net.Diagnostics.Trace.WriteBlockStart
  isExternal: false
  name: WriteBlockStart
  nameWithType: Trace.WriteBlockStart
  fullName: Juhta.Net.Diagnostics.Trace.WriteBlockStart
- uid: Juhta.Net.Diagnostics.ITraceWriter.WriteBlockStart(System.String)
  commentId: M:Juhta.Net.Diagnostics.ITraceWriter.WriteBlockStart(System.String)
- uid: Juhta.Net.Diagnostics.ITraceWriter.WriteConstructorEnd
  commentId: M:Juhta.Net.Diagnostics.ITraceWriter.WriteConstructorEnd
- uid: Juhta.Net.Diagnostics.Trace.WriteConstructorEnd*
  commentId: Overload:Juhta.Net.Diagnostics.Trace.WriteConstructorEnd
  isExternal: false
  name: WriteConstructorEnd
  nameWithType: Trace.WriteConstructorEnd
  fullName: Juhta.Net.Diagnostics.Trace.WriteConstructorEnd
- uid: Juhta.Net.Diagnostics.ITraceWriter.WriteConstructorEnd(System.String)
  commentId: M:Juhta.Net.Diagnostics.ITraceWriter.WriteConstructorEnd(System.String)
- uid: Juhta.Net.Diagnostics.ITraceWriter.WriteConstructorStart(System.String)
  commentId: M:Juhta.Net.Diagnostics.ITraceWriter.WriteConstructorStart(System.String)
- uid: Juhta.Net.Diagnostics.Trace.WriteConstructorStart*
  commentId: Overload:Juhta.Net.Diagnostics.Trace.WriteConstructorStart
  isExternal: false
  name: WriteConstructorStart
  nameWithType: Trace.WriteConstructorStart
  fullName: Juhta.Net.Diagnostics.Trace.WriteConstructorStart
- uid: Juhta.Net.Diagnostics.ITraceWriter.WriteException(System.Exception)
  commentId: M:Juhta.Net.Diagnostics.ITraceWriter.WriteException(System.Exception)
- uid: Juhta.Net.Diagnostics.Trace.WriteException*
  commentId: Overload:Juhta.Net.Diagnostics.Trace.WriteException
  isExternal: false
  name: WriteException
  nameWithType: Trace.WriteException
  fullName: Juhta.Net.Diagnostics.Trace.WriteException
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: Juhta.Net.Diagnostics.ITraceWriter.WriteGetPropertyEnd
  commentId: M:Juhta.Net.Diagnostics.ITraceWriter.WriteGetPropertyEnd
- uid: Juhta.Net.Diagnostics.Trace.WriteGetPropertyEnd*
  commentId: Overload:Juhta.Net.Diagnostics.Trace.WriteGetPropertyEnd
  isExternal: false
  name: WriteGetPropertyEnd
  nameWithType: Trace.WriteGetPropertyEnd
  fullName: Juhta.Net.Diagnostics.Trace.WriteGetPropertyEnd
- uid: Juhta.Net.Diagnostics.ITraceWriter.WriteGetPropertyEnd(System.Object)
  commentId: M:Juhta.Net.Diagnostics.ITraceWriter.WriteGetPropertyEnd(System.Object)
- uid: Juhta.Net.Diagnostics.ITraceWriter.WriteGetPropertyEnd(System.String,System.String)
  commentId: M:Juhta.Net.Diagnostics.ITraceWriter.WriteGetPropertyEnd(System.String,System.String)
- uid: Juhta.Net.Diagnostics.ITraceWriter.WriteGetPropertyEnd(System.String,System.String,System.Object)
  commentId: M:Juhta.Net.Diagnostics.ITraceWriter.WriteGetPropertyEnd(System.String,System.String,System.Object)
- uid: Juhta.Net.Diagnostics.ITraceWriter.WriteGetPropertyStart(System.String,System.String)
  commentId: M:Juhta.Net.Diagnostics.ITraceWriter.WriteGetPropertyStart(System.String,System.String)
- uid: Juhta.Net.Diagnostics.Trace.WriteGetPropertyStart*
  commentId: Overload:Juhta.Net.Diagnostics.Trace.WriteGetPropertyStart
  isExternal: false
  name: WriteGetPropertyStart
  nameWithType: Trace.WriteGetPropertyStart
  fullName: Juhta.Net.Diagnostics.Trace.WriteGetPropertyStart
- uid: Juhta.Net.Diagnostics.ITraceWriter.WriteLabeledMessage(System.String,System.String)
  commentId: M:Juhta.Net.Diagnostics.ITraceWriter.WriteLabeledMessage(System.String,System.String)
- uid: Juhta.Net.Diagnostics.Trace.WriteLabeledMessage*
  commentId: Overload:Juhta.Net.Diagnostics.Trace.WriteLabeledMessage
  isExternal: false
  name: WriteLabeledMessage
  nameWithType: Trace.WriteLabeledMessage
  fullName: Juhta.Net.Diagnostics.Trace.WriteLabeledMessage
- uid: Juhta.Net.Diagnostics.ITraceWriter.WriteLabeledMessage(System.String,System.String,System.Object[])
  commentId: M:Juhta.Net.Diagnostics.ITraceWriter.WriteLabeledMessage(System.String,System.String,System.Object[])
- uid: Juhta.Net.Diagnostics.ITraceWriter.WriteLine
  commentId: M:Juhta.Net.Diagnostics.ITraceWriter.WriteLine
- uid: Juhta.Net.Diagnostics.Trace.WriteLine*
  commentId: Overload:Juhta.Net.Diagnostics.Trace.WriteLine
  isExternal: false
  name: WriteLine
  nameWithType: Trace.WriteLine
  fullName: Juhta.Net.Diagnostics.Trace.WriteLine
- uid: Juhta.Net.Diagnostics.ITraceWriter.WriteLine(System.String)
  commentId: M:Juhta.Net.Diagnostics.ITraceWriter.WriteLine(System.String)
- uid: Juhta.Net.Diagnostics.ITraceWriter.WriteLine(System.String,System.Object[])
  commentId: M:Juhta.Net.Diagnostics.ITraceWriter.WriteLine(System.String,System.Object[])
- uid: Juhta.Net.Diagnostics.ITraceWriter.WriteMethodEnd
  commentId: M:Juhta.Net.Diagnostics.ITraceWriter.WriteMethodEnd
- uid: Juhta.Net.Diagnostics.Trace.WriteMethodEnd*
  commentId: Overload:Juhta.Net.Diagnostics.Trace.WriteMethodEnd
  isExternal: false
  name: WriteMethodEnd
  nameWithType: Trace.WriteMethodEnd
  fullName: Juhta.Net.Diagnostics.Trace.WriteMethodEnd
- uid: Juhta.Net.Diagnostics.ITraceWriter.WriteMethodEnd(System.Object)
  commentId: M:Juhta.Net.Diagnostics.ITraceWriter.WriteMethodEnd(System.Object)
- uid: Juhta.Net.Diagnostics.ITraceWriter.WriteMethodEnd(System.String,System.String)
  commentId: M:Juhta.Net.Diagnostics.ITraceWriter.WriteMethodEnd(System.String,System.String)
- uid: Juhta.Net.Diagnostics.ITraceWriter.WriteMethodEnd(System.String,System.String,System.Object)
  commentId: M:Juhta.Net.Diagnostics.ITraceWriter.WriteMethodEnd(System.String,System.String,System.Object)
- uid: Juhta.Net.Diagnostics.ITraceWriter.WriteMethodStart(System.String,System.String)
  commentId: M:Juhta.Net.Diagnostics.ITraceWriter.WriteMethodStart(System.String,System.String)
- uid: Juhta.Net.Diagnostics.Trace.WriteMethodStart*
  commentId: Overload:Juhta.Net.Diagnostics.Trace.WriteMethodStart
  isExternal: false
  name: WriteMethodStart
  nameWithType: Trace.WriteMethodStart
  fullName: Juhta.Net.Diagnostics.Trace.WriteMethodStart
- uid: Juhta.Net.Diagnostics.ITraceWriter.WriteObjectGraph(System.String,System.Object)
  commentId: M:Juhta.Net.Diagnostics.ITraceWriter.WriteObjectGraph(System.String,System.Object)
- uid: Juhta.Net.Diagnostics.Trace.WriteObjectGraph*
  commentId: Overload:Juhta.Net.Diagnostics.Trace.WriteObjectGraph
  isExternal: false
  name: WriteObjectGraph
  nameWithType: Trace.WriteObjectGraph
  fullName: Juhta.Net.Diagnostics.Trace.WriteObjectGraph
- uid: Juhta.Net.Diagnostics.ITraceWriter.WriteOperationEnd
  commentId: M:Juhta.Net.Diagnostics.ITraceWriter.WriteOperationEnd
- uid: Juhta.Net.Diagnostics.Trace.WriteOperationEnd*
  commentId: Overload:Juhta.Net.Diagnostics.Trace.WriteOperationEnd
  isExternal: false
  name: WriteOperationEnd
  nameWithType: Trace.WriteOperationEnd
  fullName: Juhta.Net.Diagnostics.Trace.WriteOperationEnd
- uid: Juhta.Net.Diagnostics.ITraceWriter.WriteOperationEnd(System.String)
  commentId: M:Juhta.Net.Diagnostics.ITraceWriter.WriteOperationEnd(System.String)
- uid: Juhta.Net.Diagnostics.ITraceWriter.WriteOperationStart(System.String)
  commentId: M:Juhta.Net.Diagnostics.ITraceWriter.WriteOperationStart(System.String)
- uid: Juhta.Net.Diagnostics.Trace.WriteOperationStart*
  commentId: Overload:Juhta.Net.Diagnostics.Trace.WriteOperationStart
  isExternal: false
  name: WriteOperationStart
  nameWithType: Trace.WriteOperationStart
  fullName: Juhta.Net.Diagnostics.Trace.WriteOperationStart
- uid: Juhta.Net.Diagnostics.ITraceWriter.WriteSetPropertyEnd
  commentId: M:Juhta.Net.Diagnostics.ITraceWriter.WriteSetPropertyEnd
- uid: Juhta.Net.Diagnostics.Trace.WriteSetPropertyEnd*
  commentId: Overload:Juhta.Net.Diagnostics.Trace.WriteSetPropertyEnd
  isExternal: false
  name: WriteSetPropertyEnd
  nameWithType: Trace.WriteSetPropertyEnd
  fullName: Juhta.Net.Diagnostics.Trace.WriteSetPropertyEnd
- uid: Juhta.Net.Diagnostics.ITraceWriter.WriteSetPropertyEnd(System.String,System.String)
  commentId: M:Juhta.Net.Diagnostics.ITraceWriter.WriteSetPropertyEnd(System.String,System.String)
- uid: Juhta.Net.Diagnostics.ITraceWriter.WriteSetPropertyStart(System.String,System.String)
  commentId: M:Juhta.Net.Diagnostics.ITraceWriter.WriteSetPropertyStart(System.String,System.String)
- uid: Juhta.Net.Diagnostics.Trace.WriteSetPropertyStart*
  commentId: Overload:Juhta.Net.Diagnostics.Trace.WriteSetPropertyStart
  isExternal: false
  name: WriteSetPropertyStart
  nameWithType: Trace.WriteSetPropertyStart
  fullName: Juhta.Net.Diagnostics.Trace.WriteSetPropertyStart
- uid: Juhta.Net.Diagnostics.ITraceWriter.WriteSetPropertyStart(System.String,System.String,System.Object)
  commentId: M:Juhta.Net.Diagnostics.ITraceWriter.WriteSetPropertyStart(System.String,System.String,System.Object)
- uid: Juhta.Net.Diagnostics.ITraceWriter.AbsoluteIndent
  commentId: P:Juhta.Net.Diagnostics.ITraceWriter.AbsoluteIndent
- uid: Juhta.Net.Diagnostics.Trace.AbsoluteIndent*
  commentId: Overload:Juhta.Net.Diagnostics.Trace.AbsoluteIndent
  isExternal: false
  name: AbsoluteIndent
  nameWithType: Trace.AbsoluteIndent
  fullName: Juhta.Net.Diagnostics.Trace.AbsoluteIndent
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Juhta.Net.Diagnostics.Trace.IsTracingOn*
  commentId: Overload:Juhta.Net.Diagnostics.Trace.IsTracingOn
  isExternal: false
  name: IsTracingOn
  nameWithType: Trace.IsTracingOn
  fullName: Juhta.Net.Diagnostics.Trace.IsTracingOn
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Juhta.Net.Diagnostics.ITraceWriter.RelativeIndent
  commentId: P:Juhta.Net.Diagnostics.ITraceWriter.RelativeIndent
- uid: Juhta.Net.Diagnostics.Trace.RelativeIndent*
  commentId: Overload:Juhta.Net.Diagnostics.Trace.RelativeIndent
  isExternal: false
  name: RelativeIndent
  nameWithType: Trace.RelativeIndent
  fullName: Juhta.Net.Diagnostics.Trace.RelativeIndent
- uid: Juhta.Net.Diagnostics.Trace.TraceDirectory*
  commentId: Overload:Juhta.Net.Diagnostics.Trace.TraceDirectory
  isExternal: false
  name: TraceDirectory
  nameWithType: Trace.TraceDirectory
  fullName: Juhta.Net.Diagnostics.Trace.TraceDirectory
