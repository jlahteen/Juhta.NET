### YamlMime:ManagedReference
items:
- uid: Juhta.Net.WebApi.Exceptions.WebApiErrorResponse
  commentId: T:Juhta.Net.WebApi.Exceptions.WebApiErrorResponse
  id: WebApiErrorResponse
  parent: Juhta.Net.WebApi.Exceptions
  children:
  - Juhta.Net.WebApi.Exceptions.WebApiErrorResponse.ServiceStack
  - Juhta.Net.WebApi.Exceptions.WebApiErrorResponse.StatusCode
  - Juhta.Net.WebApi.Exceptions.WebApiErrorResponse.Throw
  langs:
  - csharp
  - vb
  name: WebApiErrorResponse
  nameWithType: WebApiErrorResponse
  fullName: Juhta.Net.WebApi.Exceptions.WebApiErrorResponse
  type: Class
  source:
    remote:
      path: src/Juhta.Net.WebApi.Exceptions/WebApiErrorResponse.cs
      branch: release/v1.1.0
      repo: https://github.com/jlahteen/juhta.net.git
    id: WebApiErrorResponse
    path: ../src/Juhta.Net.WebApi.Exceptions/WebApiErrorResponse.cs
    startLine: 15
  assemblies:
  - Juhta.Net.WebApi.Exceptions
  namespace: Juhta.Net.WebApi.Exceptions
  summary: "\nDefines an abstract base class for serializing instances of <xref href=\"Juhta.Net.WebApi.Exceptions.WebApiException\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public abstract class WebApiErrorResponse
    content.vb: Public MustInherit Class WebApiErrorResponse
  inheritance:
  - System.Object
  derivedClasses:
  - Juhta.Net.WebApi.Exceptions.ClientErrorResponse
  - Juhta.Net.WebApi.Exceptions.ServerErrorResponse
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Juhta.Net.WebApi.Exceptions.WebApiErrorResponse.Throw
  commentId: M:Juhta.Net.WebApi.Exceptions.WebApiErrorResponse.Throw
  id: Throw
  parent: Juhta.Net.WebApi.Exceptions.WebApiErrorResponse
  langs:
  - csharp
  - vb
  name: Throw()
  nameWithType: WebApiErrorResponse.Throw()
  fullName: Juhta.Net.WebApi.Exceptions.WebApiErrorResponse.Throw()
  type: Method
  source:
    remote:
      path: src/Juhta.Net.WebApi.Exceptions/WebApiErrorResponse.cs
      branch: release/v1.1.0
      repo: https://github.com/jlahteen/juhta.net.git
    id: Throw
    path: ../src/Juhta.Net.WebApi.Exceptions/WebApiErrorResponse.cs
    startLine: 23
  assemblies:
  - Juhta.Net.WebApi.Exceptions
  namespace: Juhta.Net.WebApi.Exceptions
  summary: "\nThrows this <xref href=\"Juhta.Net.WebApi.Exceptions.WebApiErrorResponse\" data-throw-if-not-resolved=\"false\"></xref> as a corresponding exception derived from\n<xref href=\"Juhta.Net.WebApi.Exceptions.WebApiException\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public abstract void Throw()
    content.vb: Public MustOverride Sub Throw
  overload: Juhta.Net.WebApi.Exceptions.WebApiErrorResponse.Throw*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Juhta.Net.WebApi.Exceptions.WebApiErrorResponse.ServiceStack
  commentId: P:Juhta.Net.WebApi.Exceptions.WebApiErrorResponse.ServiceStack
  id: ServiceStack
  parent: Juhta.Net.WebApi.Exceptions.WebApiErrorResponse
  langs:
  - csharp
  - vb
  name: ServiceStack
  nameWithType: WebApiErrorResponse.ServiceStack
  fullName: Juhta.Net.WebApi.Exceptions.WebApiErrorResponse.ServiceStack
  type: Property
  source:
    remote:
      path: src/Juhta.Net.WebApi.Exceptions/WebApiErrorResponse.cs
      branch: release/v1.1.0
      repo: https://github.com/jlahteen/juhta.net.git
    id: ServiceStack
    path: ../src/Juhta.Net.WebApi.Exceptions/WebApiErrorResponse.cs
    startLine: 32
  assemblies:
  - Juhta.Net.WebApi.Exceptions
  namespace: Juhta.Net.WebApi.Exceptions
  summary: "\nGets or sets the service stack of the Web API error.\n"
  example: []
  syntax:
    content: public string[] ServiceStack { get; set; }
    parameters: []
    return:
      type: System.String[]
    content.vb: Public Property ServiceStack As String()
  overload: Juhta.Net.WebApi.Exceptions.WebApiErrorResponse.ServiceStack*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Juhta.Net.WebApi.Exceptions.WebApiErrorResponse.StatusCode
  commentId: P:Juhta.Net.WebApi.Exceptions.WebApiErrorResponse.StatusCode
  id: StatusCode
  parent: Juhta.Net.WebApi.Exceptions.WebApiErrorResponse
  langs:
  - csharp
  - vb
  name: StatusCode
  nameWithType: WebApiErrorResponse.StatusCode
  fullName: Juhta.Net.WebApi.Exceptions.WebApiErrorResponse.StatusCode
  type: Property
  source:
    remote:
      path: src/Juhta.Net.WebApi.Exceptions/WebApiErrorResponse.cs
      branch: release/v1.1.0
      repo: https://github.com/jlahteen/juhta.net.git
    id: StatusCode
    path: ../src/Juhta.Net.WebApi.Exceptions/WebApiErrorResponse.cs
    startLine: 40
  assemblies:
  - Juhta.Net.WebApi.Exceptions
  namespace: Juhta.Net.WebApi.Exceptions
  summary: "\nGets or sets the HTTP status code of the Web API error.\n"
  remarks: >-
    HTTP status codes will be serialized into this field by using textual values of the enumeration

    <xref href="System.Net.HttpStatusCode" data-throw-if-not-resolved="false"></xref>. Values will also be prefixed by &apos;ClientError.&apos; or &apos;ServerError.&apos;. For

    example, &apos;ClientError.BadRequest&apos; and &apos;ServerError.BadGateway&apos; are possible values.
  example: []
  syntax:
    content: public string StatusCode { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property StatusCode As String
  overload: Juhta.Net.WebApi.Exceptions.WebApiErrorResponse.StatusCode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Juhta.Net.WebApi.Exceptions.WebApiException
  commentId: T:Juhta.Net.WebApi.Exceptions.WebApiException
  parent: Juhta.Net.WebApi.Exceptions
  isExternal: false
  name: WebApiException
  nameWithType: WebApiException
  fullName: Juhta.Net.WebApi.Exceptions.WebApiException
- uid: Juhta.Net.WebApi.Exceptions
  commentId: N:Juhta.Net.WebApi.Exceptions
  isExternal: false
  name: Juhta.Net.WebApi.Exceptions
  nameWithType: Juhta.Net.WebApi.Exceptions
  fullName: Juhta.Net.WebApi.Exceptions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Juhta.Net.WebApi.Exceptions.WebApiErrorResponse
  commentId: T:Juhta.Net.WebApi.Exceptions.WebApiErrorResponse
  parent: Juhta.Net.WebApi.Exceptions
  isExternal: false
  name: WebApiErrorResponse
  nameWithType: WebApiErrorResponse
  fullName: Juhta.Net.WebApi.Exceptions.WebApiErrorResponse
- uid: Juhta.Net.WebApi.Exceptions.WebApiErrorResponse.Throw*
  commentId: Overload:Juhta.Net.WebApi.Exceptions.WebApiErrorResponse.Throw
  isExternal: false
  name: Throw
  nameWithType: WebApiErrorResponse.Throw
  fullName: Juhta.Net.WebApi.Exceptions.WebApiErrorResponse.Throw
- uid: Juhta.Net.WebApi.Exceptions.WebApiErrorResponse.ServiceStack*
  commentId: Overload:Juhta.Net.WebApi.Exceptions.WebApiErrorResponse.ServiceStack
  isExternal: false
  name: ServiceStack
  nameWithType: WebApiErrorResponse.ServiceStack
  fullName: Juhta.Net.WebApi.Exceptions.WebApiErrorResponse.ServiceStack
- uid: System.String[]
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Net.HttpStatusCode
  commentId: T:System.Net.HttpStatusCode
  parent: System.Net
  isExternal: true
  name: HttpStatusCode
  nameWithType: HttpStatusCode
  fullName: System.Net.HttpStatusCode
- uid: Juhta.Net.WebApi.Exceptions.WebApiErrorResponse.StatusCode*
  commentId: Overload:Juhta.Net.WebApi.Exceptions.WebApiErrorResponse.StatusCode
  isExternal: false
  name: StatusCode
  nameWithType: WebApiErrorResponse.StatusCode
  fullName: Juhta.Net.WebApi.Exceptions.WebApiErrorResponse.StatusCode
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net
  commentId: N:System.Net
  isExternal: false
  name: System.Net
  nameWithType: System.Net
  fullName: System.Net
