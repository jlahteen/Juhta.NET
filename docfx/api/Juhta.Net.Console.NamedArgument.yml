### YamlMime:ManagedReference
items:
- uid: Juhta.Net.Console.NamedArgument
  commentId: T:Juhta.Net.Console.NamedArgument
  id: NamedArgument
  parent: Juhta.Net.Console
  children:
  - Juhta.Net.Console.NamedArgument.#ctor(System.String,System.String)
  langs:
  - csharp
  - vb
  name: NamedArgument
  nameWithType: NamedArgument
  fullName: Juhta.Net.Console.NamedArgument
  type: Class
  source:
    remote:
      path: src/Juhta.Net/Console/NamedArgument.cs
      branch: Dev
      repo: https://github.com/jlahteen/juhta.net
    id: NamedArgument
    path: ../src/Juhta.Net/Console/NamedArgument.cs
    startLine: 15
  assemblies:
  - Juhta.Net
  namespace: Juhta.Net.Console
  summary: "\nDefines a class that represents a named argument. At the command line level, named arguments consist of two\nseparate raw arguments. The first argument specifies the name for the argument and the second argument the\nactual argument value. The first argument must begin with a named argument prefix.\n"
  example: []
  syntax:
    content: 'public class NamedArgument : NameValueArgument'
    content.vb: >-
      Public Class NamedArgument
          Inherits NameValueArgument
  inheritance:
  - System.Object
  - Juhta.Net.Console.CommandLineArgument
  - Juhta.Net.Console.NameValueArgument
  inheritedMembers:
  - Juhta.Net.Console.NameValueArgument.Name
  - Juhta.Net.Console.CommandLineArgument.Consumed
  - Juhta.Net.Console.CommandLineArgument.Value
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Juhta.Net.Console.NamedArgument.#ctor(System.String,System.String)
  commentId: M:Juhta.Net.Console.NamedArgument.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: Juhta.Net.Console.NamedArgument
  langs:
  - csharp
  - vb
  name: NamedArgument(String, String)
  nameWithType: NamedArgument.NamedArgument(String, String)
  fullName: Juhta.Net.Console.NamedArgument.NamedArgument(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/Juhta.Net/Console/NamedArgument.cs
      branch: Dev
      repo: https://github.com/jlahteen/juhta.net
    id: .ctor
    path: ../src/Juhta.Net/Console/NamedArgument.cs
    startLine: 24
  assemblies:
  - Juhta.Net
  namespace: Juhta.Net.Console
  summary: "\nInitializes a new instance.\n"
  example: []
  syntax:
    content: public NamedArgument(string name, string value)
    parameters:
    - id: name
      type: System.String
      description: Specifies a value for the <xref href="Juhta.Net.Console.NameValueArgument.Name" data-throw-if-not-resolved="false"></xref> property.
    - id: value
      type: System.String
      description: Specifies a value for the <xref href="Juhta.Net.Console.CommandLineArgument.Value" data-throw-if-not-resolved="false"></xref> property.
    content.vb: Public Sub New(name As String, value As String)
  overload: Juhta.Net.Console.NamedArgument.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Juhta.Net.Console
  commentId: N:Juhta.Net.Console
  isExternal: false
  name: Juhta.Net.Console
  nameWithType: Juhta.Net.Console
  fullName: Juhta.Net.Console
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Juhta.Net.Console.CommandLineArgument
  commentId: T:Juhta.Net.Console.CommandLineArgument
  parent: Juhta.Net.Console
  isExternal: false
  name: CommandLineArgument
  nameWithType: CommandLineArgument
  fullName: Juhta.Net.Console.CommandLineArgument
- uid: Juhta.Net.Console.NameValueArgument
  commentId: T:Juhta.Net.Console.NameValueArgument
  parent: Juhta.Net.Console
  isExternal: false
  name: NameValueArgument
  nameWithType: NameValueArgument
  fullName: Juhta.Net.Console.NameValueArgument
- uid: Juhta.Net.Console.NameValueArgument.Name
  commentId: P:Juhta.Net.Console.NameValueArgument.Name
  parent: Juhta.Net.Console.NameValueArgument
  isExternal: false
  name: Name
  nameWithType: NameValueArgument.Name
  fullName: Juhta.Net.Console.NameValueArgument.Name
- uid: Juhta.Net.Console.CommandLineArgument.Consumed
  commentId: P:Juhta.Net.Console.CommandLineArgument.Consumed
  parent: Juhta.Net.Console.CommandLineArgument
  isExternal: false
  name: Consumed
  nameWithType: CommandLineArgument.Consumed
  fullName: Juhta.Net.Console.CommandLineArgument.Consumed
- uid: Juhta.Net.Console.CommandLineArgument.Value
  commentId: P:Juhta.Net.Console.CommandLineArgument.Value
  parent: Juhta.Net.Console.CommandLineArgument
  isExternal: false
  name: Value
  nameWithType: CommandLineArgument.Value
  fullName: Juhta.Net.Console.CommandLineArgument.Value
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Juhta.Net.Console.NamedArgument.#ctor*
  commentId: Overload:Juhta.Net.Console.NamedArgument.#ctor
  isExternal: false
  name: NamedArgument
  nameWithType: NamedArgument.NamedArgument
  fullName: Juhta.Net.Console.NamedArgument.NamedArgument
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
