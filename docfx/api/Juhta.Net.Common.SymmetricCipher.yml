### YamlMime:ManagedReference
items:
- uid: Juhta.Net.Common.SymmetricCipher
  commentId: T:Juhta.Net.Common.SymmetricCipher
  id: SymmetricCipher
  parent: Juhta.Net.Common
  children:
  - Juhta.Net.Common.SymmetricCipher.#ctor
  - Juhta.Net.Common.SymmetricCipher.#ctor(System.Security.Cryptography.SymmetricAlgorithm)
  - Juhta.Net.Common.SymmetricCipher.DecryptData(System.String,System.Byte[])
  - Juhta.Net.Common.SymmetricCipher.EncryptData(System.String,System.Byte[])
  langs:
  - csharp
  - vb
  name: SymmetricCipher
  nameWithType: SymmetricCipher
  fullName: Juhta.Net.Common.SymmetricCipher
  type: Class
  source:
    remote:
      path: src/Juhta.Net/Common/SymmetricCipher.cs
      branch: release/v1.1.0
      repo: https://github.com/jlahteen/juhta.net.git
    id: SymmetricCipher
    path: ../src/Juhta.Net/Common/SymmetricCipher.cs
    startLine: 18
  assemblies:
  - Juhta.Net
  namespace: Juhta.Net.Common
  summary: "\nDefines a class that simplifies the use of symmetric cryptographic service providers.\n"
  example: []
  syntax:
    content: public class SymmetricCipher
    content.vb: Public Class SymmetricCipher
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Juhta.Net.Common.SymmetricCipher.#ctor
  commentId: M:Juhta.Net.Common.SymmetricCipher.#ctor
  id: '#ctor'
  parent: Juhta.Net.Common.SymmetricCipher
  langs:
  - csharp
  - vb
  name: SymmetricCipher()
  nameWithType: SymmetricCipher.SymmetricCipher()
  fullName: Juhta.Net.Common.SymmetricCipher.SymmetricCipher()
  type: Constructor
  source:
    remote:
      path: src/Juhta.Net/Common/SymmetricCipher.cs
      branch: release/v1.1.0
      repo: https://github.com/jlahteen/juhta.net.git
    id: .ctor
    path: ../src/Juhta.Net/Common/SymmetricCipher.cs
    startLine: 26
  assemblies:
  - Juhta.Net
  namespace: Juhta.Net.Common
  summary: "\nInitializes a new instance.\n"
  remarks: Instances created with this constructor use the <xref href="System.Security.Cryptography.TripleDES" data-throw-if-not-resolved="false"></xref> algorithm.
  example: []
  syntax:
    content: public SymmetricCipher()
    content.vb: Public Sub New
  overload: Juhta.Net.Common.SymmetricCipher.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Juhta.Net.Common.SymmetricCipher.#ctor(System.Security.Cryptography.SymmetricAlgorithm)
  commentId: M:Juhta.Net.Common.SymmetricCipher.#ctor(System.Security.Cryptography.SymmetricAlgorithm)
  id: '#ctor(System.Security.Cryptography.SymmetricAlgorithm)'
  parent: Juhta.Net.Common.SymmetricCipher
  langs:
  - csharp
  - vb
  name: SymmetricCipher(SymmetricAlgorithm)
  nameWithType: SymmetricCipher.SymmetricCipher(SymmetricAlgorithm)
  fullName: Juhta.Net.Common.SymmetricCipher.SymmetricCipher(System.Security.Cryptography.SymmetricAlgorithm)
  type: Constructor
  source:
    remote:
      path: src/Juhta.Net/Common/SymmetricCipher.cs
      branch: release/v1.1.0
      repo: https://github.com/jlahteen/juhta.net.git
    id: .ctor
    path: ../src/Juhta.Net/Common/SymmetricCipher.cs
    startLine: 33
  assemblies:
  - Juhta.Net
  namespace: Juhta.Net.Common
  summary: "\nInitializes a new instance.\n"
  example: []
  syntax:
    content: public SymmetricCipher(SymmetricAlgorithm symmetricAlgorithm)
    parameters:
    - id: symmetricAlgorithm
      type: System.Security.Cryptography.SymmetricAlgorithm
      description: Specifies a <xref href="System.Security.Cryptography.SymmetricAlgorithm" data-throw-if-not-resolved="false"></xref> object.
    content.vb: Public Sub New(symmetricAlgorithm As SymmetricAlgorithm)
  overload: Juhta.Net.Common.SymmetricCipher.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Juhta.Net.Common.SymmetricCipher.DecryptData(System.String,System.Byte[])
  commentId: M:Juhta.Net.Common.SymmetricCipher.DecryptData(System.String,System.Byte[])
  id: DecryptData(System.String,System.Byte[])
  parent: Juhta.Net.Common.SymmetricCipher
  langs:
  - csharp
  - vb
  name: DecryptData(String, Byte[])
  nameWithType: SymmetricCipher.DecryptData(String, Byte[])
  fullName: Juhta.Net.Common.SymmetricCipher.DecryptData(System.String, System.Byte[])
  type: Method
  source:
    remote:
      path: src/Juhta.Net/Common/SymmetricCipher.cs
      branch: release/v1.1.0
      repo: https://github.com/jlahteen/juhta.net.git
    id: DecryptData
    path: ../src/Juhta.Net/Common/SymmetricCipher.cs
    startLine: 55
  assemblies:
  - Juhta.Net
  namespace: Juhta.Net.Common
  summary: "\nDecrypts a specified array of bytes containing encrypted data.\n"
  example: []
  syntax:
    content: public byte[] DecryptData(string cipherKey, byte[] encryptedData)
    parameters:
    - id: cipherKey
      type: System.String
      description: Specifies a cipher key.
    - id: encryptedData
      type: System.Byte[]
      description: Specifies an array of bytes containing encrypted data.
    return:
      type: System.Byte[]
      description: Returns an array of bytes containing the plain data.
    content.vb: Public Function DecryptData(cipherKey As String, encryptedData As Byte()) As Byte()
  overload: Juhta.Net.Common.SymmetricCipher.DecryptData*
  nameWithType.vb: SymmetricCipher.DecryptData(String, Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Juhta.Net.Common.SymmetricCipher.DecryptData(System.String, System.Byte())
  name.vb: DecryptData(String, Byte())
- uid: Juhta.Net.Common.SymmetricCipher.EncryptData(System.String,System.Byte[])
  commentId: M:Juhta.Net.Common.SymmetricCipher.EncryptData(System.String,System.Byte[])
  id: EncryptData(System.String,System.Byte[])
  parent: Juhta.Net.Common.SymmetricCipher
  langs:
  - csharp
  - vb
  name: EncryptData(String, Byte[])
  nameWithType: SymmetricCipher.EncryptData(String, Byte[])
  fullName: Juhta.Net.Common.SymmetricCipher.EncryptData(System.String, System.Byte[])
  type: Method
  source:
    remote:
      path: src/Juhta.Net/Common/SymmetricCipher.cs
      branch: release/v1.1.0
      repo: https://github.com/jlahteen/juhta.net.git
    id: EncryptData
    path: ../src/Juhta.Net/Common/SymmetricCipher.cs
    startLine: 96
  assemblies:
  - Juhta.Net
  namespace: Juhta.Net.Common
  summary: "\nEncrypts a specified array of bytes containing plain data.\n"
  example: []
  syntax:
    content: public byte[] EncryptData(string cipherKey, byte[] plainData)
    parameters:
    - id: cipherKey
      type: System.String
      description: Specifies a cipher key.
    - id: plainData
      type: System.Byte[]
      description: Specifies an array of bytes containing plain data.
    return:
      type: System.Byte[]
      description: Returns an array of bytes containing the encrypted data.
    content.vb: Public Function EncryptData(cipherKey As String, plainData As Byte()) As Byte()
  overload: Juhta.Net.Common.SymmetricCipher.EncryptData*
  nameWithType.vb: SymmetricCipher.EncryptData(String, Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Juhta.Net.Common.SymmetricCipher.EncryptData(System.String, System.Byte())
  name.vb: EncryptData(String, Byte())
references:
- uid: Juhta.Net.Common
  commentId: N:Juhta.Net.Common
  isExternal: false
  name: Juhta.Net.Common
  nameWithType: Juhta.Net.Common
  fullName: Juhta.Net.Common
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Security.Cryptography.TripleDES
  commentId: T:System.Security.Cryptography.TripleDES
- uid: Juhta.Net.Common.SymmetricCipher.#ctor*
  commentId: Overload:Juhta.Net.Common.SymmetricCipher.#ctor
  isExternal: false
  name: SymmetricCipher
  nameWithType: SymmetricCipher.SymmetricCipher
  fullName: Juhta.Net.Common.SymmetricCipher.SymmetricCipher
- uid: System.Security.Cryptography.SymmetricAlgorithm
  commentId: T:System.Security.Cryptography.SymmetricAlgorithm
  parent: System.Security.Cryptography
  isExternal: true
  name: SymmetricAlgorithm
  nameWithType: SymmetricAlgorithm
  fullName: System.Security.Cryptography.SymmetricAlgorithm
- uid: System.Security.Cryptography
  commentId: N:System.Security.Cryptography
  isExternal: false
  name: System.Security.Cryptography
  nameWithType: System.Security.Cryptography
  fullName: System.Security.Cryptography
- uid: Juhta.Net.Common.SymmetricCipher.DecryptData*
  commentId: Overload:Juhta.Net.Common.SymmetricCipher.DecryptData
  isExternal: false
  name: DecryptData
  nameWithType: SymmetricCipher.DecryptData
  fullName: Juhta.Net.Common.SymmetricCipher.DecryptData
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Juhta.Net.Common.SymmetricCipher.EncryptData*
  commentId: Overload:Juhta.Net.Common.SymmetricCipher.EncryptData
  isExternal: false
  name: EncryptData
  nameWithType: SymmetricCipher.EncryptData
  fullName: Juhta.Net.Common.SymmetricCipher.EncryptData
