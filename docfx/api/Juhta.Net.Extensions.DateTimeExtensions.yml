### YamlMime:ManagedReference
items:
- uid: Juhta.Net.Extensions.DateTimeExtensions
  commentId: T:Juhta.Net.Extensions.DateTimeExtensions
  id: DateTimeExtensions
  parent: Juhta.Net.Extensions
  children:
  - Juhta.Net.Extensions.DateTimeExtensions.ToDigitTimestamp(System.DateTime)
  - Juhta.Net.Extensions.DateTimeExtensions.ToTimestamp(System.DateTime)
  - Juhta.Net.Extensions.DateTimeExtensions.ToTimestamp(System.DateTime,System.Char)
  - Juhta.Net.Extensions.DateTimeExtensions.ToTimestamp(System.DateTime,System.Char,System.Boolean)
  - Juhta.Net.Extensions.DateTimeExtensions.ToTimestamp(System.DateTime,System.Char,System.Boolean,System.Boolean)
  langs:
  - csharp
  - vb
  name: DateTimeExtensions
  nameWithType: DateTimeExtensions
  fullName: Juhta.Net.Extensions.DateTimeExtensions
  type: Class
  source:
    remote:
      path: src/Juhta.Net/Extensions/DateTimeExtensions.cs
      branch: develop
      repo: https://github.com/jlahteen/juhta.net
    id: DateTimeExtensions
    path: ../src/Juhta.Net/Extensions/DateTimeExtensions.cs
    startLine: 15
  assemblies:
  - Juhta.Net
  namespace: Juhta.Net.Extensions
  summary: "\nDefines a static class containing extension methods for the <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> structure.\n"
  example: []
  syntax:
    content: public static class DateTimeExtensions
    content.vb: Public Module DateTimeExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Juhta.Net.Extensions.DateTimeExtensions.ToDigitTimestamp(System.DateTime)
  commentId: M:Juhta.Net.Extensions.DateTimeExtensions.ToDigitTimestamp(System.DateTime)
  id: ToDigitTimestamp(System.DateTime)
  isExtensionMethod: true
  parent: Juhta.Net.Extensions.DateTimeExtensions
  langs:
  - csharp
  - vb
  name: ToDigitTimestamp(DateTime)
  nameWithType: DateTimeExtensions.ToDigitTimestamp(DateTime)
  fullName: Juhta.Net.Extensions.DateTimeExtensions.ToDigitTimestamp(System.DateTime)
  type: Method
  source:
    remote:
      path: src/Juhta.Net/Extensions/DateTimeExtensions.cs
      branch: develop
      repo: https://github.com/jlahteen/juhta.net
    id: ToDigitTimestamp
    path: ../src/Juhta.Net/Extensions/DateTimeExtensions.cs
    startLine: 26
  assemblies:
  - Juhta.Net
  namespace: Juhta.Net.Extensions
  summary: "\nConverts the value of the current DateTime instance to an equivalent 21-digit timestamp.\n"
  remarks: >-
    Digit timestamps contain no separators between the timestamp parts. The number of digits

    expressing fractional seconds is 7.
  example: []
  syntax:
    content: public static string ToDigitTimestamp(this DateTime dateTime)
    parameters:
    - id: dateTime
      type: System.DateTime
      description: Specifies the current DateTime instance.
    return:
      type: System.String
      description: Returns the value of the current DateTime instance as a 21-digit timestamp.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ToDigitTimestamp(dateTime As Date) As String
  overload: Juhta.Net.Extensions.DateTimeExtensions.ToDigitTimestamp*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Juhta.Net.Extensions.DateTimeExtensions.ToTimestamp(System.DateTime)
  commentId: M:Juhta.Net.Extensions.DateTimeExtensions.ToTimestamp(System.DateTime)
  id: ToTimestamp(System.DateTime)
  isExtensionMethod: true
  parent: Juhta.Net.Extensions.DateTimeExtensions
  langs:
  - csharp
  - vb
  name: ToTimestamp(DateTime)
  nameWithType: DateTimeExtensions.ToTimestamp(DateTime)
  fullName: Juhta.Net.Extensions.DateTimeExtensions.ToTimestamp(System.DateTime)
  type: Method
  source:
    remote:
      path: src/Juhta.Net/Extensions/DateTimeExtensions.cs
      branch: develop
      repo: https://github.com/jlahteen/juhta.net
    id: ToTimestamp
    path: ../src/Juhta.Net/Extensions/DateTimeExtensions.cs
    startLine: 36
  assemblies:
  - Juhta.Net
  namespace: Juhta.Net.Extensions
  summary: "\nConverts the value of the current DateTime instance to an equivalent timestamp string.\n"
  example: []
  syntax:
    content: public static string ToTimestamp(this DateTime dateTime)
    parameters:
    - id: dateTime
      type: System.DateTime
      description: Specifies the current DateTime instance.
    return:
      type: System.String
      description: Returns the value of the current DateTime instance as a timestamp string.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ToTimestamp(dateTime As Date) As String
  overload: Juhta.Net.Extensions.DateTimeExtensions.ToTimestamp*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Juhta.Net.Extensions.DateTimeExtensions.ToTimestamp(System.DateTime,System.Char)
  commentId: M:Juhta.Net.Extensions.DateTimeExtensions.ToTimestamp(System.DateTime,System.Char)
  id: ToTimestamp(System.DateTime,System.Char)
  isExtensionMethod: true
  parent: Juhta.Net.Extensions.DateTimeExtensions
  langs:
  - csharp
  - vb
  name: ToTimestamp(DateTime, Char)
  nameWithType: DateTimeExtensions.ToTimestamp(DateTime, Char)
  fullName: Juhta.Net.Extensions.DateTimeExtensions.ToTimestamp(System.DateTime, System.Char)
  type: Method
  source:
    remote:
      path: src/Juhta.Net/Extensions/DateTimeExtensions.cs
      branch: develop
      repo: https://github.com/jlahteen/juhta.net
    id: ToTimestamp
    path: ../src/Juhta.Net/Extensions/DateTimeExtensions.cs
    startLine: 48
  assemblies:
  - Juhta.Net
  namespace: Juhta.Net.Extensions
  summary: "\nConverts the value of the current DateTime instance to an equivalent timestamp string.\n"
  example: []
  syntax:
    content: public static string ToTimestamp(this DateTime dateTime, char dateTimeSeparator)
    parameters:
    - id: dateTime
      type: System.DateTime
      description: Specifies the current DateTime instance.
    - id: dateTimeSeparator
      type: System.Char
      description: >-
        Specifies a character that is used to separate the date and time part in

        the timestamp.
    return:
      type: System.String
      description: Returns the value of the current DateTime instance as a timestamp string.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ToTimestamp(dateTime As Date, dateTimeSeparator As Char) As String
  overload: Juhta.Net.Extensions.DateTimeExtensions.ToTimestamp*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Juhta.Net.Extensions.DateTimeExtensions.ToTimestamp(System.DateTime,System.Char,System.Boolean)
  commentId: M:Juhta.Net.Extensions.DateTimeExtensions.ToTimestamp(System.DateTime,System.Char,System.Boolean)
  id: ToTimestamp(System.DateTime,System.Char,System.Boolean)
  isExtensionMethod: true
  parent: Juhta.Net.Extensions.DateTimeExtensions
  langs:
  - csharp
  - vb
  name: ToTimestamp(DateTime, Char, Boolean)
  nameWithType: DateTimeExtensions.ToTimestamp(DateTime, Char, Boolean)
  fullName: Juhta.Net.Extensions.DateTimeExtensions.ToTimestamp(System.DateTime, System.Char, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Juhta.Net/Extensions/DateTimeExtensions.cs
      branch: develop
      repo: https://github.com/jlahteen/juhta.net
    id: ToTimestamp
    path: ../src/Juhta.Net/Extensions/DateTimeExtensions.cs
    startLine: 61
  assemblies:
  - Juhta.Net
  namespace: Juhta.Net.Extensions
  summary: "\nConverts the value of the current DateTime instance to an equivalent timestamp string.\n"
  example: []
  syntax:
    content: public static string ToTimestamp(this DateTime dateTime, char dateTimeSeparator, bool addFractionalSeconds)
    parameters:
    - id: dateTime
      type: System.DateTime
      description: Specifies the current DateTime instance.
    - id: dateTimeSeparator
      type: System.Char
      description: >-
        Specifies a character that is used to separate the date and time part in

        the timestamp.
    - id: addFractionalSeconds
      type: System.Boolean
      description: If true, adds fractional seconds to the timestamp.
    return:
      type: System.String
      description: Returns the value of the current DateTime instance as a timestamp string.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ToTimestamp(dateTime As Date, dateTimeSeparator As Char, addFractionalSeconds As Boolean) As String
  overload: Juhta.Net.Extensions.DateTimeExtensions.ToTimestamp*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Juhta.Net.Extensions.DateTimeExtensions.ToTimestamp(System.DateTime,System.Char,System.Boolean,System.Boolean)
  commentId: M:Juhta.Net.Extensions.DateTimeExtensions.ToTimestamp(System.DateTime,System.Char,System.Boolean,System.Boolean)
  id: ToTimestamp(System.DateTime,System.Char,System.Boolean,System.Boolean)
  isExtensionMethod: true
  parent: Juhta.Net.Extensions.DateTimeExtensions
  langs:
  - csharp
  - vb
  name: ToTimestamp(DateTime, Char, Boolean, Boolean)
  nameWithType: DateTimeExtensions.ToTimestamp(DateTime, Char, Boolean, Boolean)
  fullName: Juhta.Net.Extensions.DateTimeExtensions.ToTimestamp(System.DateTime, System.Char, System.Boolean, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Juhta.Net/Extensions/DateTimeExtensions.cs
      branch: develop
      repo: https://github.com/jlahteen/juhta.net
    id: ToTimestamp
    path: ../src/Juhta.Net/Extensions/DateTimeExtensions.cs
    startLine: 75
  assemblies:
  - Juhta.Net
  namespace: Juhta.Net.Extensions
  summary: "\nConverts the value of the current DateTime instance to an equivalent timestamp string.\n"
  example: []
  syntax:
    content: public static string ToTimestamp(this DateTime dateTime, char dateTimeSeparator, bool addFractionalSeconds, bool addUtcOffset)
    parameters:
    - id: dateTime
      type: System.DateTime
      description: Specifies the current DateTime instance.
    - id: dateTimeSeparator
      type: System.Char
      description: >-
        Specifies a character that is used to separate the date and time part in

        the timestamp.
    - id: addFractionalSeconds
      type: System.Boolean
      description: If true, adds fractional seconds to the timestamp.
    - id: addUtcOffset
      type: System.Boolean
      description: If true, adds the offset to Coordinated Universal Time to the timestamp.
    return:
      type: System.String
      description: Returns the value of the current DateTime instance as a timestamp string.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ToTimestamp(dateTime As Date, dateTimeSeparator As Char, addFractionalSeconds As Boolean, addUtcOffset As Boolean) As String
  overload: Juhta.Net.Extensions.DateTimeExtensions.ToTimestamp*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: Juhta.Net.Extensions
  commentId: N:Juhta.Net.Extensions
  isExternal: false
  name: Juhta.Net.Extensions
  nameWithType: Juhta.Net.Extensions
  fullName: Juhta.Net.Extensions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Juhta.Net.Extensions.DateTimeExtensions.ToDigitTimestamp*
  commentId: Overload:Juhta.Net.Extensions.DateTimeExtensions.ToDigitTimestamp
  isExternal: false
  name: ToDigitTimestamp
  nameWithType: DateTimeExtensions.ToDigitTimestamp
  fullName: Juhta.Net.Extensions.DateTimeExtensions.ToDigitTimestamp
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Juhta.Net.Extensions.DateTimeExtensions.ToTimestamp*
  commentId: Overload:Juhta.Net.Extensions.DateTimeExtensions.ToTimestamp
  isExternal: false
  name: ToTimestamp
  nameWithType: DateTimeExtensions.ToTimestamp
  fullName: Juhta.Net.Extensions.DateTimeExtensions.ToTimestamp
- uid: System.Char
  commentId: T:System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
