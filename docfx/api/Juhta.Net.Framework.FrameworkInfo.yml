### YamlMime:ManagedReference
items:
- uid: Juhta.Net.Framework.FrameworkInfo
  commentId: T:Juhta.Net.Framework.FrameworkInfo
  id: FrameworkInfo
  parent: Juhta.Net.Framework
  children:
  - Juhta.Net.Framework.FrameworkInfo.BinDirectory
  - Juhta.Net.Framework.FrameworkInfo.Copyright
  - Juhta.Net.Framework.FrameworkInfo.FrameworkName
  - Juhta.Net.Framework.FrameworkInfo.RootNamespace
  langs:
  - csharp
  - vb
  name: FrameworkInfo
  nameWithType: FrameworkInfo
  fullName: Juhta.Net.Framework.FrameworkInfo
  type: Class
  source:
    remote:
      path: src/Juhta.Net/Framework/FrameworkInfo.cs
      branch: release/v1.1.0
      repo: https://github.com/jlahteen/juhta.net.git
    id: FrameworkInfo
    path: ../src/Juhta.Net/Framework/FrameworkInfo.cs
    startLine: 16
  assemblies:
  - Juhta.Net
  namespace: Juhta.Net.Framework
  summary: "\nA static class that provides read-only information about the framework.\n"
  example: []
  syntax:
    content: public static class FrameworkInfo
    content.vb: Public Module FrameworkInfo
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Juhta.Net.Framework.FrameworkInfo.BinDirectory
  commentId: P:Juhta.Net.Framework.FrameworkInfo.BinDirectory
  id: BinDirectory
  parent: Juhta.Net.Framework.FrameworkInfo
  langs:
  - csharp
  - vb
  name: BinDirectory
  nameWithType: FrameworkInfo.BinDirectory
  fullName: Juhta.Net.Framework.FrameworkInfo.BinDirectory
  type: Property
  source:
    remote:
      path: src/Juhta.Net/Framework/FrameworkInfo.cs
      branch: release/v1.1.0
      repo: https://github.com/jlahteen/juhta.net.git
    id: BinDirectory
    path: ../src/Juhta.Net/Framework/FrameworkInfo.cs
    startLine: 23
  assemblies:
  - Juhta.Net
  namespace: Juhta.Net.Framework
  summary: "\nGets the directory of the framework binaries.\n"
  example: []
  syntax:
    content: public static string BinDirectory { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Shared ReadOnly Property BinDirectory As String
  overload: Juhta.Net.Framework.FrameworkInfo.BinDirectory*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Juhta.Net.Framework.FrameworkInfo.Copyright
  commentId: P:Juhta.Net.Framework.FrameworkInfo.Copyright
  id: Copyright
  parent: Juhta.Net.Framework.FrameworkInfo
  langs:
  - csharp
  - vb
  name: Copyright
  nameWithType: FrameworkInfo.Copyright
  fullName: Juhta.Net.Framework.FrameworkInfo.Copyright
  type: Property
  source:
    remote:
      path: src/Juhta.Net/Framework/FrameworkInfo.cs
      branch: release/v1.1.0
      repo: https://github.com/jlahteen/juhta.net.git
    id: Copyright
    path: ../src/Juhta.Net/Framework/FrameworkInfo.cs
    startLine: 31
  assemblies:
  - Juhta.Net
  namespace: Juhta.Net.Framework
  summary: "\nGets the copyright of the framework.\n"
  example: []
  syntax:
    content: public static string Copyright { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Shared ReadOnly Property Copyright As String
  overload: Juhta.Net.Framework.FrameworkInfo.Copyright*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Juhta.Net.Framework.FrameworkInfo.FrameworkName
  commentId: P:Juhta.Net.Framework.FrameworkInfo.FrameworkName
  id: FrameworkName
  parent: Juhta.Net.Framework.FrameworkInfo
  langs:
  - csharp
  - vb
  name: FrameworkName
  nameWithType: FrameworkInfo.FrameworkName
  fullName: Juhta.Net.Framework.FrameworkInfo.FrameworkName
  type: Property
  source:
    remote:
      path: src/Juhta.Net/Framework/FrameworkInfo.cs
      branch: release/v1.1.0
      repo: https://github.com/jlahteen/juhta.net.git
    id: FrameworkName
    path: ../src/Juhta.Net/Framework/FrameworkInfo.cs
    startLine: 39
  assemblies:
  - Juhta.Net
  namespace: Juhta.Net.Framework
  summary: "\nGets the name of the framework.\n"
  example: []
  syntax:
    content: public static string FrameworkName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Shared ReadOnly Property FrameworkName As String
  overload: Juhta.Net.Framework.FrameworkInfo.FrameworkName*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Juhta.Net.Framework.FrameworkInfo.RootNamespace
  commentId: P:Juhta.Net.Framework.FrameworkInfo.RootNamespace
  id: RootNamespace
  parent: Juhta.Net.Framework.FrameworkInfo
  langs:
  - csharp
  - vb
  name: RootNamespace
  nameWithType: FrameworkInfo.RootNamespace
  fullName: Juhta.Net.Framework.FrameworkInfo.RootNamespace
  type: Property
  source:
    remote:
      path: src/Juhta.Net/Framework/FrameworkInfo.cs
      branch: release/v1.1.0
      repo: https://github.com/jlahteen/juhta.net.git
    id: RootNamespace
    path: ../src/Juhta.Net/Framework/FrameworkInfo.cs
    startLine: 47
  assemblies:
  - Juhta.Net
  namespace: Juhta.Net.Framework
  summary: "\nGets the root namespace of the framework.\n"
  example: []
  syntax:
    content: public static string RootNamespace { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Shared ReadOnly Property RootNamespace As String
  overload: Juhta.Net.Framework.FrameworkInfo.RootNamespace*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
references:
- uid: Juhta.Net.Framework
  commentId: N:Juhta.Net.Framework
  isExternal: false
  name: Juhta.Net.Framework
  nameWithType: Juhta.Net.Framework
  fullName: Juhta.Net.Framework
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Juhta.Net.Framework.FrameworkInfo.BinDirectory*
  commentId: Overload:Juhta.Net.Framework.FrameworkInfo.BinDirectory
  isExternal: false
  name: BinDirectory
  nameWithType: FrameworkInfo.BinDirectory
  fullName: Juhta.Net.Framework.FrameworkInfo.BinDirectory
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Juhta.Net.Framework.FrameworkInfo.Copyright*
  commentId: Overload:Juhta.Net.Framework.FrameworkInfo.Copyright
  isExternal: false
  name: Copyright
  nameWithType: FrameworkInfo.Copyright
  fullName: Juhta.Net.Framework.FrameworkInfo.Copyright
- uid: Juhta.Net.Framework.FrameworkInfo.FrameworkName*
  commentId: Overload:Juhta.Net.Framework.FrameworkInfo.FrameworkName
  isExternal: false
  name: FrameworkName
  nameWithType: FrameworkInfo.FrameworkName
  fullName: Juhta.Net.Framework.FrameworkInfo.FrameworkName
- uid: Juhta.Net.Framework.FrameworkInfo.RootNamespace*
  commentId: Overload:Juhta.Net.Framework.FrameworkInfo.RootNamespace
  isExternal: false
  name: RootNamespace
  nameWithType: FrameworkInfo.RootNamespace
  fullName: Juhta.Net.Framework.FrameworkInfo.RootNamespace
