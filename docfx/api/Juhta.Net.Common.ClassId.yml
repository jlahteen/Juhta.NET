### YamlMime:ManagedReference
items:
- uid: Juhta.Net.Common.ClassId
  commentId: T:Juhta.Net.Common.ClassId
  id: ClassId
  parent: Juhta.Net.Common
  children:
  - Juhta.Net.Common.ClassId.#ctor(System.String)
  - Juhta.Net.Common.ClassId.#ctor(System.String,System.String)
  - Juhta.Net.Common.ClassId.ClassName
  - Juhta.Net.Common.ClassId.ClassNamespace
  - Juhta.Net.Common.ClassId.FullClassName
  - Juhta.Net.Common.ClassId.LibraryDirectory
  - Juhta.Net.Common.ClassId.LibraryFileName
  - Juhta.Net.Common.ClassId.LibraryFilePath
  langs:
  - csharp
  - vb
  name: ClassId
  nameWithType: ClassId
  fullName: Juhta.Net.Common.ClassId
  type: Class
  source:
    remote:
      path: src/Juhta.Net/Common/ClassId.cs
      branch: release/v1.0.0-rc2
      repo: https://github.com/jlahteen/juhta.net.git
    id: ClassId
    path: ../src/Juhta.Net/Common/ClassId.cs
    startLine: 37
  assemblies:
  - Juhta.Net
  namespace: Juhta.Net.Common
  summary: "\n<p>Defines a class identifier. A class identifier is a localhost file URI whose fragment part specifies a\nclass name in a referenced library file.</p>\n<p>The fragment part can begin with a &apos;~.&apos; prefix indicating that the library file name specifies the root\nnamespace of the class. If a library path is not absolute, the path will be filled according to the current\ndirectory.</p>\n<p>For example, the following values are valid class identifiers:</p>\n<ul><li><code>MyLibrary.dll#~.MyClass</code></li><li><code>file:///MyLibrary.dll#~.MyClass</code></li><li><code>file:///C:\\MyDirectory\\MyLibrary.dll#~.MyClass</code></li><li><code>file:///C:\\MyDirectory\\MyLibrary.dll#MyNamespace.MyClass</code></li></ul>\n"
  example: []
  syntax:
    content: public class ClassId
    content.vb: Public Class ClassId
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Juhta.Net.Common.ClassId.#ctor(System.String)
  commentId: M:Juhta.Net.Common.ClassId.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Juhta.Net.Common.ClassId
  langs:
  - csharp
  - vb
  name: ClassId(String)
  nameWithType: ClassId.ClassId(String)
  fullName: Juhta.Net.Common.ClassId.ClassId(System.String)
  type: Constructor
  source:
    remote:
      path: src/Juhta.Net/Common/ClassId.cs
      branch: release/v1.0.0-rc2
      repo: https://github.com/jlahteen/juhta.net.git
    id: .ctor
    path: ../src/Juhta.Net/Common/ClassId.cs
    startLine: 45
  assemblies:
  - Juhta.Net
  namespace: Juhta.Net.Common
  summary: "\nInitializes a new instance.\n"
  example: []
  syntax:
    content: public ClassId(string classId)
    parameters:
    - id: classId
      type: System.String
      description: Specifies a class identifier as a string.
    content.vb: Public Sub New(classId As String)
  overload: Juhta.Net.Common.ClassId.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Juhta.Net.Common.ClassId.#ctor(System.String,System.String)
  commentId: M:Juhta.Net.Common.ClassId.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: Juhta.Net.Common.ClassId
  langs:
  - csharp
  - vb
  name: ClassId(String, String)
  nameWithType: ClassId.ClassId(String, String)
  fullName: Juhta.Net.Common.ClassId.ClassId(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/Juhta.Net/Common/ClassId.cs
      branch: release/v1.0.0-rc2
      repo: https://github.com/jlahteen/juhta.net.git
    id: .ctor
    path: ../src/Juhta.Net/Common/ClassId.cs
    startLine: 54
  assemblies:
  - Juhta.Net
  namespace: Juhta.Net.Common
  summary: "\nInitializes a new instance.\n"
  example: []
  syntax:
    content: public ClassId(string classId, string libraryDirectory)
    parameters:
    - id: classId
      type: System.String
      description: Specifies a class identifier as a string.
    - id: libraryDirectory
      type: System.String
      description: >-
        Specifies a library directory. Can be null. If non-null,

        <code data-dev-comment-type="paramref" class="paramref">classId</code> must not contain a library directory part.
    content.vb: Public Sub New(classId As String, libraryDirectory As String)
  overload: Juhta.Net.Common.ClassId.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Juhta.Net.Common.ClassId.ClassName
  commentId: P:Juhta.Net.Common.ClassId.ClassName
  id: ClassName
  parent: Juhta.Net.Common.ClassId
  langs:
  - csharp
  - vb
  name: ClassName
  nameWithType: ClassId.ClassName
  fullName: Juhta.Net.Common.ClassId.ClassName
  type: Property
  source:
    remote:
      path: src/Juhta.Net/Common/ClassId.cs
      branch: release/v1.0.0-rc2
      repo: https://github.com/jlahteen/juhta.net.git
    id: ClassName
    path: ../src/Juhta.Net/Common/ClassId.cs
    startLine: 159
  assemblies:
  - Juhta.Net
  namespace: Juhta.Net.Common
  summary: "\nGets the name of the class associated with this <xref href=\"Juhta.Net.Common.ClassId\" data-throw-if-not-resolved=\"false\"></xref> instance.\n"
  example: []
  syntax:
    content: public string ClassName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property ClassName As String
  overload: Juhta.Net.Common.ClassId.ClassName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Juhta.Net.Common.ClassId.ClassNamespace
  commentId: P:Juhta.Net.Common.ClassId.ClassNamespace
  id: ClassNamespace
  parent: Juhta.Net.Common.ClassId
  langs:
  - csharp
  - vb
  name: ClassNamespace
  nameWithType: ClassId.ClassNamespace
  fullName: Juhta.Net.Common.ClassId.ClassNamespace
  type: Property
  source:
    remote:
      path: src/Juhta.Net/Common/ClassId.cs
      branch: release/v1.0.0-rc2
      repo: https://github.com/jlahteen/juhta.net.git
    id: ClassNamespace
    path: ../src/Juhta.Net/Common/ClassId.cs
    startLine: 167
  assemblies:
  - Juhta.Net
  namespace: Juhta.Net.Common
  summary: "\nGets the namespace of the class associated with this <xref href=\"Juhta.Net.Common.ClassId\" data-throw-if-not-resolved=\"false\"></xref> instance.\n"
  example: []
  syntax:
    content: public string ClassNamespace { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property ClassNamespace As String
  overload: Juhta.Net.Common.ClassId.ClassNamespace*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Juhta.Net.Common.ClassId.FullClassName
  commentId: P:Juhta.Net.Common.ClassId.FullClassName
  id: FullClassName
  parent: Juhta.Net.Common.ClassId
  langs:
  - csharp
  - vb
  name: FullClassName
  nameWithType: ClassId.FullClassName
  fullName: Juhta.Net.Common.ClassId.FullClassName
  type: Property
  source:
    remote:
      path: src/Juhta.Net/Common/ClassId.cs
      branch: release/v1.0.0-rc2
      repo: https://github.com/jlahteen/juhta.net.git
    id: FullClassName
    path: ../src/Juhta.Net/Common/ClassId.cs
    startLine: 175
  assemblies:
  - Juhta.Net
  namespace: Juhta.Net.Common
  summary: "\nGets the full name of the class associated with this <xref href=\"Juhta.Net.Common.ClassId\" data-throw-if-not-resolved=\"false\"></xref> instance.\n"
  example: []
  syntax:
    content: public string FullClassName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property FullClassName As String
  overload: Juhta.Net.Common.ClassId.FullClassName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Juhta.Net.Common.ClassId.LibraryDirectory
  commentId: P:Juhta.Net.Common.ClassId.LibraryDirectory
  id: LibraryDirectory
  parent: Juhta.Net.Common.ClassId
  langs:
  - csharp
  - vb
  name: LibraryDirectory
  nameWithType: ClassId.LibraryDirectory
  fullName: Juhta.Net.Common.ClassId.LibraryDirectory
  type: Property
  source:
    remote:
      path: src/Juhta.Net/Common/ClassId.cs
      branch: release/v1.0.0-rc2
      repo: https://github.com/jlahteen/juhta.net.git
    id: LibraryDirectory
    path: ../src/Juhta.Net/Common/ClassId.cs
    startLine: 183
  assemblies:
  - Juhta.Net
  namespace: Juhta.Net.Common
  summary: "\nGets the library directory of the class associated with this <xref href=\"Juhta.Net.Common.ClassId\" data-throw-if-not-resolved=\"false\"></xref> instance.\n"
  example: []
  syntax:
    content: public string LibraryDirectory { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property LibraryDirectory As String
  overload: Juhta.Net.Common.ClassId.LibraryDirectory*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Juhta.Net.Common.ClassId.LibraryFileName
  commentId: P:Juhta.Net.Common.ClassId.LibraryFileName
  id: LibraryFileName
  parent: Juhta.Net.Common.ClassId
  langs:
  - csharp
  - vb
  name: LibraryFileName
  nameWithType: ClassId.LibraryFileName
  fullName: Juhta.Net.Common.ClassId.LibraryFileName
  type: Property
  source:
    remote:
      path: src/Juhta.Net/Common/ClassId.cs
      branch: release/v1.0.0-rc2
      repo: https://github.com/jlahteen/juhta.net.git
    id: LibraryFileName
    path: ../src/Juhta.Net/Common/ClassId.cs
    startLine: 191
  assemblies:
  - Juhta.Net
  namespace: Juhta.Net.Common
  summary: "\nGets the library file name of the class associated with this <xref href=\"Juhta.Net.Common.ClassId\" data-throw-if-not-resolved=\"false\"></xref> instance.\n"
  example: []
  syntax:
    content: public string LibraryFileName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property LibraryFileName As String
  overload: Juhta.Net.Common.ClassId.LibraryFileName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Juhta.Net.Common.ClassId.LibraryFilePath
  commentId: P:Juhta.Net.Common.ClassId.LibraryFilePath
  id: LibraryFilePath
  parent: Juhta.Net.Common.ClassId
  langs:
  - csharp
  - vb
  name: LibraryFilePath
  nameWithType: ClassId.LibraryFilePath
  fullName: Juhta.Net.Common.ClassId.LibraryFilePath
  type: Property
  source:
    remote:
      path: src/Juhta.Net/Common/ClassId.cs
      branch: release/v1.0.0-rc2
      repo: https://github.com/jlahteen/juhta.net.git
    id: LibraryFilePath
    path: ../src/Juhta.Net/Common/ClassId.cs
    startLine: 199
  assemblies:
  - Juhta.Net
  namespace: Juhta.Net.Common
  summary: "\nGets the library file path of the class associated with this <xref href=\"Juhta.Net.Common.ClassId\" data-throw-if-not-resolved=\"false\"></xref> instance.\n"
  example: []
  syntax:
    content: public string LibraryFilePath { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property LibraryFilePath As String
  overload: Juhta.Net.Common.ClassId.LibraryFilePath*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Juhta.Net.Common
  commentId: N:Juhta.Net.Common
  isExternal: false
  name: Juhta.Net.Common
  nameWithType: Juhta.Net.Common
  fullName: Juhta.Net.Common
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Juhta.Net.Common.ClassId.#ctor*
  commentId: Overload:Juhta.Net.Common.ClassId.#ctor
  isExternal: false
  name: ClassId
  nameWithType: ClassId.ClassId
  fullName: Juhta.Net.Common.ClassId.ClassId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Juhta.Net.Common.ClassId
  commentId: T:Juhta.Net.Common.ClassId
  parent: Juhta.Net.Common
  isExternal: false
  name: ClassId
  nameWithType: ClassId
  fullName: Juhta.Net.Common.ClassId
- uid: Juhta.Net.Common.ClassId.ClassName*
  commentId: Overload:Juhta.Net.Common.ClassId.ClassName
  isExternal: false
  name: ClassName
  nameWithType: ClassId.ClassName
  fullName: Juhta.Net.Common.ClassId.ClassName
- uid: Juhta.Net.Common.ClassId.ClassNamespace*
  commentId: Overload:Juhta.Net.Common.ClassId.ClassNamespace
  isExternal: false
  name: ClassNamespace
  nameWithType: ClassId.ClassNamespace
  fullName: Juhta.Net.Common.ClassId.ClassNamespace
- uid: Juhta.Net.Common.ClassId.FullClassName*
  commentId: Overload:Juhta.Net.Common.ClassId.FullClassName
  isExternal: false
  name: FullClassName
  nameWithType: ClassId.FullClassName
  fullName: Juhta.Net.Common.ClassId.FullClassName
- uid: Juhta.Net.Common.ClassId.LibraryDirectory*
  commentId: Overload:Juhta.Net.Common.ClassId.LibraryDirectory
  isExternal: false
  name: LibraryDirectory
  nameWithType: ClassId.LibraryDirectory
  fullName: Juhta.Net.Common.ClassId.LibraryDirectory
- uid: Juhta.Net.Common.ClassId.LibraryFileName*
  commentId: Overload:Juhta.Net.Common.ClassId.LibraryFileName
  isExternal: false
  name: LibraryFileName
  nameWithType: ClassId.LibraryFileName
  fullName: Juhta.Net.Common.ClassId.LibraryFileName
- uid: Juhta.Net.Common.ClassId.LibraryFilePath*
  commentId: Overload:Juhta.Net.Common.ClassId.LibraryFilePath
  isExternal: false
  name: LibraryFilePath
  nameWithType: ClassId.LibraryFilePath
  fullName: Juhta.Net.Common.ClassId.LibraryFilePath
