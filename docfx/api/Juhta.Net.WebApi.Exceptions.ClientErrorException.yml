### YamlMime:ManagedReference
items:
- uid: Juhta.Net.WebApi.Exceptions.ClientErrorException
  commentId: T:Juhta.Net.WebApi.Exceptions.ClientErrorException
  id: ClientErrorException
  parent: Juhta.Net.WebApi.Exceptions
  children:
  - Juhta.Net.WebApi.Exceptions.ClientErrorException.#ctor(Juhta.Net.WebApi.Exceptions.ClientErrorResponse)
  - Juhta.Net.WebApi.Exceptions.ClientErrorException.#ctor(System.Net.HttpStatusCode)
  - Juhta.Net.WebApi.Exceptions.ClientErrorException.#ctor(System.Net.HttpStatusCode,Juhta.Net.WebApi.Exceptions.ClientError)
  - Juhta.Net.WebApi.Exceptions.ClientErrorException.#ctor(System.Net.HttpStatusCode,System.Collections.Generic.IEnumerable{Juhta.Net.WebApi.Exceptions.ClientError})
  - Juhta.Net.WebApi.Exceptions.ClientErrorException.#ctor(System.Net.HttpStatusCode,System.String)
  - Juhta.Net.WebApi.Exceptions.ClientErrorException.#ctor(System.Net.HttpStatusCode,System.String,System.String)
  - Juhta.Net.WebApi.Exceptions.ClientErrorException.#ctor(System.Net.HttpStatusCode,System.String,System.String,System.String)
  - Juhta.Net.WebApi.Exceptions.ClientErrorException.#ctor(System.Net.HttpStatusCode,System.String,System.String,System.String,System.String)
  - Juhta.Net.WebApi.Exceptions.ClientErrorException.Error
  - Juhta.Net.WebApi.Exceptions.ClientErrorException.Errors
  - Juhta.Net.WebApi.Exceptions.ClientErrorException.ToClientErrorResponse
  - Juhta.Net.WebApi.Exceptions.ClientErrorException.ToString
  langs:
  - csharp
  - vb
  name: ClientErrorException
  nameWithType: ClientErrorException
  fullName: Juhta.Net.WebApi.Exceptions.ClientErrorException
  type: Class
  source:
    remote:
      path: src/Juhta.Net.WebApi.Exceptions/ClientErrorException.cs
      branch: release/v1.1.0
      repo: https://github.com/jlahteen/juhta.net.git
    id: ClientErrorException
    path: ../src/Juhta.Net.WebApi.Exceptions/ClientErrorException.cs
    startLine: 18
  assemblies:
  - Juhta.Net.WebApi.Exceptions
  namespace: Juhta.Net.WebApi.Exceptions
  summary: "\nDefines an abstract base class for the client error Web API exceptions.\n"
  example: []
  syntax:
    content: 'public abstract class ClientErrorException : WebApiException, ISerializable'
    content.vb: >-
      Public MustInherit Class ClientErrorException

          Inherits WebApiException

          Implements ISerializable
  inheritance:
  - System.Object
  - System.Exception
  - Juhta.Net.WebApi.Exceptions.WebApiException
  derivedClasses:
  - Juhta.Net.WebApi.Exceptions.ClientErrors.BadRequestException
  - Juhta.Net.WebApi.Exceptions.ClientErrors.ConflictException
  - Juhta.Net.WebApi.Exceptions.ClientErrors.ExpectationFailedException
  - Juhta.Net.WebApi.Exceptions.ClientErrors.ForbiddenException
  - Juhta.Net.WebApi.Exceptions.ClientErrors.GoneException
  - Juhta.Net.WebApi.Exceptions.ClientErrors.LengthRequiredException
  - Juhta.Net.WebApi.Exceptions.ClientErrors.MethodNotAllowedException
  - Juhta.Net.WebApi.Exceptions.ClientErrors.NotAcceptableException
  - Juhta.Net.WebApi.Exceptions.ClientErrors.NotFoundException
  - Juhta.Net.WebApi.Exceptions.ClientErrors.PaymentRequiredException
  - Juhta.Net.WebApi.Exceptions.ClientErrors.PreconditionFailedException
  - Juhta.Net.WebApi.Exceptions.ClientErrors.ProxyAuthenticationRequiredException
  - Juhta.Net.WebApi.Exceptions.ClientErrors.RequestedRangeNotSatisfiableException
  - Juhta.Net.WebApi.Exceptions.ClientErrors.RequestEntityTooLargeException
  - Juhta.Net.WebApi.Exceptions.ClientErrors.RequestTimeoutException
  - Juhta.Net.WebApi.Exceptions.ClientErrors.RequestUriTooLongException
  - Juhta.Net.WebApi.Exceptions.ClientErrors.UnauthorizedException
  - Juhta.Net.WebApi.Exceptions.ClientErrors.UnsupportedMediaTypeException
  - Juhta.Net.WebApi.Exceptions.ClientErrors.UpgradeRequiredException
  implements:
  - System.Runtime.Serialization.ISerializable
  inheritedMembers:
  - Juhta.Net.WebApi.Exceptions.WebApiException.SetServiceName(System.String)
  - Juhta.Net.WebApi.Exceptions.WebApiException.ServiceStack
  - Juhta.Net.WebApi.Exceptions.WebApiException.StatusCode
  - System.Exception.GetBaseException
  - System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Exception.GetType
  - System.Exception.Data
  - System.Exception.HelpLink
  - System.Exception.HResult
  - System.Exception.InnerException
  - System.Exception.Message
  - System.Exception.Source
  - System.Exception.StackTrace
  - System.Exception.TargetSite
  - System.Exception.SerializeObjectState
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Juhta.Net.WebApi.Exceptions.ClientErrorException.ToClientErrorResponse
  commentId: M:Juhta.Net.WebApi.Exceptions.ClientErrorException.ToClientErrorResponse
  id: ToClientErrorResponse
  parent: Juhta.Net.WebApi.Exceptions.ClientErrorException
  langs:
  - csharp
  - vb
  name: ToClientErrorResponse()
  nameWithType: ClientErrorException.ToClientErrorResponse()
  fullName: Juhta.Net.WebApi.Exceptions.ClientErrorException.ToClientErrorResponse()
  type: Method
  source:
    remote:
      path: src/Juhta.Net.WebApi.Exceptions/ClientErrorException.cs
      branch: release/v1.1.0
      repo: https://github.com/jlahteen/juhta.net.git
    id: ToClientErrorResponse
    path: ../src/Juhta.Net.WebApi.Exceptions/ClientErrorException.cs
    startLine: 26
  assemblies:
  - Juhta.Net.WebApi.Exceptions
  namespace: Juhta.Net.WebApi.Exceptions
  summary: "\nConverts this <xref href=\"Juhta.Net.WebApi.Exceptions.ClientErrorException\" data-throw-if-not-resolved=\"false\"></xref> object to a <xref href=\"Juhta.Net.WebApi.Exceptions.ClientErrorResponse\" data-throw-if-not-resolved=\"false\"></xref> object.\n"
  example: []
  syntax:
    content: public ClientErrorResponse ToClientErrorResponse()
    return:
      type: Juhta.Net.WebApi.Exceptions.ClientErrorResponse
      description: Returns the resulting <xref href="Juhta.Net.WebApi.Exceptions.ClientErrorResponse" data-throw-if-not-resolved="false"></xref> object.
    content.vb: Public Function ToClientErrorResponse As ClientErrorResponse
  overload: Juhta.Net.WebApi.Exceptions.ClientErrorException.ToClientErrorResponse*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Juhta.Net.WebApi.Exceptions.ClientErrorException.ToString
  commentId: M:Juhta.Net.WebApi.Exceptions.ClientErrorException.ToString
  id: ToString
  parent: Juhta.Net.WebApi.Exceptions.ClientErrorException
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ClientErrorException.ToString()
  fullName: Juhta.Net.WebApi.Exceptions.ClientErrorException.ToString()
  type: Method
  source:
    remote:
      path: src/Juhta.Net.WebApi.Exceptions/ClientErrorException.cs
      branch: release/v1.1.0
      repo: https://github.com/jlahteen/juhta.net.git
    id: ToString
    path: ../src/Juhta.Net.WebApi.Exceptions/ClientErrorException.cs
    startLine: 43
  assemblies:
  - Juhta.Net.WebApi.Exceptions
  namespace: Juhta.Net.WebApi.Exceptions
  summary: "\nConverts this <xref href=\"Juhta.Net.WebApi.Exceptions.ClientErrorException\" data-throw-if-not-resolved=\"false\"></xref> instance to a string.\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: Returns this <xref href="Juhta.Net.WebApi.Exceptions.ClientErrorException" data-throw-if-not-resolved="false"></xref>instance as a string.
    content.vb: Public Overrides Function ToString As String
  overridden: Juhta.Net.WebApi.Exceptions.WebApiException.ToString
  overload: Juhta.Net.WebApi.Exceptions.ClientErrorException.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Juhta.Net.WebApi.Exceptions.ClientErrorException.Error
  commentId: P:Juhta.Net.WebApi.Exceptions.ClientErrorException.Error
  id: Error
  parent: Juhta.Net.WebApi.Exceptions.ClientErrorException
  langs:
  - csharp
  - vb
  name: Error
  nameWithType: ClientErrorException.Error
  fullName: Juhta.Net.WebApi.Exceptions.ClientErrorException.Error
  type: Property
  source:
    remote:
      path: src/Juhta.Net.WebApi.Exceptions/ClientErrorException.cs
      branch: release/v1.1.0
      repo: https://github.com/jlahteen/juhta.net.git
    id: Error
    path: ../src/Juhta.Net.WebApi.Exceptions/ClientErrorException.cs
    startLine: 106
  assemblies:
  - Juhta.Net.WebApi.Exceptions
  namespace: Juhta.Net.WebApi.Exceptions
  summary: "\nGets the first <xref href=\"Juhta.Net.WebApi.Exceptions.ClientError\" data-throw-if-not-resolved=\"false\"></xref> object that relates to this <xref href=\"Juhta.Net.WebApi.Exceptions.ClientErrorException\" data-throw-if-not-resolved=\"false\"></xref>\ninstance. Returns null if there are no <xref href=\"Juhta.Net.WebApi.Exceptions.ClientError\" data-throw-if-not-resolved=\"false\"></xref> objects.\n"
  example: []
  syntax:
    content: public ClientError Error { get; }
    parameters: []
    return:
      type: Juhta.Net.WebApi.Exceptions.ClientError
    content.vb: Public ReadOnly Property Error As ClientError
  overload: Juhta.Net.WebApi.Exceptions.ClientErrorException.Error*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Juhta.Net.WebApi.Exceptions.ClientErrorException.Errors
  commentId: P:Juhta.Net.WebApi.Exceptions.ClientErrorException.Errors
  id: Errors
  parent: Juhta.Net.WebApi.Exceptions.ClientErrorException
  langs:
  - csharp
  - vb
  name: Errors
  nameWithType: ClientErrorException.Errors
  fullName: Juhta.Net.WebApi.Exceptions.ClientErrorException.Errors
  type: Property
  source:
    remote:
      path: src/Juhta.Net.WebApi.Exceptions/ClientErrorException.cs
      branch: release/v1.1.0
      repo: https://github.com/jlahteen/juhta.net.git
    id: Errors
    path: ../src/Juhta.Net.WebApi.Exceptions/ClientErrorException.cs
    startLine: 115
  assemblies:
  - Juhta.Net.WebApi.Exceptions
  namespace: Juhta.Net.WebApi.Exceptions
  summary: "\nGets an array of the <xref href=\"Juhta.Net.WebApi.Exceptions.ClientError\" data-throw-if-not-resolved=\"false\"></xref> objects that relate to this <xref href=\"Juhta.Net.WebApi.Exceptions.ClientErrorException\" data-throw-if-not-resolved=\"false\"></xref>\ninstance. Returns null if there are no <xref href=\"Juhta.Net.WebApi.Exceptions.ClientError\" data-throw-if-not-resolved=\"false\"></xref> objects.\n"
  example: []
  syntax:
    content: public ClientError[] Errors { get; }
    parameters: []
    return:
      type: Juhta.Net.WebApi.Exceptions.ClientError[]
    content.vb: Public ReadOnly Property Errors As ClientError()
  overload: Juhta.Net.WebApi.Exceptions.ClientErrorException.Errors*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Juhta.Net.WebApi.Exceptions.ClientErrorException.#ctor(Juhta.Net.WebApi.Exceptions.ClientErrorResponse)
  commentId: M:Juhta.Net.WebApi.Exceptions.ClientErrorException.#ctor(Juhta.Net.WebApi.Exceptions.ClientErrorResponse)
  id: '#ctor(Juhta.Net.WebApi.Exceptions.ClientErrorResponse)'
  parent: Juhta.Net.WebApi.Exceptions.ClientErrorException
  langs:
  - csharp
  - vb
  name: ClientErrorException(ClientErrorResponse)
  nameWithType: ClientErrorException.ClientErrorException(ClientErrorResponse)
  fullName: Juhta.Net.WebApi.Exceptions.ClientErrorException.ClientErrorException(Juhta.Net.WebApi.Exceptions.ClientErrorResponse)
  type: Constructor
  source:
    remote:
      path: src/Juhta.Net.WebApi.Exceptions/ClientErrorException.cs
      branch: release/v1.1.0
      repo: https://github.com/jlahteen/juhta.net.git
    id: .ctor
    path: ../src/Juhta.Net.WebApi.Exceptions/ClientErrorException.cs
    startLine: 128
  assemblies:
  - Juhta.Net.WebApi.Exceptions
  namespace: Juhta.Net.WebApi.Exceptions
  summary: "\nInitializes a new instance.\n"
  example: []
  syntax:
    content: protected ClientErrorException(ClientErrorResponse clientErrorResponse)
    parameters:
    - id: clientErrorResponse
      type: Juhta.Net.WebApi.Exceptions.ClientErrorResponse
      description: Specifies a client error response.
    content.vb: Protected Sub New(clientErrorResponse As ClientErrorResponse)
  overload: Juhta.Net.WebApi.Exceptions.ClientErrorException.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Juhta.Net.WebApi.Exceptions.ClientErrorException.#ctor(System.Net.HttpStatusCode)
  commentId: M:Juhta.Net.WebApi.Exceptions.ClientErrorException.#ctor(System.Net.HttpStatusCode)
  id: '#ctor(System.Net.HttpStatusCode)'
  parent: Juhta.Net.WebApi.Exceptions.ClientErrorException
  langs:
  - csharp
  - vb
  name: ClientErrorException(HttpStatusCode)
  nameWithType: ClientErrorException.ClientErrorException(HttpStatusCode)
  fullName: Juhta.Net.WebApi.Exceptions.ClientErrorException.ClientErrorException(System.Net.HttpStatusCode)
  type: Constructor
  source:
    remote:
      path: src/Juhta.Net.WebApi.Exceptions/ClientErrorException.cs
      branch: release/v1.1.0
      repo: https://github.com/jlahteen/juhta.net.git
    id: .ctor
    path: ../src/Juhta.Net.WebApi.Exceptions/ClientErrorException.cs
    startLine: 137
  assemblies:
  - Juhta.Net.WebApi.Exceptions
  namespace: Juhta.Net.WebApi.Exceptions
  summary: "\nInitializes a new instance.\n"
  example: []
  syntax:
    content: protected ClientErrorException(HttpStatusCode statusCode)
    parameters:
    - id: statusCode
      type: System.Net.HttpStatusCode
      description: Specifies an HTTP status code.
    content.vb: Protected Sub New(statusCode As HttpStatusCode)
  overload: Juhta.Net.WebApi.Exceptions.ClientErrorException.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Juhta.Net.WebApi.Exceptions.ClientErrorException.#ctor(System.Net.HttpStatusCode,Juhta.Net.WebApi.Exceptions.ClientError)
  commentId: M:Juhta.Net.WebApi.Exceptions.ClientErrorException.#ctor(System.Net.HttpStatusCode,Juhta.Net.WebApi.Exceptions.ClientError)
  id: '#ctor(System.Net.HttpStatusCode,Juhta.Net.WebApi.Exceptions.ClientError)'
  parent: Juhta.Net.WebApi.Exceptions.ClientErrorException
  langs:
  - csharp
  - vb
  name: ClientErrorException(HttpStatusCode, ClientError)
  nameWithType: ClientErrorException.ClientErrorException(HttpStatusCode, ClientError)
  fullName: Juhta.Net.WebApi.Exceptions.ClientErrorException.ClientErrorException(System.Net.HttpStatusCode, Juhta.Net.WebApi.Exceptions.ClientError)
  type: Constructor
  source:
    remote:
      path: src/Juhta.Net.WebApi.Exceptions/ClientErrorException.cs
      branch: release/v1.1.0
      repo: https://github.com/jlahteen/juhta.net.git
    id: .ctor
    path: ../src/Juhta.Net.WebApi.Exceptions/ClientErrorException.cs
    startLine: 145
  assemblies:
  - Juhta.Net.WebApi.Exceptions
  namespace: Juhta.Net.WebApi.Exceptions
  summary: "\nInitializes a new instance.\n"
  example: []
  syntax:
    content: protected ClientErrorException(HttpStatusCode statusCode, ClientError clientError)
    parameters:
    - id: statusCode
      type: System.Net.HttpStatusCode
      description: Specifies an HTTP status code.
    - id: clientError
      type: Juhta.Net.WebApi.Exceptions.ClientError
      description: Specifies a client error.
    content.vb: Protected Sub New(statusCode As HttpStatusCode, clientError As ClientError)
  overload: Juhta.Net.WebApi.Exceptions.ClientErrorException.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Juhta.Net.WebApi.Exceptions.ClientErrorException.#ctor(System.Net.HttpStatusCode,System.String)
  commentId: M:Juhta.Net.WebApi.Exceptions.ClientErrorException.#ctor(System.Net.HttpStatusCode,System.String)
  id: '#ctor(System.Net.HttpStatusCode,System.String)'
  parent: Juhta.Net.WebApi.Exceptions.ClientErrorException
  langs:
  - csharp
  - vb
  name: ClientErrorException(HttpStatusCode, String)
  nameWithType: ClientErrorException.ClientErrorException(HttpStatusCode, String)
  fullName: Juhta.Net.WebApi.Exceptions.ClientErrorException.ClientErrorException(System.Net.HttpStatusCode, System.String)
  type: Constructor
  source:
    remote:
      path: src/Juhta.Net.WebApi.Exceptions/ClientErrorException.cs
      branch: release/v1.1.0
      repo: https://github.com/jlahteen/juhta.net.git
    id: .ctor
    path: ../src/Juhta.Net.WebApi.Exceptions/ClientErrorException.cs
    startLine: 155
  assemblies:
  - Juhta.Net.WebApi.Exceptions
  namespace: Juhta.Net.WebApi.Exceptions
  summary: "\nInitializes a new instance.\n"
  example: []
  syntax:
    content: protected ClientErrorException(HttpStatusCode statusCode, string errorMessage)
    parameters:
    - id: statusCode
      type: System.Net.HttpStatusCode
      description: Specifies an HTTP status code.
    - id: errorMessage
      type: System.String
      description: Specifies an error message.
    content.vb: Protected Sub New(statusCode As HttpStatusCode, errorMessage As String)
  overload: Juhta.Net.WebApi.Exceptions.ClientErrorException.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Juhta.Net.WebApi.Exceptions.ClientErrorException.#ctor(System.Net.HttpStatusCode,System.Collections.Generic.IEnumerable{Juhta.Net.WebApi.Exceptions.ClientError})
  commentId: M:Juhta.Net.WebApi.Exceptions.ClientErrorException.#ctor(System.Net.HttpStatusCode,System.Collections.Generic.IEnumerable{Juhta.Net.WebApi.Exceptions.ClientError})
  id: '#ctor(System.Net.HttpStatusCode,System.Collections.Generic.IEnumerable{Juhta.Net.WebApi.Exceptions.ClientError})'
  parent: Juhta.Net.WebApi.Exceptions.ClientErrorException
  langs:
  - csharp
  - vb
  name: ClientErrorException(HttpStatusCode, IEnumerable<ClientError>)
  nameWithType: ClientErrorException.ClientErrorException(HttpStatusCode, IEnumerable<ClientError>)
  fullName: Juhta.Net.WebApi.Exceptions.ClientErrorException.ClientErrorException(System.Net.HttpStatusCode, System.Collections.Generic.IEnumerable<Juhta.Net.WebApi.Exceptions.ClientError>)
  type: Constructor
  source:
    remote:
      path: src/Juhta.Net.WebApi.Exceptions/ClientErrorException.cs
      branch: release/v1.1.0
      repo: https://github.com/jlahteen/juhta.net.git
    id: .ctor
    path: ../src/Juhta.Net.WebApi.Exceptions/ClientErrorException.cs
    startLine: 163
  assemblies:
  - Juhta.Net.WebApi.Exceptions
  namespace: Juhta.Net.WebApi.Exceptions
  summary: "\nInitializes a new instance.\n"
  example: []
  syntax:
    content: protected ClientErrorException(HttpStatusCode statusCode, IEnumerable<ClientError> clientErrors)
    parameters:
    - id: statusCode
      type: System.Net.HttpStatusCode
      description: Specifies an HTTP status code.
    - id: clientErrors
      type: System.Collections.Generic.IEnumerable{Juhta.Net.WebApi.Exceptions.ClientError}
      description: Specifies a collection of client errors.
    content.vb: Protected Sub New(statusCode As HttpStatusCode, clientErrors As IEnumerable(Of ClientError))
  overload: Juhta.Net.WebApi.Exceptions.ClientErrorException.#ctor*
  nameWithType.vb: ClientErrorException.ClientErrorException(HttpStatusCode, IEnumerable(Of ClientError))
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Juhta.Net.WebApi.Exceptions.ClientErrorException.ClientErrorException(System.Net.HttpStatusCode, System.Collections.Generic.IEnumerable(Of Juhta.Net.WebApi.Exceptions.ClientError))
  name.vb: ClientErrorException(HttpStatusCode, IEnumerable(Of ClientError))
- uid: Juhta.Net.WebApi.Exceptions.ClientErrorException.#ctor(System.Net.HttpStatusCode,System.String,System.String)
  commentId: M:Juhta.Net.WebApi.Exceptions.ClientErrorException.#ctor(System.Net.HttpStatusCode,System.String,System.String)
  id: '#ctor(System.Net.HttpStatusCode,System.String,System.String)'
  parent: Juhta.Net.WebApi.Exceptions.ClientErrorException
  langs:
  - csharp
  - vb
  name: ClientErrorException(HttpStatusCode, String, String)
  nameWithType: ClientErrorException.ClientErrorException(HttpStatusCode, String, String)
  fullName: Juhta.Net.WebApi.Exceptions.ClientErrorException.ClientErrorException(System.Net.HttpStatusCode, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/Juhta.Net.WebApi.Exceptions/ClientErrorException.cs
      branch: release/v1.1.0
      repo: https://github.com/jlahteen/juhta.net.git
    id: .ctor
    path: ../src/Juhta.Net.WebApi.Exceptions/ClientErrorException.cs
    startLine: 174
  assemblies:
  - Juhta.Net.WebApi.Exceptions
  namespace: Juhta.Net.WebApi.Exceptions
  summary: "\nInitializes a new instance.\n"
  example: []
  syntax:
    content: protected ClientErrorException(HttpStatusCode statusCode, string errorMessage, string errorCode)
    parameters:
    - id: statusCode
      type: System.Net.HttpStatusCode
      description: Specifies an HTTP status code.
    - id: errorMessage
      type: System.String
      description: Specifies an error message.
    - id: errorCode
      type: System.String
      description: Specifies a custom-defined error code.
    content.vb: Protected Sub New(statusCode As HttpStatusCode, errorMessage As String, errorCode As String)
  overload: Juhta.Net.WebApi.Exceptions.ClientErrorException.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Juhta.Net.WebApi.Exceptions.ClientErrorException.#ctor(System.Net.HttpStatusCode,System.String,System.String,System.String)
  commentId: M:Juhta.Net.WebApi.Exceptions.ClientErrorException.#ctor(System.Net.HttpStatusCode,System.String,System.String,System.String)
  id: '#ctor(System.Net.HttpStatusCode,System.String,System.String,System.String)'
  parent: Juhta.Net.WebApi.Exceptions.ClientErrorException
  langs:
  - csharp
  - vb
  name: ClientErrorException(HttpStatusCode, String, String, String)
  nameWithType: ClientErrorException.ClientErrorException(HttpStatusCode, String, String, String)
  fullName: Juhta.Net.WebApi.Exceptions.ClientErrorException.ClientErrorException(System.Net.HttpStatusCode, System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/Juhta.Net.WebApi.Exceptions/ClientErrorException.cs
      branch: release/v1.1.0
      repo: https://github.com/jlahteen/juhta.net.git
    id: .ctor
    path: ../src/Juhta.Net.WebApi.Exceptions/ClientErrorException.cs
    startLine: 184
  assemblies:
  - Juhta.Net.WebApi.Exceptions
  namespace: Juhta.Net.WebApi.Exceptions
  summary: "\nInitializes a new instance.\n"
  example: []
  syntax:
    content: protected ClientErrorException(HttpStatusCode statusCode, string errorMessage, string errorCode, string field)
    parameters:
    - id: statusCode
      type: System.Net.HttpStatusCode
      description: Specifies an HTTP status code.
    - id: errorMessage
      type: System.String
      description: Specifies an error message.
    - id: errorCode
      type: System.String
      description: Specifies a custom-defined error code.
    - id: field
      type: System.String
      description: Specifies a field in the incoming request to which the error relates.
    content.vb: Protected Sub New(statusCode As HttpStatusCode, errorMessage As String, errorCode As String, field As String)
  overload: Juhta.Net.WebApi.Exceptions.ClientErrorException.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Juhta.Net.WebApi.Exceptions.ClientErrorException.#ctor(System.Net.HttpStatusCode,System.String,System.String,System.String,System.String)
  commentId: M:Juhta.Net.WebApi.Exceptions.ClientErrorException.#ctor(System.Net.HttpStatusCode,System.String,System.String,System.String,System.String)
  id: '#ctor(System.Net.HttpStatusCode,System.String,System.String,System.String,System.String)'
  parent: Juhta.Net.WebApi.Exceptions.ClientErrorException
  langs:
  - csharp
  - vb
  name: ClientErrorException(HttpStatusCode, String, String, String, String)
  nameWithType: ClientErrorException.ClientErrorException(HttpStatusCode, String, String, String, String)
  fullName: Juhta.Net.WebApi.Exceptions.ClientErrorException.ClientErrorException(System.Net.HttpStatusCode, System.String, System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/Juhta.Net.WebApi.Exceptions/ClientErrorException.cs
      branch: release/v1.1.0
      repo: https://github.com/jlahteen/juhta.net.git
    id: .ctor
    path: ../src/Juhta.Net.WebApi.Exceptions/ClientErrorException.cs
    startLine: 195
  assemblies:
  - Juhta.Net.WebApi.Exceptions
  namespace: Juhta.Net.WebApi.Exceptions
  summary: "\nInitializes a new instance.\n"
  example: []
  syntax:
    content: protected ClientErrorException(HttpStatusCode statusCode, string errorMessage, string errorCode, string field, string helpUrl)
    parameters:
    - id: statusCode
      type: System.Net.HttpStatusCode
      description: Specifies an HTTP status code.
    - id: errorMessage
      type: System.String
      description: Specifies an error message.
    - id: errorCode
      type: System.String
      description: Specifies a custom-defined error code.
    - id: field
      type: System.String
      description: Specifies a field in the incoming request to which the error relates.
    - id: helpUrl
      type: System.String
      description: Specifies a URL that provides extra information about the error.
    content.vb: Protected Sub New(statusCode As HttpStatusCode, errorMessage As String, errorCode As String, field As String, helpUrl As String)
  overload: Juhta.Net.WebApi.Exceptions.ClientErrorException.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
references:
- uid: Juhta.Net.WebApi.Exceptions
  commentId: N:Juhta.Net.WebApi.Exceptions
  isExternal: false
  name: Juhta.Net.WebApi.Exceptions
  nameWithType: Juhta.Net.WebApi.Exceptions
  fullName: Juhta.Net.WebApi.Exceptions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: Juhta.Net.WebApi.Exceptions.WebApiException
  commentId: T:Juhta.Net.WebApi.Exceptions.WebApiException
  parent: Juhta.Net.WebApi.Exceptions
  isExternal: false
  name: WebApiException
  nameWithType: WebApiException
  fullName: Juhta.Net.WebApi.Exceptions.WebApiException
- uid: System.Runtime.Serialization.ISerializable
  commentId: T:System.Runtime.Serialization.ISerializable
  parent: System.Runtime.Serialization
  isExternal: true
  name: ISerializable
  nameWithType: ISerializable
  fullName: System.Runtime.Serialization.ISerializable
- uid: Juhta.Net.WebApi.Exceptions.WebApiException.SetServiceName(System.String)
  commentId: M:Juhta.Net.WebApi.Exceptions.WebApiException.SetServiceName(System.String)
  parent: Juhta.Net.WebApi.Exceptions.WebApiException
  isExternal: true
  name: SetServiceName(String)
  nameWithType: WebApiException.SetServiceName(String)
  fullName: Juhta.Net.WebApi.Exceptions.WebApiException.SetServiceName(System.String)
  spec.csharp:
  - uid: Juhta.Net.WebApi.Exceptions.WebApiException.SetServiceName(System.String)
    name: SetServiceName
    nameWithType: WebApiException.SetServiceName
    fullName: Juhta.Net.WebApi.Exceptions.WebApiException.SetServiceName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Juhta.Net.WebApi.Exceptions.WebApiException.SetServiceName(System.String)
    name: SetServiceName
    nameWithType: WebApiException.SetServiceName
    fullName: Juhta.Net.WebApi.Exceptions.WebApiException.SetServiceName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Juhta.Net.WebApi.Exceptions.WebApiException.ServiceStack
  commentId: P:Juhta.Net.WebApi.Exceptions.WebApiException.ServiceStack
  parent: Juhta.Net.WebApi.Exceptions.WebApiException
  isExternal: false
  name: ServiceStack
  nameWithType: WebApiException.ServiceStack
  fullName: Juhta.Net.WebApi.Exceptions.WebApiException.ServiceStack
- uid: Juhta.Net.WebApi.Exceptions.WebApiException.StatusCode
  commentId: P:Juhta.Net.WebApi.Exceptions.WebApiException.StatusCode
  parent: Juhta.Net.WebApi.Exceptions.WebApiException
  isExternal: false
  name: StatusCode
  nameWithType: WebApiException.StatusCode
  fullName: Juhta.Net.WebApi.Exceptions.WebApiException.StatusCode
- uid: System.Exception.GetBaseException
  commentId: M:System.Exception.GetBaseException
  parent: System.Exception
  isExternal: true
  name: GetBaseException()
  nameWithType: Exception.GetBaseException()
  fullName: System.Exception.GetBaseException()
  spec.csharp:
  - uid: System.Exception.GetBaseException
    name: GetBaseException
    nameWithType: Exception.GetBaseException
    fullName: System.Exception.GetBaseException
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Exception.GetBaseException
    name: GetBaseException
    nameWithType: Exception.GetBaseException
    fullName: System.Exception.GetBaseException
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Exception
  isExternal: true
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: Exception.GetObjectData(SerializationInfo, StreamingContext)
  fullName: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  spec.csharp:
  - uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    nameWithType: Exception.GetObjectData
    fullName: System.Exception.GetObjectData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    nameWithType: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    nameWithType: Exception.GetObjectData
    fullName: System.Exception.GetObjectData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    nameWithType: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Exception.GetType
  commentId: M:System.Exception.GetType
  parent: System.Exception
  isExternal: true
  name: GetType()
  nameWithType: Exception.GetType()
  fullName: System.Exception.GetType()
  spec.csharp:
  - uid: System.Exception.GetType
    name: GetType
    nameWithType: Exception.GetType
    fullName: System.Exception.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Exception.GetType
    name: GetType
    nameWithType: Exception.GetType
    fullName: System.Exception.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Exception.Data
  commentId: P:System.Exception.Data
  parent: System.Exception
  isExternal: true
  name: Data
  nameWithType: Exception.Data
  fullName: System.Exception.Data
- uid: System.Exception.HelpLink
  commentId: P:System.Exception.HelpLink
  parent: System.Exception
  isExternal: true
  name: HelpLink
  nameWithType: Exception.HelpLink
  fullName: System.Exception.HelpLink
- uid: System.Exception.HResult
  commentId: P:System.Exception.HResult
  parent: System.Exception
  isExternal: true
  name: HResult
  nameWithType: Exception.HResult
  fullName: System.Exception.HResult
- uid: System.Exception.InnerException
  commentId: P:System.Exception.InnerException
  parent: System.Exception
  isExternal: true
  name: InnerException
  nameWithType: Exception.InnerException
  fullName: System.Exception.InnerException
- uid: System.Exception.Message
  commentId: P:System.Exception.Message
  parent: System.Exception
  isExternal: true
  name: Message
  nameWithType: Exception.Message
  fullName: System.Exception.Message
- uid: System.Exception.Source
  commentId: P:System.Exception.Source
  parent: System.Exception
  isExternal: true
  name: Source
  nameWithType: Exception.Source
  fullName: System.Exception.Source
- uid: System.Exception.StackTrace
  commentId: P:System.Exception.StackTrace
  parent: System.Exception
  isExternal: true
  name: StackTrace
  nameWithType: Exception.StackTrace
  fullName: System.Exception.StackTrace
- uid: System.Exception.TargetSite
  commentId: P:System.Exception.TargetSite
  parent: System.Exception
  isExternal: true
  name: TargetSite
  nameWithType: Exception.TargetSite
  fullName: System.Exception.TargetSite
- uid: System.Exception.SerializeObjectState
  commentId: E:System.Exception.SerializeObjectState
  parent: System.Exception
  isExternal: true
  name: SerializeObjectState
  nameWithType: Exception.SerializeObjectState
  fullName: System.Exception.SerializeObjectState
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Runtime.Serialization
  commentId: N:System.Runtime.Serialization
  isExternal: false
  name: System.Runtime.Serialization
  nameWithType: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
- uid: Juhta.Net.WebApi.Exceptions.ClientErrorException
  commentId: T:Juhta.Net.WebApi.Exceptions.ClientErrorException
  parent: Juhta.Net.WebApi.Exceptions
  isExternal: false
  name: ClientErrorException
  nameWithType: ClientErrorException
  fullName: Juhta.Net.WebApi.Exceptions.ClientErrorException
- uid: Juhta.Net.WebApi.Exceptions.ClientErrorResponse
  commentId: T:Juhta.Net.WebApi.Exceptions.ClientErrorResponse
  parent: Juhta.Net.WebApi.Exceptions
  isExternal: false
  name: ClientErrorResponse
  nameWithType: ClientErrorResponse
  fullName: Juhta.Net.WebApi.Exceptions.ClientErrorResponse
- uid: Juhta.Net.WebApi.Exceptions.ClientErrorException.ToClientErrorResponse*
  commentId: Overload:Juhta.Net.WebApi.Exceptions.ClientErrorException.ToClientErrorResponse
  isExternal: false
  name: ToClientErrorResponse
  nameWithType: ClientErrorException.ToClientErrorResponse
  fullName: Juhta.Net.WebApi.Exceptions.ClientErrorException.ToClientErrorResponse
- uid: Juhta.Net.WebApi.Exceptions.WebApiException.ToString
  commentId: M:Juhta.Net.WebApi.Exceptions.WebApiException.ToString
  parent: Juhta.Net.WebApi.Exceptions.WebApiException
  isExternal: false
  name: ToString()
  nameWithType: WebApiException.ToString()
  fullName: Juhta.Net.WebApi.Exceptions.WebApiException.ToString()
  spec.csharp:
  - uid: Juhta.Net.WebApi.Exceptions.WebApiException.ToString
    name: ToString
    nameWithType: WebApiException.ToString
    fullName: Juhta.Net.WebApi.Exceptions.WebApiException.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Juhta.Net.WebApi.Exceptions.WebApiException.ToString
    name: ToString
    nameWithType: WebApiException.ToString
    fullName: Juhta.Net.WebApi.Exceptions.WebApiException.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Juhta.Net.WebApi.Exceptions.ClientErrorException.ToString*
  commentId: Overload:Juhta.Net.WebApi.Exceptions.ClientErrorException.ToString
  isExternal: false
  name: ToString
  nameWithType: ClientErrorException.ToString
  fullName: Juhta.Net.WebApi.Exceptions.ClientErrorException.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Juhta.Net.WebApi.Exceptions.ClientError
  commentId: T:Juhta.Net.WebApi.Exceptions.ClientError
  parent: Juhta.Net.WebApi.Exceptions
  isExternal: false
  name: ClientError
  nameWithType: ClientError
  fullName: Juhta.Net.WebApi.Exceptions.ClientError
- uid: Juhta.Net.WebApi.Exceptions.ClientErrorException.Error*
  commentId: Overload:Juhta.Net.WebApi.Exceptions.ClientErrorException.Error
  isExternal: false
  name: Error
  nameWithType: ClientErrorException.Error
  fullName: Juhta.Net.WebApi.Exceptions.ClientErrorException.Error
- uid: Juhta.Net.WebApi.Exceptions.ClientErrorException.Errors*
  commentId: Overload:Juhta.Net.WebApi.Exceptions.ClientErrorException.Errors
  isExternal: false
  name: Errors
  nameWithType: ClientErrorException.Errors
  fullName: Juhta.Net.WebApi.Exceptions.ClientErrorException.Errors
- uid: Juhta.Net.WebApi.Exceptions.ClientError[]
  name: ClientError[]
  nameWithType: ClientError[]
  fullName: Juhta.Net.WebApi.Exceptions.ClientError[]
  nameWithType.vb: ClientError()
  fullName.vb: Juhta.Net.WebApi.Exceptions.ClientError()
  name.vb: ClientError()
  spec.csharp:
  - uid: Juhta.Net.WebApi.Exceptions.ClientError
    name: ClientError
    nameWithType: ClientError
    fullName: Juhta.Net.WebApi.Exceptions.ClientError
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Juhta.Net.WebApi.Exceptions.ClientError
    name: ClientError
    nameWithType: ClientError
    fullName: Juhta.Net.WebApi.Exceptions.ClientError
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Juhta.Net.WebApi.Exceptions.ClientErrorException.#ctor*
  commentId: Overload:Juhta.Net.WebApi.Exceptions.ClientErrorException.#ctor
  isExternal: false
  name: ClientErrorException
  nameWithType: ClientErrorException.ClientErrorException
  fullName: Juhta.Net.WebApi.Exceptions.ClientErrorException.ClientErrorException
- uid: System.Net.HttpStatusCode
  commentId: T:System.Net.HttpStatusCode
  parent: System.Net
  isExternal: true
  name: HttpStatusCode
  nameWithType: HttpStatusCode
  fullName: System.Net.HttpStatusCode
- uid: System.Net
  commentId: N:System.Net
  isExternal: false
  name: System.Net
  nameWithType: System.Net
  fullName: System.Net
- uid: System.Collections.Generic.IEnumerable{Juhta.Net.WebApi.Exceptions.ClientError}
  commentId: T:System.Collections.Generic.IEnumerable{Juhta.Net.WebApi.Exceptions.ClientError}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<ClientError>
  nameWithType: IEnumerable<ClientError>
  fullName: System.Collections.Generic.IEnumerable<Juhta.Net.WebApi.Exceptions.ClientError>
  nameWithType.vb: IEnumerable(Of ClientError)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Juhta.Net.WebApi.Exceptions.ClientError)
  name.vb: IEnumerable(Of ClientError)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Juhta.Net.WebApi.Exceptions.ClientError
    name: ClientError
    nameWithType: ClientError
    fullName: Juhta.Net.WebApi.Exceptions.ClientError
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Juhta.Net.WebApi.Exceptions.ClientError
    name: ClientError
    nameWithType: ClientError
    fullName: Juhta.Net.WebApi.Exceptions.ClientError
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
