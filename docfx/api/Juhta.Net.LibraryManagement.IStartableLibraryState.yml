### YamlMime:ManagedReference
items:
- uid: Juhta.Net.LibraryManagement.IStartableLibraryState
  commentId: T:Juhta.Net.LibraryManagement.IStartableLibraryState
  id: IStartableLibraryState
  parent: Juhta.Net.LibraryManagement
  children:
  - Juhta.Net.LibraryManagement.IStartableLibraryState.StartProcesses
  - Juhta.Net.LibraryManagement.IStartableLibraryState.StopProcesses(System.Boolean)
  langs:
  - csharp
  - vb
  name: IStartableLibraryState
  nameWithType: IStartableLibraryState
  fullName: Juhta.Net.LibraryManagement.IStartableLibraryState
  type: Interface
  source:
    remote:
      path: src/Juhta.Net/LibraryManagement/IStartableLibraryState.cs
      branch: develop
      repo: https://github.com/jlahteen/juhta.net
    id: IStartableLibraryState
    path: ../src/Juhta.Net/LibraryManagement/IStartableLibraryState.cs
    startLine: 14
  assemblies:
  - Juhta.Net
  namespace: Juhta.Net.LibraryManagement
  summary: "\nDefines an interface for startable library states. A library state is a startable if it contains at least one\nprocess that has to be started prior to the library state services can be used.\n"
  example: []
  syntax:
    content: public interface IStartableLibraryState
    content.vb: Public Interface IStartableLibraryState
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Juhta.Net.LibraryManagement.IStartableLibraryState.StartProcesses
  commentId: M:Juhta.Net.LibraryManagement.IStartableLibraryState.StartProcesses
  id: StartProcesses
  parent: Juhta.Net.LibraryManagement.IStartableLibraryState
  langs:
  - csharp
  - vb
  name: StartProcesses()
  nameWithType: IStartableLibraryState.StartProcesses()
  fullName: Juhta.Net.LibraryManagement.IStartableLibraryState.StartProcesses()
  type: Method
  source:
    remote:
      path: src/Juhta.Net/LibraryManagement/IStartableLibraryState.cs
      branch: develop
      repo: https://github.com/jlahteen/juhta.net
    id: StartProcesses
    path: ../src/Juhta.Net/LibraryManagement/IStartableLibraryState.cs
    startLine: 21
  assemblies:
  - Juhta.Net
  namespace: Juhta.Net.LibraryManagement
  summary: "\nStarts the library state processes.\n"
  example: []
  syntax:
    content: void StartProcesses()
    content.vb: Sub StartProcesses
  overload: Juhta.Net.LibraryManagement.IStartableLibraryState.StartProcesses*
- uid: Juhta.Net.LibraryManagement.IStartableLibraryState.StopProcesses(System.Boolean)
  commentId: M:Juhta.Net.LibraryManagement.IStartableLibraryState.StopProcesses(System.Boolean)
  id: StopProcesses(System.Boolean)
  parent: Juhta.Net.LibraryManagement.IStartableLibraryState
  langs:
  - csharp
  - vb
  name: StopProcesses(Boolean)
  nameWithType: IStartableLibraryState.StopProcesses(Boolean)
  fullName: Juhta.Net.LibraryManagement.IStartableLibraryState.StopProcesses(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Juhta.Net/LibraryManagement/IStartableLibraryState.cs
      branch: develop
      repo: https://github.com/jlahteen/juhta.net
    id: StopProcesses
    path: ../src/Juhta.Net/LibraryManagement/IStartableLibraryState.cs
    startLine: 38
  assemblies:
  - Juhta.Net
  namespace: Juhta.Net.LibraryManagement
  summary: "\nStops the library state processes.\n"
  remarks: "\n<p>This method should not throw exceptions. It is recommended that, in case of an error, the error is\nlogged and the stopping process is continued for the rest of the processes. In other words, the method\nshould stop the library state processes as completely as possible.</p>\n<p>This method will be called even if the initialization process of the library state has failed. This\nmeans that the method should prepare for such situation where the library state processes have not been\nstarted at all or started only partially.</p>\n"
  example: []
  syntax:
    content: bool StopProcesses(bool final)
    parameters:
    - id: final
      type: System.Boolean
      description: >-
        Specifies whether this call is the final call on this method. If true, the current

        library state instance is the last instance, and the application is shutting down.
    return:
      type: System.Boolean
      description: >-
        Returns true if the library state processes were stopped without errors, or false if at least one

        error occurred in the stopping process.
    content.vb: Function StopProcesses(final As Boolean) As Boolean
  overload: Juhta.Net.LibraryManagement.IStartableLibraryState.StopProcesses*
references:
- uid: Juhta.Net.LibraryManagement
  commentId: N:Juhta.Net.LibraryManagement
  isExternal: false
  name: Juhta.Net.LibraryManagement
  nameWithType: Juhta.Net.LibraryManagement
  fullName: Juhta.Net.LibraryManagement
- uid: Juhta.Net.LibraryManagement.IStartableLibraryState.StartProcesses*
  commentId: Overload:Juhta.Net.LibraryManagement.IStartableLibraryState.StartProcesses
  isExternal: false
  name: StartProcesses
  nameWithType: IStartableLibraryState.StartProcesses
  fullName: Juhta.Net.LibraryManagement.IStartableLibraryState.StartProcesses
- uid: Juhta.Net.LibraryManagement.IStartableLibraryState.StopProcesses*
  commentId: Overload:Juhta.Net.LibraryManagement.IStartableLibraryState.StopProcesses
  isExternal: false
  name: StopProcesses
  nameWithType: IStartableLibraryState.StopProcesses
  fullName: Juhta.Net.LibraryManagement.IStartableLibraryState.StopProcesses
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
