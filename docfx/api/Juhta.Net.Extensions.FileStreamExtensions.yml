### YamlMime:ManagedReference
items:
- uid: Juhta.Net.Extensions.FileStreamExtensions
  commentId: T:Juhta.Net.Extensions.FileStreamExtensions
  id: FileStreamExtensions
  parent: Juhta.Net.Extensions
  children:
  - Juhta.Net.Extensions.FileStreamExtensions.Lock(System.IO.FileStream,System.Int32)
  - Juhta.Net.Extensions.FileStreamExtensions.Lock(System.IO.FileStream,System.Int64,System.Int64,System.Int32)
  - Juhta.Net.Extensions.FileStreamExtensions.TryLock(System.IO.FileStream,System.Int32)
  - Juhta.Net.Extensions.FileStreamExtensions.TryLock(System.IO.FileStream,System.Int64,System.Int64,System.Int32)
  langs:
  - csharp
  - vb
  name: FileStreamExtensions
  nameWithType: FileStreamExtensions
  fullName: Juhta.Net.Extensions.FileStreamExtensions
  type: Class
  source:
    remote:
      path: src/Juhta.Net/Extensions/FileStreamExtensions.cs
      branch: release/v1.0.0-rc
      repo: https://github.com/jlahteen/juhta.net.git
    id: FileStreamExtensions
    path: ../src/Juhta.Net/Extensions/FileStreamExtensions.cs
    startLine: 17
  assemblies:
  - Juhta.Net
  namespace: Juhta.Net.Extensions
  summary: "\nA static class that contains extension methods for the <xref href=\"System.IO.FileStream\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public static class FileStreamExtensions
    content.vb: Public Module FileStreamExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Juhta.Net.Extensions.FileStreamExtensions.Lock(System.IO.FileStream,System.Int32)
  commentId: M:Juhta.Net.Extensions.FileStreamExtensions.Lock(System.IO.FileStream,System.Int32)
  id: Lock(System.IO.FileStream,System.Int32)
  isExtensionMethod: true
  parent: Juhta.Net.Extensions.FileStreamExtensions
  langs:
  - csharp
  - vb
  name: Lock(FileStream, Int32)
  nameWithType: FileStreamExtensions.Lock(FileStream, Int32)
  fullName: Juhta.Net.Extensions.FileStreamExtensions.Lock(System.IO.FileStream, System.Int32)
  type: Method
  source:
    remote:
      path: src/Juhta.Net/Extensions/FileStreamExtensions.cs
      branch: release/v1.0.0-rc
      repo: https://github.com/jlahteen/juhta.net.git
    id: Lock
    path: ../src/Juhta.Net/Extensions/FileStreamExtensions.cs
    startLine: 26
  assemblies:
  - Juhta.Net
  namespace: Juhta.Net.Extensions
  summary: "\nLocks the file specified by this FileStream instance.\n"
  example: []
  syntax:
    content: public static void Lock(this FileStream fileStream, int timeout)
    parameters:
    - id: fileStream
      type: System.IO.FileStream
      description: Specifies the current FileStream instance.
    - id: timeout
      type: System.Int32
      description: Specifies a timeout in milliseconds for the operation.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub Lock(fileStream As FileStream, timeout As Integer)
  overload: Juhta.Net.Extensions.FileStreamExtensions.Lock*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Juhta.Net.Extensions.FileStreamExtensions.Lock(System.IO.FileStream,System.Int64,System.Int64,System.Int32)
  commentId: M:Juhta.Net.Extensions.FileStreamExtensions.Lock(System.IO.FileStream,System.Int64,System.Int64,System.Int32)
  id: Lock(System.IO.FileStream,System.Int64,System.Int64,System.Int32)
  isExtensionMethod: true
  parent: Juhta.Net.Extensions.FileStreamExtensions
  langs:
  - csharp
  - vb
  name: Lock(FileStream, Int64, Int64, Int32)
  nameWithType: FileStreamExtensions.Lock(FileStream, Int64, Int64, Int32)
  fullName: Juhta.Net.Extensions.FileStreamExtensions.Lock(System.IO.FileStream, System.Int64, System.Int64, System.Int32)
  type: Method
  source:
    remote:
      path: src/Juhta.Net/Extensions/FileStreamExtensions.cs
      branch: release/v1.0.0-rc
      repo: https://github.com/jlahteen/juhta.net.git
    id: Lock
    path: ../src/Juhta.Net/Extensions/FileStreamExtensions.cs
    startLine: 38
  assemblies:
  - Juhta.Net
  namespace: Juhta.Net.Extensions
  summary: "\nLocks a range of the file specified by this FileStream instance.\n"
  example: []
  syntax:
    content: public static void Lock(this FileStream fileStream, long position, long length, int timeout)
    parameters:
    - id: fileStream
      type: System.IO.FileStream
      description: Specifies the current FileStream instance.
    - id: position
      type: System.Int64
      description: Specifies the position of a range to lock.
    - id: length
      type: System.Int64
      description: Specifies the length in bytes of a range to lock.
    - id: timeout
      type: System.Int32
      description: Specifies a timeout in milliseconds for the operation.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub Lock(fileStream As FileStream, position As Long, length As Long, timeout As Integer)
  overload: Juhta.Net.Extensions.FileStreamExtensions.Lock*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Juhta.Net.Extensions.FileStreamExtensions.TryLock(System.IO.FileStream,System.Int32)
  commentId: M:Juhta.Net.Extensions.FileStreamExtensions.TryLock(System.IO.FileStream,System.Int32)
  id: TryLock(System.IO.FileStream,System.Int32)
  isExtensionMethod: true
  parent: Juhta.Net.Extensions.FileStreamExtensions
  langs:
  - csharp
  - vb
  name: TryLock(FileStream, Int32)
  nameWithType: FileStreamExtensions.TryLock(FileStream, Int32)
  fullName: Juhta.Net.Extensions.FileStreamExtensions.TryLock(System.IO.FileStream, System.Int32)
  type: Method
  source:
    remote:
      path: src/Juhta.Net/Extensions/FileStreamExtensions.cs
      branch: release/v1.0.0-rc
      repo: https://github.com/jlahteen/juhta.net.git
    id: TryLock
    path: ../src/Juhta.Net/Extensions/FileStreamExtensions.cs
    startLine: 90
  assemblies:
  - Juhta.Net
  namespace: Juhta.Net.Extensions
  summary: "\nTries to lock the file specified by this FileStream instance.\n"
  example: []
  syntax:
    content: public static bool TryLock(this FileStream fileStream, int timeout)
    parameters:
    - id: fileStream
      type: System.IO.FileStream
      description: Specifies the current FileStream instance.
    - id: timeout
      type: System.Int32
      description: Specifies a timeout in milliseconds for the operation.
    return:
      type: System.Boolean
      description: Returns true if a lock to the file was aqcuired within the specified timeout, otherwise false.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function TryLock(fileStream As FileStream, timeout As Integer) As Boolean
  overload: Juhta.Net.Extensions.FileStreamExtensions.TryLock*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Juhta.Net.Extensions.FileStreamExtensions.TryLock(System.IO.FileStream,System.Int64,System.Int64,System.Int32)
  commentId: M:Juhta.Net.Extensions.FileStreamExtensions.TryLock(System.IO.FileStream,System.Int64,System.Int64,System.Int32)
  id: TryLock(System.IO.FileStream,System.Int64,System.Int64,System.Int32)
  isExtensionMethod: true
  parent: Juhta.Net.Extensions.FileStreamExtensions
  langs:
  - csharp
  - vb
  name: TryLock(FileStream, Int64, Int64, Int32)
  nameWithType: FileStreamExtensions.TryLock(FileStream, Int64, Int64, Int32)
  fullName: Juhta.Net.Extensions.FileStreamExtensions.TryLock(System.IO.FileStream, System.Int64, System.Int64, System.Int32)
  type: Method
  source:
    remote:
      path: src/Juhta.Net/Extensions/FileStreamExtensions.cs
      branch: release/v1.0.0-rc
      repo: https://github.com/jlahteen/juhta.net.git
    id: TryLock
    path: ../src/Juhta.Net/Extensions/FileStreamExtensions.cs
    startLine: 114
  assemblies:
  - Juhta.Net
  namespace: Juhta.Net.Extensions
  summary: "\nTries to lock a range of the file specified by this FileStream instance.\n"
  example: []
  syntax:
    content: public static bool TryLock(this FileStream fileStream, long position, long length, int timeout)
    parameters:
    - id: fileStream
      type: System.IO.FileStream
      description: Specifies the current FileStream instance.
    - id: position
      type: System.Int64
      description: Specifies the position of a range to lock.
    - id: length
      type: System.Int64
      description: Specifies the length in bytes of a range to lock.
    - id: timeout
      type: System.Int32
      description: Specifies a timeout in milliseconds for the operation.
    return:
      type: System.Boolean
      description: >-
        Returns true if a lock to the range of the file was aqcuired within the specified timeout,

        otherwise false.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function TryLock(fileStream As FileStream, position As Long, length As Long, timeout As Integer) As Boolean
  overload: Juhta.Net.Extensions.FileStreamExtensions.TryLock*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: System.IO.FileStream
  commentId: T:System.IO.FileStream
  parent: System.IO
  isExternal: true
  name: FileStream
  nameWithType: FileStream
  fullName: System.IO.FileStream
- uid: Juhta.Net.Extensions
  commentId: N:Juhta.Net.Extensions
  isExternal: false
  name: Juhta.Net.Extensions
  nameWithType: Juhta.Net.Extensions
  fullName: Juhta.Net.Extensions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO
  commentId: N:System.IO
  isExternal: false
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Juhta.Net.Extensions.FileStreamExtensions.Lock*
  commentId: Overload:Juhta.Net.Extensions.FileStreamExtensions.Lock
  isExternal: false
  name: Lock
  nameWithType: FileStreamExtensions.Lock
  fullName: Juhta.Net.Extensions.FileStreamExtensions.Lock
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Juhta.Net.Extensions.FileStreamExtensions.TryLock*
  commentId: Overload:Juhta.Net.Extensions.FileStreamExtensions.TryLock
  isExternal: false
  name: TryLock
  nameWithType: FileStreamExtensions.TryLock
  fullName: Juhta.Net.Extensions.FileStreamExtensions.TryLock
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
