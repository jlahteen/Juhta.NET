### YamlMime:ManagedReference
items:
- uid: Juhta.Net.Diagnostics.ITraceWriter
  commentId: T:Juhta.Net.Diagnostics.ITraceWriter
  id: ITraceWriter
  parent: Juhta.Net.Diagnostics
  children:
  - Juhta.Net.Diagnostics.ITraceWriter.AbsoluteIndent
  - Juhta.Net.Diagnostics.ITraceWriter.Close
  - Juhta.Net.Diagnostics.ITraceWriter.DecreaseRelativeIndent
  - Juhta.Net.Diagnostics.ITraceWriter.Flush
  - Juhta.Net.Diagnostics.ITraceWriter.IncreaseRelativeIndent
  - Juhta.Net.Diagnostics.ITraceWriter.IsThreadSafe
  - Juhta.Net.Diagnostics.ITraceWriter.Open
  - Juhta.Net.Diagnostics.ITraceWriter.RelativeIndent
  - Juhta.Net.Diagnostics.ITraceWriter.Write(System.String)
  - Juhta.Net.Diagnostics.ITraceWriter.Write(System.String,System.Object[])
  - Juhta.Net.Diagnostics.ITraceWriter.WriteBlockEnd
  - Juhta.Net.Diagnostics.ITraceWriter.WriteBlockStart
  - Juhta.Net.Diagnostics.ITraceWriter.WriteBlockStart(System.String)
  - Juhta.Net.Diagnostics.ITraceWriter.WriteConstructorEnd
  - Juhta.Net.Diagnostics.ITraceWriter.WriteConstructorEnd(System.String)
  - Juhta.Net.Diagnostics.ITraceWriter.WriteConstructorStart(System.String)
  - Juhta.Net.Diagnostics.ITraceWriter.WriteException(System.Exception)
  - Juhta.Net.Diagnostics.ITraceWriter.WriteGetPropertyEnd
  - Juhta.Net.Diagnostics.ITraceWriter.WriteGetPropertyEnd(System.Object)
  - Juhta.Net.Diagnostics.ITraceWriter.WriteGetPropertyEnd(System.String,System.String)
  - Juhta.Net.Diagnostics.ITraceWriter.WriteGetPropertyEnd(System.String,System.String,System.Object)
  - Juhta.Net.Diagnostics.ITraceWriter.WriteGetPropertyStart(System.String,System.String)
  - Juhta.Net.Diagnostics.ITraceWriter.WriteLabeledMessage(System.String,System.String)
  - Juhta.Net.Diagnostics.ITraceWriter.WriteLabeledMessage(System.String,System.String,System.Object[])
  - Juhta.Net.Diagnostics.ITraceWriter.WriteLine
  - Juhta.Net.Diagnostics.ITraceWriter.WriteLine(System.String)
  - Juhta.Net.Diagnostics.ITraceWriter.WriteLine(System.String,System.Object[])
  - Juhta.Net.Diagnostics.ITraceWriter.WriteMethodEnd
  - Juhta.Net.Diagnostics.ITraceWriter.WriteMethodEnd(System.Object)
  - Juhta.Net.Diagnostics.ITraceWriter.WriteMethodEnd(System.String,System.String)
  - Juhta.Net.Diagnostics.ITraceWriter.WriteMethodEnd(System.String,System.String,System.Object)
  - Juhta.Net.Diagnostics.ITraceWriter.WriteMethodStart(System.String,System.String)
  - Juhta.Net.Diagnostics.ITraceWriter.WriteObjectGraph(System.String,System.Object)
  - Juhta.Net.Diagnostics.ITraceWriter.WriteOperationEnd
  - Juhta.Net.Diagnostics.ITraceWriter.WriteOperationEnd(System.String)
  - Juhta.Net.Diagnostics.ITraceWriter.WriteOperationStart(System.String)
  - Juhta.Net.Diagnostics.ITraceWriter.WriteSetPropertyEnd
  - Juhta.Net.Diagnostics.ITraceWriter.WriteSetPropertyEnd(System.String,System.String)
  - Juhta.Net.Diagnostics.ITraceWriter.WriteSetPropertyStart(System.String,System.String)
  - Juhta.Net.Diagnostics.ITraceWriter.WriteSetPropertyStart(System.String,System.String,System.Object)
  langs:
  - csharp
  - vb
  name: ITraceWriter
  nameWithType: ITraceWriter
  fullName: Juhta.Net.Diagnostics.ITraceWriter
  type: Interface
  source:
    remote:
      path: src/Juhta.Net.Diagnostics/ITraceWriter.cs
      branch: Dev
      repo: https://github.com/jlahteen/juhta.net
    id: ITraceWriter
    path: ../src/Juhta.Net.Diagnostics/ITraceWriter.cs
    startLine: 17
  assemblies:
  - Juhta.Net.Diagnostics
  namespace: Juhta.Net.Diagnostics
  summary: "\nDefines an interface for trace writers. A trace writer writes trace data to any storage where it can be\nanalyzed afterwards. Furthermore, it&apos;s totally up to a trace writer how trace data will be formatted when\nwritten to a storage.\n"
  example: []
  syntax:
    content: public interface ITraceWriter
    content.vb: Public Interface ITraceWriter
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Juhta.Net.Diagnostics.ITraceWriter.Close
  commentId: M:Juhta.Net.Diagnostics.ITraceWriter.Close
  id: Close
  parent: Juhta.Net.Diagnostics.ITraceWriter
  langs:
  - csharp
  - vb
  name: Close()
  nameWithType: ITraceWriter.Close()
  fullName: Juhta.Net.Diagnostics.ITraceWriter.Close()
  type: Method
  source:
    remote:
      path: src/Juhta.Net.Diagnostics/ITraceWriter.cs
      branch: Dev
      repo: https://github.com/jlahteen/juhta.net
    id: Close
    path: ../src/Juhta.Net.Diagnostics/ITraceWriter.cs
    startLine: 25
  assemblies:
  - Juhta.Net.Diagnostics
  namespace: Juhta.Net.Diagnostics
  summary: "\nCloses this ITraceWriter instance. After calling this method, any trace data should not be written through\nthis instance.\n"
  example: []
  syntax:
    content: void Close()
    content.vb: Sub Close
  overload: Juhta.Net.Diagnostics.ITraceWriter.Close*
- uid: Juhta.Net.Diagnostics.ITraceWriter.DecreaseRelativeIndent
  commentId: M:Juhta.Net.Diagnostics.ITraceWriter.DecreaseRelativeIndent
  id: DecreaseRelativeIndent
  parent: Juhta.Net.Diagnostics.ITraceWriter
  langs:
  - csharp
  - vb
  name: DecreaseRelativeIndent()
  nameWithType: ITraceWriter.DecreaseRelativeIndent()
  fullName: Juhta.Net.Diagnostics.ITraceWriter.DecreaseRelativeIndent()
  type: Method
  source:
    remote:
      path: src/Juhta.Net.Diagnostics/ITraceWriter.cs
      branch: Dev
      repo: https://github.com/jlahteen/juhta.net
    id: DecreaseRelativeIndent
    path: ../src/Juhta.Net.Diagnostics/ITraceWriter.cs
    startLine: 30
  assemblies:
  - Juhta.Net.Diagnostics
  namespace: Juhta.Net.Diagnostics
  summary: "\nDecreases the current relative indent for trace output by one.\n"
  example: []
  syntax:
    content: void DecreaseRelativeIndent()
    content.vb: Sub DecreaseRelativeIndent
  overload: Juhta.Net.Diagnostics.ITraceWriter.DecreaseRelativeIndent*
- uid: Juhta.Net.Diagnostics.ITraceWriter.Flush
  commentId: M:Juhta.Net.Diagnostics.ITraceWriter.Flush
  id: Flush
  parent: Juhta.Net.Diagnostics.ITraceWriter
  langs:
  - csharp
  - vb
  name: Flush()
  nameWithType: ITraceWriter.Flush()
  fullName: Juhta.Net.Diagnostics.ITraceWriter.Flush()
  type: Method
  source:
    remote:
      path: src/Juhta.Net.Diagnostics/ITraceWriter.cs
      branch: Dev
      repo: https://github.com/jlahteen/juhta.net
    id: Flush
    path: ../src/Juhta.Net.Diagnostics/ITraceWriter.cs
    startLine: 35
  assemblies:
  - Juhta.Net.Diagnostics
  namespace: Juhta.Net.Diagnostics
  summary: "\nFlushes all cached trace data written by the current thread to the underlying trace data storage.\n"
  example: []
  syntax:
    content: void Flush()
    content.vb: Sub Flush
  overload: Juhta.Net.Diagnostics.ITraceWriter.Flush*
- uid: Juhta.Net.Diagnostics.ITraceWriter.IncreaseRelativeIndent
  commentId: M:Juhta.Net.Diagnostics.ITraceWriter.IncreaseRelativeIndent
  id: IncreaseRelativeIndent
  parent: Juhta.Net.Diagnostics.ITraceWriter
  langs:
  - csharp
  - vb
  name: IncreaseRelativeIndent()
  nameWithType: ITraceWriter.IncreaseRelativeIndent()
  fullName: Juhta.Net.Diagnostics.ITraceWriter.IncreaseRelativeIndent()
  type: Method
  source:
    remote:
      path: src/Juhta.Net.Diagnostics/ITraceWriter.cs
      branch: Dev
      repo: https://github.com/jlahteen/juhta.net
    id: IncreaseRelativeIndent
    path: ../src/Juhta.Net.Diagnostics/ITraceWriter.cs
    startLine: 40
  assemblies:
  - Juhta.Net.Diagnostics
  namespace: Juhta.Net.Diagnostics
  summary: "\nIncreases the current relative indent for trace output by one.\n"
  example: []
  syntax:
    content: void IncreaseRelativeIndent()
    content.vb: Sub IncreaseRelativeIndent
  overload: Juhta.Net.Diagnostics.ITraceWriter.IncreaseRelativeIndent*
- uid: Juhta.Net.Diagnostics.ITraceWriter.Open
  commentId: M:Juhta.Net.Diagnostics.ITraceWriter.Open
  id: Open
  parent: Juhta.Net.Diagnostics.ITraceWriter
  langs:
  - csharp
  - vb
  name: Open()
  nameWithType: ITraceWriter.Open()
  fullName: Juhta.Net.Diagnostics.ITraceWriter.Open()
  type: Method
  source:
    remote:
      path: src/Juhta.Net.Diagnostics/ITraceWriter.cs
      branch: Dev
      repo: https://github.com/jlahteen/juhta.net
    id: Open
    path: ../src/Juhta.Net.Diagnostics/ITraceWriter.cs
    startLine: 45
  assemblies:
  - Juhta.Net.Diagnostics
  namespace: Juhta.Net.Diagnostics
  summary: "\nOpens this ITraceWriter instance for data tracing.\n"
  example: []
  syntax:
    content: void Open()
    content.vb: Sub Open
  overload: Juhta.Net.Diagnostics.ITraceWriter.Open*
- uid: Juhta.Net.Diagnostics.ITraceWriter.Write(System.String)
  commentId: M:Juhta.Net.Diagnostics.ITraceWriter.Write(System.String)
  id: Write(System.String)
  parent: Juhta.Net.Diagnostics.ITraceWriter
  langs:
  - csharp
  - vb
  name: Write(String)
  nameWithType: ITraceWriter.Write(String)
  fullName: Juhta.Net.Diagnostics.ITraceWriter.Write(System.String)
  type: Method
  source:
    remote:
      path: src/Juhta.Net.Diagnostics/ITraceWriter.cs
      branch: Dev
      repo: https://github.com/jlahteen/juhta.net
    id: Write
    path: ../src/Juhta.Net.Diagnostics/ITraceWriter.cs
    startLine: 51
  assemblies:
  - Juhta.Net.Diagnostics
  namespace: Juhta.Net.Diagnostics
  summary: "\nWrites a string to the underlying trace data storage.\n"
  example: []
  syntax:
    content: void Write(string s)
    parameters:
    - id: s
      type: System.String
      description: Specifies a string.
    content.vb: Sub Write(s As String)
  overload: Juhta.Net.Diagnostics.ITraceWriter.Write*
- uid: Juhta.Net.Diagnostics.ITraceWriter.Write(System.String,System.Object[])
  commentId: M:Juhta.Net.Diagnostics.ITraceWriter.Write(System.String,System.Object[])
  id: Write(System.String,System.Object[])
  parent: Juhta.Net.Diagnostics.ITraceWriter
  langs:
  - csharp
  - vb
  name: Write(String, Object[])
  nameWithType: ITraceWriter.Write(String, Object[])
  fullName: Juhta.Net.Diagnostics.ITraceWriter.Write(System.String, System.Object[])
  type: Method
  source:
    remote:
      path: src/Juhta.Net.Diagnostics/ITraceWriter.cs
      branch: Dev
      repo: https://github.com/jlahteen/juhta.net
    id: Write
    path: ../src/Juhta.Net.Diagnostics/ITraceWriter.cs
    startLine: 58
  assemblies:
  - Juhta.Net.Diagnostics
  namespace: Juhta.Net.Diagnostics
  summary: "\nWrites a formatted string to the underlying trace data storage.\n"
  example: []
  syntax:
    content: void Write(string format, params object[] args)
    parameters:
    - id: format
      type: System.String
      description: Specifies a string containing zero or more format items.
    - id: args
      type: System.Object[]
      description: Specifies an array of objects to format.
    content.vb: Sub Write(format As String, ParamArray args As Object())
  overload: Juhta.Net.Diagnostics.ITraceWriter.Write*
  nameWithType.vb: ITraceWriter.Write(String, Object())
  fullName.vb: Juhta.Net.Diagnostics.ITraceWriter.Write(System.String, System.Object())
  name.vb: Write(String, Object())
- uid: Juhta.Net.Diagnostics.ITraceWriter.WriteBlockEnd
  commentId: M:Juhta.Net.Diagnostics.ITraceWriter.WriteBlockEnd
  id: WriteBlockEnd
  parent: Juhta.Net.Diagnostics.ITraceWriter
  langs:
  - csharp
  - vb
  name: WriteBlockEnd()
  nameWithType: ITraceWriter.WriteBlockEnd()
  fullName: Juhta.Net.Diagnostics.ITraceWriter.WriteBlockEnd()
  type: Method
  source:
    remote:
      path: src/Juhta.Net.Diagnostics/ITraceWriter.cs
      branch: Dev
      repo: https://github.com/jlahteen/juhta.net
    id: WriteBlockEnd
    path: ../src/Juhta.Net.Diagnostics/ITraceWriter.cs
    startLine: 63
  assemblies:
  - Juhta.Net.Diagnostics
  namespace: Juhta.Net.Diagnostics
  summary: "\nWrites a block end to the underlying trace data storage.\n"
  example: []
  syntax:
    content: void WriteBlockEnd()
    content.vb: Sub WriteBlockEnd
  overload: Juhta.Net.Diagnostics.ITraceWriter.WriteBlockEnd*
- uid: Juhta.Net.Diagnostics.ITraceWriter.WriteBlockStart
  commentId: M:Juhta.Net.Diagnostics.ITraceWriter.WriteBlockStart
  id: WriteBlockStart
  parent: Juhta.Net.Diagnostics.ITraceWriter
  langs:
  - csharp
  - vb
  name: WriteBlockStart()
  nameWithType: ITraceWriter.WriteBlockStart()
  fullName: Juhta.Net.Diagnostics.ITraceWriter.WriteBlockStart()
  type: Method
  source:
    remote:
      path: src/Juhta.Net.Diagnostics/ITraceWriter.cs
      branch: Dev
      repo: https://github.com/jlahteen/juhta.net
    id: WriteBlockStart
    path: ../src/Juhta.Net.Diagnostics/ITraceWriter.cs
    startLine: 68
  assemblies:
  - Juhta.Net.Diagnostics
  namespace: Juhta.Net.Diagnostics
  summary: "\nWrites a block start to the underlying trace data storage.\n"
  example: []
  syntax:
    content: void WriteBlockStart()
    content.vb: Sub WriteBlockStart
  overload: Juhta.Net.Diagnostics.ITraceWriter.WriteBlockStart*
- uid: Juhta.Net.Diagnostics.ITraceWriter.WriteBlockStart(System.String)
  commentId: M:Juhta.Net.Diagnostics.ITraceWriter.WriteBlockStart(System.String)
  id: WriteBlockStart(System.String)
  parent: Juhta.Net.Diagnostics.ITraceWriter
  langs:
  - csharp
  - vb
  name: WriteBlockStart(String)
  nameWithType: ITraceWriter.WriteBlockStart(String)
  fullName: Juhta.Net.Diagnostics.ITraceWriter.WriteBlockStart(System.String)
  type: Method
  source:
    remote:
      path: src/Juhta.Net.Diagnostics/ITraceWriter.cs
      branch: Dev
      repo: https://github.com/jlahteen/juhta.net
    id: WriteBlockStart
    path: ../src/Juhta.Net.Diagnostics/ITraceWriter.cs
    startLine: 74
  assemblies:
  - Juhta.Net.Diagnostics
  namespace: Juhta.Net.Diagnostics
  summary: "\nWrites a block start to the underlying trace data storage.\n"
  example: []
  syntax:
    content: void WriteBlockStart(string description)
    parameters:
    - id: description
      type: System.String
      description: Specifies a description for a block to start.
    content.vb: Sub WriteBlockStart(description As String)
  overload: Juhta.Net.Diagnostics.ITraceWriter.WriteBlockStart*
- uid: Juhta.Net.Diagnostics.ITraceWriter.WriteConstructorEnd
  commentId: M:Juhta.Net.Diagnostics.ITraceWriter.WriteConstructorEnd
  id: WriteConstructorEnd
  parent: Juhta.Net.Diagnostics.ITraceWriter
  langs:
  - csharp
  - vb
  name: WriteConstructorEnd()
  nameWithType: ITraceWriter.WriteConstructorEnd()
  fullName: Juhta.Net.Diagnostics.ITraceWriter.WriteConstructorEnd()
  type: Method
  source:
    remote:
      path: src/Juhta.Net.Diagnostics/ITraceWriter.cs
      branch: Dev
      repo: https://github.com/jlahteen/juhta.net
    id: WriteConstructorEnd
    path: ../src/Juhta.Net.Diagnostics/ITraceWriter.cs
    startLine: 80
  assemblies:
  - Juhta.Net.Diagnostics
  namespace: Juhta.Net.Diagnostics
  summary: "\nWrites a constructor end to the underlying trace data storage. The constructor end will be written for the\nlatest constructor start.\n"
  example: []
  syntax:
    content: void WriteConstructorEnd()
    content.vb: Sub WriteConstructorEnd
  overload: Juhta.Net.Diagnostics.ITraceWriter.WriteConstructorEnd*
- uid: Juhta.Net.Diagnostics.ITraceWriter.WriteConstructorEnd(System.String)
  commentId: M:Juhta.Net.Diagnostics.ITraceWriter.WriteConstructorEnd(System.String)
  id: WriteConstructorEnd(System.String)
  parent: Juhta.Net.Diagnostics.ITraceWriter
  langs:
  - csharp
  - vb
  name: WriteConstructorEnd(String)
  nameWithType: ITraceWriter.WriteConstructorEnd(String)
  fullName: Juhta.Net.Diagnostics.ITraceWriter.WriteConstructorEnd(System.String)
  type: Method
  source:
    remote:
      path: src/Juhta.Net.Diagnostics/ITraceWriter.cs
      branch: Dev
      repo: https://github.com/jlahteen/juhta.net
    id: WriteConstructorEnd
    path: ../src/Juhta.Net.Diagnostics/ITraceWriter.cs
    startLine: 86
  assemblies:
  - Juhta.Net.Diagnostics
  namespace: Juhta.Net.Diagnostics
  summary: "\nWrites a constructor end to the underlying trace data storage.\n"
  example: []
  syntax:
    content: void WriteConstructorEnd(string className)
    parameters:
    - id: className
      type: System.String
      description: Specifies a class name.
    content.vb: Sub WriteConstructorEnd(className As String)
  overload: Juhta.Net.Diagnostics.ITraceWriter.WriteConstructorEnd*
- uid: Juhta.Net.Diagnostics.ITraceWriter.WriteConstructorStart(System.String)
  commentId: M:Juhta.Net.Diagnostics.ITraceWriter.WriteConstructorStart(System.String)
  id: WriteConstructorStart(System.String)
  parent: Juhta.Net.Diagnostics.ITraceWriter
  langs:
  - csharp
  - vb
  name: WriteConstructorStart(String)
  nameWithType: ITraceWriter.WriteConstructorStart(String)
  fullName: Juhta.Net.Diagnostics.ITraceWriter.WriteConstructorStart(System.String)
  type: Method
  source:
    remote:
      path: src/Juhta.Net.Diagnostics/ITraceWriter.cs
      branch: Dev
      repo: https://github.com/jlahteen/juhta.net
    id: WriteConstructorStart
    path: ../src/Juhta.Net.Diagnostics/ITraceWriter.cs
    startLine: 92
  assemblies:
  - Juhta.Net.Diagnostics
  namespace: Juhta.Net.Diagnostics
  summary: "\nWrites a constructor start to the underlying trace data storage.\n"
  example: []
  syntax:
    content: void WriteConstructorStart(string className)
    parameters:
    - id: className
      type: System.String
      description: Specifies a class name.
    content.vb: Sub WriteConstructorStart(className As String)
  overload: Juhta.Net.Diagnostics.ITraceWriter.WriteConstructorStart*
- uid: Juhta.Net.Diagnostics.ITraceWriter.WriteException(System.Exception)
  commentId: M:Juhta.Net.Diagnostics.ITraceWriter.WriteException(System.Exception)
  id: WriteException(System.Exception)
  parent: Juhta.Net.Diagnostics.ITraceWriter
  langs:
  - csharp
  - vb
  name: WriteException(Exception)
  nameWithType: ITraceWriter.WriteException(Exception)
  fullName: Juhta.Net.Diagnostics.ITraceWriter.WriteException(System.Exception)
  type: Method
  source:
    remote:
      path: src/Juhta.Net.Diagnostics/ITraceWriter.cs
      branch: Dev
      repo: https://github.com/jlahteen/juhta.net
    id: WriteException
    path: ../src/Juhta.Net.Diagnostics/ITraceWriter.cs
    startLine: 98
  assemblies:
  - Juhta.Net.Diagnostics
  namespace: Juhta.Net.Diagnostics
  summary: "\nWrites an exception to the underlying trace data storage.\n"
  example: []
  syntax:
    content: void WriteException(Exception exception)
    parameters:
    - id: exception
      type: System.Exception
      description: Specifies an exception.
    content.vb: Sub WriteException(exception As Exception)
  overload: Juhta.Net.Diagnostics.ITraceWriter.WriteException*
- uid: Juhta.Net.Diagnostics.ITraceWriter.WriteGetPropertyEnd
  commentId: M:Juhta.Net.Diagnostics.ITraceWriter.WriteGetPropertyEnd
  id: WriteGetPropertyEnd
  parent: Juhta.Net.Diagnostics.ITraceWriter
  langs:
  - csharp
  - vb
  name: WriteGetPropertyEnd()
  nameWithType: ITraceWriter.WriteGetPropertyEnd()
  fullName: Juhta.Net.Diagnostics.ITraceWriter.WriteGetPropertyEnd()
  type: Method
  source:
    remote:
      path: src/Juhta.Net.Diagnostics/ITraceWriter.cs
      branch: Dev
      repo: https://github.com/jlahteen/juhta.net
    id: WriteGetPropertyEnd
    path: ../src/Juhta.Net.Diagnostics/ITraceWriter.cs
    startLine: 104
  assemblies:
  - Juhta.Net.Diagnostics
  namespace: Juhta.Net.Diagnostics
  summary: "\nWrites a get-property end to the underlying trace data storage. The get-property end will be written for\nthe latest get-property start.\n"
  example: []
  syntax:
    content: void WriteGetPropertyEnd()
    content.vb: Sub WriteGetPropertyEnd
  overload: Juhta.Net.Diagnostics.ITraceWriter.WriteGetPropertyEnd*
- uid: Juhta.Net.Diagnostics.ITraceWriter.WriteGetPropertyEnd(System.Object)
  commentId: M:Juhta.Net.Diagnostics.ITraceWriter.WriteGetPropertyEnd(System.Object)
  id: WriteGetPropertyEnd(System.Object)
  parent: Juhta.Net.Diagnostics.ITraceWriter
  langs:
  - csharp
  - vb
  name: WriteGetPropertyEnd(Object)
  nameWithType: ITraceWriter.WriteGetPropertyEnd(Object)
  fullName: Juhta.Net.Diagnostics.ITraceWriter.WriteGetPropertyEnd(System.Object)
  type: Method
  source:
    remote:
      path: src/Juhta.Net.Diagnostics/ITraceWriter.cs
      branch: Dev
      repo: https://github.com/jlahteen/juhta.net
    id: WriteGetPropertyEnd
    path: ../src/Juhta.Net.Diagnostics/ITraceWriter.cs
    startLine: 111
  assemblies:
  - Juhta.Net.Diagnostics
  namespace: Juhta.Net.Diagnostics
  summary: "\nWrites a get-property end to the underlying trace data storage. The get-property end will be written for\nthe latest get-property start.\n"
  example: []
  syntax:
    content: void WriteGetPropertyEnd(object returnValue)
    parameters:
    - id: returnValue
      type: System.Object
      description: Specifies the return value of the get-property.
    content.vb: Sub WriteGetPropertyEnd(returnValue As Object)
  overload: Juhta.Net.Diagnostics.ITraceWriter.WriteGetPropertyEnd*
- uid: Juhta.Net.Diagnostics.ITraceWriter.WriteGetPropertyEnd(System.String,System.String)
  commentId: M:Juhta.Net.Diagnostics.ITraceWriter.WriteGetPropertyEnd(System.String,System.String)
  id: WriteGetPropertyEnd(System.String,System.String)
  parent: Juhta.Net.Diagnostics.ITraceWriter
  langs:
  - csharp
  - vb
  name: WriteGetPropertyEnd(String, String)
  nameWithType: ITraceWriter.WriteGetPropertyEnd(String, String)
  fullName: Juhta.Net.Diagnostics.ITraceWriter.WriteGetPropertyEnd(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Juhta.Net.Diagnostics/ITraceWriter.cs
      branch: Dev
      repo: https://github.com/jlahteen/juhta.net
    id: WriteGetPropertyEnd
    path: ../src/Juhta.Net.Diagnostics/ITraceWriter.cs
    startLine: 118
  assemblies:
  - Juhta.Net.Diagnostics
  namespace: Juhta.Net.Diagnostics
  summary: "\nWrites a get-property end to the underlying trace data storage.\n"
  example: []
  syntax:
    content: void WriteGetPropertyEnd(string className, string propertyName)
    parameters:
    - id: className
      type: System.String
      description: Specifies a class name.
    - id: propertyName
      type: System.String
      description: Specifies a property name.
    content.vb: Sub WriteGetPropertyEnd(className As String, propertyName As String)
  overload: Juhta.Net.Diagnostics.ITraceWriter.WriteGetPropertyEnd*
- uid: Juhta.Net.Diagnostics.ITraceWriter.WriteGetPropertyEnd(System.String,System.String,System.Object)
  commentId: M:Juhta.Net.Diagnostics.ITraceWriter.WriteGetPropertyEnd(System.String,System.String,System.Object)
  id: WriteGetPropertyEnd(System.String,System.String,System.Object)
  parent: Juhta.Net.Diagnostics.ITraceWriter
  langs:
  - csharp
  - vb
  name: WriteGetPropertyEnd(String, String, Object)
  nameWithType: ITraceWriter.WriteGetPropertyEnd(String, String, Object)
  fullName: Juhta.Net.Diagnostics.ITraceWriter.WriteGetPropertyEnd(System.String, System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/Juhta.Net.Diagnostics/ITraceWriter.cs
      branch: Dev
      repo: https://github.com/jlahteen/juhta.net
    id: WriteGetPropertyEnd
    path: ../src/Juhta.Net.Diagnostics/ITraceWriter.cs
    startLine: 126
  assemblies:
  - Juhta.Net.Diagnostics
  namespace: Juhta.Net.Diagnostics
  summary: "\nWrites a get-property end to the underlying trace data storage.\n"
  example: []
  syntax:
    content: void WriteGetPropertyEnd(string className, string propertyName, object returnValue)
    parameters:
    - id: className
      type: System.String
      description: Specifies a class name.
    - id: propertyName
      type: System.String
      description: Specifies a property name.
    - id: returnValue
      type: System.Object
      description: Specifies the return value of the get-property.
    content.vb: Sub WriteGetPropertyEnd(className As String, propertyName As String, returnValue As Object)
  overload: Juhta.Net.Diagnostics.ITraceWriter.WriteGetPropertyEnd*
- uid: Juhta.Net.Diagnostics.ITraceWriter.WriteGetPropertyStart(System.String,System.String)
  commentId: M:Juhta.Net.Diagnostics.ITraceWriter.WriteGetPropertyStart(System.String,System.String)
  id: WriteGetPropertyStart(System.String,System.String)
  parent: Juhta.Net.Diagnostics.ITraceWriter
  langs:
  - csharp
  - vb
  name: WriteGetPropertyStart(String, String)
  nameWithType: ITraceWriter.WriteGetPropertyStart(String, String)
  fullName: Juhta.Net.Diagnostics.ITraceWriter.WriteGetPropertyStart(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Juhta.Net.Diagnostics/ITraceWriter.cs
      branch: Dev
      repo: https://github.com/jlahteen/juhta.net
    id: WriteGetPropertyStart
    path: ../src/Juhta.Net.Diagnostics/ITraceWriter.cs
    startLine: 133
  assemblies:
  - Juhta.Net.Diagnostics
  namespace: Juhta.Net.Diagnostics
  summary: "\nWrites a get-property start to the underlying trace data storage.\n"
  example: []
  syntax:
    content: void WriteGetPropertyStart(string className, string propertyName)
    parameters:
    - id: className
      type: System.String
      description: Specifies a class name.
    - id: propertyName
      type: System.String
      description: Specifies a property name.
    content.vb: Sub WriteGetPropertyStart(className As String, propertyName As String)
  overload: Juhta.Net.Diagnostics.ITraceWriter.WriteGetPropertyStart*
- uid: Juhta.Net.Diagnostics.ITraceWriter.WriteLabeledMessage(System.String,System.String)
  commentId: M:Juhta.Net.Diagnostics.ITraceWriter.WriteLabeledMessage(System.String,System.String)
  id: WriteLabeledMessage(System.String,System.String)
  parent: Juhta.Net.Diagnostics.ITraceWriter
  langs:
  - csharp
  - vb
  name: WriteLabeledMessage(String, String)
  nameWithType: ITraceWriter.WriteLabeledMessage(String, String)
  fullName: Juhta.Net.Diagnostics.ITraceWriter.WriteLabeledMessage(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Juhta.Net.Diagnostics/ITraceWriter.cs
      branch: Dev
      repo: https://github.com/jlahteen/juhta.net
    id: WriteLabeledMessage
    path: ../src/Juhta.Net.Diagnostics/ITraceWriter.cs
    startLine: 140
  assemblies:
  - Juhta.Net.Diagnostics
  namespace: Juhta.Net.Diagnostics
  summary: "\nWrites a labeled message to the underlying trace data storage.\n"
  example: []
  syntax:
    content: void WriteLabeledMessage(string label, string message)
    parameters:
    - id: label
      type: System.String
      description: Specifies a label.
    - id: message
      type: System.String
      description: Specifies a message.
    content.vb: Sub WriteLabeledMessage(label As String, message As String)
  overload: Juhta.Net.Diagnostics.ITraceWriter.WriteLabeledMessage*
- uid: Juhta.Net.Diagnostics.ITraceWriter.WriteLabeledMessage(System.String,System.String,System.Object[])
  commentId: M:Juhta.Net.Diagnostics.ITraceWriter.WriteLabeledMessage(System.String,System.String,System.Object[])
  id: WriteLabeledMessage(System.String,System.String,System.Object[])
  parent: Juhta.Net.Diagnostics.ITraceWriter
  langs:
  - csharp
  - vb
  name: WriteLabeledMessage(String, String, Object[])
  nameWithType: ITraceWriter.WriteLabeledMessage(String, String, Object[])
  fullName: Juhta.Net.Diagnostics.ITraceWriter.WriteLabeledMessage(System.String, System.String, System.Object[])
  type: Method
  source:
    remote:
      path: src/Juhta.Net.Diagnostics/ITraceWriter.cs
      branch: Dev
      repo: https://github.com/jlahteen/juhta.net
    id: WriteLabeledMessage
    path: ../src/Juhta.Net.Diagnostics/ITraceWriter.cs
    startLine: 148
  assemblies:
  - Juhta.Net.Diagnostics
  namespace: Juhta.Net.Diagnostics
  summary: "\nWrites a labeled message to the underlying trace data storage.\n"
  example: []
  syntax:
    content: void WriteLabeledMessage(string label, string messageFormat, params object[] args)
    parameters:
    - id: label
      type: System.String
      description: Specifies a label.
    - id: messageFormat
      type: System.String
      description: Specifies a message format.
    - id: args
      type: System.Object[]
      description: Specifies an array of objects to format.
    content.vb: Sub WriteLabeledMessage(label As String, messageFormat As String, ParamArray args As Object())
  overload: Juhta.Net.Diagnostics.ITraceWriter.WriteLabeledMessage*
  nameWithType.vb: ITraceWriter.WriteLabeledMessage(String, String, Object())
  fullName.vb: Juhta.Net.Diagnostics.ITraceWriter.WriteLabeledMessage(System.String, System.String, System.Object())
  name.vb: WriteLabeledMessage(String, String, Object())
- uid: Juhta.Net.Diagnostics.ITraceWriter.WriteLine
  commentId: M:Juhta.Net.Diagnostics.ITraceWriter.WriteLine
  id: WriteLine
  parent: Juhta.Net.Diagnostics.ITraceWriter
  langs:
  - csharp
  - vb
  name: WriteLine()
  nameWithType: ITraceWriter.WriteLine()
  fullName: Juhta.Net.Diagnostics.ITraceWriter.WriteLine()
  type: Method
  source:
    remote:
      path: src/Juhta.Net.Diagnostics/ITraceWriter.cs
      branch: Dev
      repo: https://github.com/jlahteen/juhta.net
    id: WriteLine
    path: ../src/Juhta.Net.Diagnostics/ITraceWriter.cs
    startLine: 153
  assemblies:
  - Juhta.Net.Diagnostics
  namespace: Juhta.Net.Diagnostics
  summary: "\nWrites a line terminator to the underlying trace data storage.\n"
  example: []
  syntax:
    content: void WriteLine()
    content.vb: Sub WriteLine
  overload: Juhta.Net.Diagnostics.ITraceWriter.WriteLine*
- uid: Juhta.Net.Diagnostics.ITraceWriter.WriteLine(System.String)
  commentId: M:Juhta.Net.Diagnostics.ITraceWriter.WriteLine(System.String)
  id: WriteLine(System.String)
  parent: Juhta.Net.Diagnostics.ITraceWriter
  langs:
  - csharp
  - vb
  name: WriteLine(String)
  nameWithType: ITraceWriter.WriteLine(String)
  fullName: Juhta.Net.Diagnostics.ITraceWriter.WriteLine(System.String)
  type: Method
  source:
    remote:
      path: src/Juhta.Net.Diagnostics/ITraceWriter.cs
      branch: Dev
      repo: https://github.com/jlahteen/juhta.net
    id: WriteLine
    path: ../src/Juhta.Net.Diagnostics/ITraceWriter.cs
    startLine: 159
  assemblies:
  - Juhta.Net.Diagnostics
  namespace: Juhta.Net.Diagnostics
  summary: "\nWrites a string with a line terminator to the underlying trace data storage.\n"
  example: []
  syntax:
    content: void WriteLine(string s)
    parameters:
    - id: s
      type: System.String
      description: Specifies a string.
    content.vb: Sub WriteLine(s As String)
  overload: Juhta.Net.Diagnostics.ITraceWriter.WriteLine*
- uid: Juhta.Net.Diagnostics.ITraceWriter.WriteLine(System.String,System.Object[])
  commentId: M:Juhta.Net.Diagnostics.ITraceWriter.WriteLine(System.String,System.Object[])
  id: WriteLine(System.String,System.Object[])
  parent: Juhta.Net.Diagnostics.ITraceWriter
  langs:
  - csharp
  - vb
  name: WriteLine(String, Object[])
  nameWithType: ITraceWriter.WriteLine(String, Object[])
  fullName: Juhta.Net.Diagnostics.ITraceWriter.WriteLine(System.String, System.Object[])
  type: Method
  source:
    remote:
      path: src/Juhta.Net.Diagnostics/ITraceWriter.cs
      branch: Dev
      repo: https://github.com/jlahteen/juhta.net
    id: WriteLine
    path: ../src/Juhta.Net.Diagnostics/ITraceWriter.cs
    startLine: 166
  assemblies:
  - Juhta.Net.Diagnostics
  namespace: Juhta.Net.Diagnostics
  summary: "\nWrites a formatted string with a line terminator to the underlying trace data storage.\n"
  example: []
  syntax:
    content: void WriteLine(string format, params object[] args)
    parameters:
    - id: format
      type: System.String
      description: Specifies a string containing zero or more format items.
    - id: args
      type: System.Object[]
      description: Specifies an array of objects to format.
    content.vb: Sub WriteLine(format As String, ParamArray args As Object())
  overload: Juhta.Net.Diagnostics.ITraceWriter.WriteLine*
  nameWithType.vb: ITraceWriter.WriteLine(String, Object())
  fullName.vb: Juhta.Net.Diagnostics.ITraceWriter.WriteLine(System.String, System.Object())
  name.vb: WriteLine(String, Object())
- uid: Juhta.Net.Diagnostics.ITraceWriter.WriteMethodEnd
  commentId: M:Juhta.Net.Diagnostics.ITraceWriter.WriteMethodEnd
  id: WriteMethodEnd
  parent: Juhta.Net.Diagnostics.ITraceWriter
  langs:
  - csharp
  - vb
  name: WriteMethodEnd()
  nameWithType: ITraceWriter.WriteMethodEnd()
  fullName: Juhta.Net.Diagnostics.ITraceWriter.WriteMethodEnd()
  type: Method
  source:
    remote:
      path: src/Juhta.Net.Diagnostics/ITraceWriter.cs
      branch: Dev
      repo: https://github.com/jlahteen/juhta.net
    id: WriteMethodEnd
    path: ../src/Juhta.Net.Diagnostics/ITraceWriter.cs
    startLine: 172
  assemblies:
  - Juhta.Net.Diagnostics
  namespace: Juhta.Net.Diagnostics
  summary: "\nWrites a method end to the underlying trace data storage. The method end will be written for the latest\nmethod start.\n"
  example: []
  syntax:
    content: void WriteMethodEnd()
    content.vb: Sub WriteMethodEnd
  overload: Juhta.Net.Diagnostics.ITraceWriter.WriteMethodEnd*
- uid: Juhta.Net.Diagnostics.ITraceWriter.WriteMethodEnd(System.Object)
  commentId: M:Juhta.Net.Diagnostics.ITraceWriter.WriteMethodEnd(System.Object)
  id: WriteMethodEnd(System.Object)
  parent: Juhta.Net.Diagnostics.ITraceWriter
  langs:
  - csharp
  - vb
  name: WriteMethodEnd(Object)
  nameWithType: ITraceWriter.WriteMethodEnd(Object)
  fullName: Juhta.Net.Diagnostics.ITraceWriter.WriteMethodEnd(System.Object)
  type: Method
  source:
    remote:
      path: src/Juhta.Net.Diagnostics/ITraceWriter.cs
      branch: Dev
      repo: https://github.com/jlahteen/juhta.net
    id: WriteMethodEnd
    path: ../src/Juhta.Net.Diagnostics/ITraceWriter.cs
    startLine: 179
  assemblies:
  - Juhta.Net.Diagnostics
  namespace: Juhta.Net.Diagnostics
  summary: "\nWrites a method end to the underlying trace data storage. The method end will be written for the latest\nmethod start.\n"
  example: []
  syntax:
    content: void WriteMethodEnd(object returnValue)
    parameters:
    - id: returnValue
      type: System.Object
      description: Specifies the return value of the method.
    content.vb: Sub WriteMethodEnd(returnValue As Object)
  overload: Juhta.Net.Diagnostics.ITraceWriter.WriteMethodEnd*
- uid: Juhta.Net.Diagnostics.ITraceWriter.WriteMethodEnd(System.String,System.String)
  commentId: M:Juhta.Net.Diagnostics.ITraceWriter.WriteMethodEnd(System.String,System.String)
  id: WriteMethodEnd(System.String,System.String)
  parent: Juhta.Net.Diagnostics.ITraceWriter
  langs:
  - csharp
  - vb
  name: WriteMethodEnd(String, String)
  nameWithType: ITraceWriter.WriteMethodEnd(String, String)
  fullName: Juhta.Net.Diagnostics.ITraceWriter.WriteMethodEnd(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Juhta.Net.Diagnostics/ITraceWriter.cs
      branch: Dev
      repo: https://github.com/jlahteen/juhta.net
    id: WriteMethodEnd
    path: ../src/Juhta.Net.Diagnostics/ITraceWriter.cs
    startLine: 186
  assemblies:
  - Juhta.Net.Diagnostics
  namespace: Juhta.Net.Diagnostics
  summary: "\nWrites a method end to the underlying trace data storage.\n"
  example: []
  syntax:
    content: void WriteMethodEnd(string className, string methodName)
    parameters:
    - id: className
      type: System.String
      description: Specifies a class name.
    - id: methodName
      type: System.String
      description: Specifies a method name.
    content.vb: Sub WriteMethodEnd(className As String, methodName As String)
  overload: Juhta.Net.Diagnostics.ITraceWriter.WriteMethodEnd*
- uid: Juhta.Net.Diagnostics.ITraceWriter.WriteMethodEnd(System.String,System.String,System.Object)
  commentId: M:Juhta.Net.Diagnostics.ITraceWriter.WriteMethodEnd(System.String,System.String,System.Object)
  id: WriteMethodEnd(System.String,System.String,System.Object)
  parent: Juhta.Net.Diagnostics.ITraceWriter
  langs:
  - csharp
  - vb
  name: WriteMethodEnd(String, String, Object)
  nameWithType: ITraceWriter.WriteMethodEnd(String, String, Object)
  fullName: Juhta.Net.Diagnostics.ITraceWriter.WriteMethodEnd(System.String, System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/Juhta.Net.Diagnostics/ITraceWriter.cs
      branch: Dev
      repo: https://github.com/jlahteen/juhta.net
    id: WriteMethodEnd
    path: ../src/Juhta.Net.Diagnostics/ITraceWriter.cs
    startLine: 194
  assemblies:
  - Juhta.Net.Diagnostics
  namespace: Juhta.Net.Diagnostics
  summary: "\nWrites a method end to the underlying trace data storage.\n"
  example: []
  syntax:
    content: void WriteMethodEnd(string className, string methodName, object returnValue)
    parameters:
    - id: className
      type: System.String
      description: Specifies a class name.
    - id: methodName
      type: System.String
      description: Specifies a method name.
    - id: returnValue
      type: System.Object
      description: Specifies the return value of the method.
    content.vb: Sub WriteMethodEnd(className As String, methodName As String, returnValue As Object)
  overload: Juhta.Net.Diagnostics.ITraceWriter.WriteMethodEnd*
- uid: Juhta.Net.Diagnostics.ITraceWriter.WriteMethodStart(System.String,System.String)
  commentId: M:Juhta.Net.Diagnostics.ITraceWriter.WriteMethodStart(System.String,System.String)
  id: WriteMethodStart(System.String,System.String)
  parent: Juhta.Net.Diagnostics.ITraceWriter
  langs:
  - csharp
  - vb
  name: WriteMethodStart(String, String)
  nameWithType: ITraceWriter.WriteMethodStart(String, String)
  fullName: Juhta.Net.Diagnostics.ITraceWriter.WriteMethodStart(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Juhta.Net.Diagnostics/ITraceWriter.cs
      branch: Dev
      repo: https://github.com/jlahteen/juhta.net
    id: WriteMethodStart
    path: ../src/Juhta.Net.Diagnostics/ITraceWriter.cs
    startLine: 201
  assemblies:
  - Juhta.Net.Diagnostics
  namespace: Juhta.Net.Diagnostics
  summary: "\nWrites a method start to the underlying trace data storage.\n"
  example: []
  syntax:
    content: void WriteMethodStart(string className, string methodName)
    parameters:
    - id: className
      type: System.String
      description: Specifies a class name.
    - id: methodName
      type: System.String
      description: Specifies a method name.
    content.vb: Sub WriteMethodStart(className As String, methodName As String)
  overload: Juhta.Net.Diagnostics.ITraceWriter.WriteMethodStart*
- uid: Juhta.Net.Diagnostics.ITraceWriter.WriteObjectGraph(System.String,System.Object)
  commentId: M:Juhta.Net.Diagnostics.ITraceWriter.WriteObjectGraph(System.String,System.Object)
  id: WriteObjectGraph(System.String,System.Object)
  parent: Juhta.Net.Diagnostics.ITraceWriter
  langs:
  - csharp
  - vb
  name: WriteObjectGraph(String, Object)
  nameWithType: ITraceWriter.WriteObjectGraph(String, Object)
  fullName: Juhta.Net.Diagnostics.ITraceWriter.WriteObjectGraph(System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/Juhta.Net.Diagnostics/ITraceWriter.cs
      branch: Dev
      repo: https://github.com/jlahteen/juhta.net
    id: WriteObjectGraph
    path: ../src/Juhta.Net.Diagnostics/ITraceWriter.cs
    startLine: 208
  assemblies:
  - Juhta.Net.Diagnostics
  namespace: Juhta.Net.Diagnostics
  summary: "\nWrites an object graph to the underlying trace data storage.\n"
  example: []
  syntax:
    content: void WriteObjectGraph(string objectID, object object)
    parameters:
    - id: objectID
      type: System.String
      description: Specifies an object identifier, e.g. a variable or property name.
    - id: object
      type: System.Object
      description: Specifies an object.
    content.vb: Sub WriteObjectGraph(objectID As String, object As Object)
  overload: Juhta.Net.Diagnostics.ITraceWriter.WriteObjectGraph*
- uid: Juhta.Net.Diagnostics.ITraceWriter.WriteOperationEnd
  commentId: M:Juhta.Net.Diagnostics.ITraceWriter.WriteOperationEnd
  id: WriteOperationEnd
  parent: Juhta.Net.Diagnostics.ITraceWriter
  langs:
  - csharp
  - vb
  name: WriteOperationEnd()
  nameWithType: ITraceWriter.WriteOperationEnd()
  fullName: Juhta.Net.Diagnostics.ITraceWriter.WriteOperationEnd()
  type: Method
  source:
    remote:
      path: src/Juhta.Net.Diagnostics/ITraceWriter.cs
      branch: Dev
      repo: https://github.com/jlahteen/juhta.net
    id: WriteOperationEnd
    path: ../src/Juhta.Net.Diagnostics/ITraceWriter.cs
    startLine: 214
  assemblies:
  - Juhta.Net.Diagnostics
  namespace: Juhta.Net.Diagnostics
  summary: "\nWrites an operation end to the underlying trace data storage. The operation end will be written for the\nlatest operation start.\n"
  example: []
  syntax:
    content: void WriteOperationEnd()
    content.vb: Sub WriteOperationEnd
  overload: Juhta.Net.Diagnostics.ITraceWriter.WriteOperationEnd*
- uid: Juhta.Net.Diagnostics.ITraceWriter.WriteOperationEnd(System.String)
  commentId: M:Juhta.Net.Diagnostics.ITraceWriter.WriteOperationEnd(System.String)
  id: WriteOperationEnd(System.String)
  parent: Juhta.Net.Diagnostics.ITraceWriter
  langs:
  - csharp
  - vb
  name: WriteOperationEnd(String)
  nameWithType: ITraceWriter.WriteOperationEnd(String)
  fullName: Juhta.Net.Diagnostics.ITraceWriter.WriteOperationEnd(System.String)
  type: Method
  source:
    remote:
      path: src/Juhta.Net.Diagnostics/ITraceWriter.cs
      branch: Dev
      repo: https://github.com/jlahteen/juhta.net
    id: WriteOperationEnd
    path: ../src/Juhta.Net.Diagnostics/ITraceWriter.cs
    startLine: 220
  assemblies:
  - Juhta.Net.Diagnostics
  namespace: Juhta.Net.Diagnostics
  summary: "\nWrites an operation end to the underlying trace data storage.\n"
  example: []
  syntax:
    content: void WriteOperationEnd(string description)
    parameters:
    - id: description
      type: System.String
      description: Specifies the description of an operation that ends.
    content.vb: Sub WriteOperationEnd(description As String)
  overload: Juhta.Net.Diagnostics.ITraceWriter.WriteOperationEnd*
- uid: Juhta.Net.Diagnostics.ITraceWriter.WriteOperationStart(System.String)
  commentId: M:Juhta.Net.Diagnostics.ITraceWriter.WriteOperationStart(System.String)
  id: WriteOperationStart(System.String)
  parent: Juhta.Net.Diagnostics.ITraceWriter
  langs:
  - csharp
  - vb
  name: WriteOperationStart(String)
  nameWithType: ITraceWriter.WriteOperationStart(String)
  fullName: Juhta.Net.Diagnostics.ITraceWriter.WriteOperationStart(System.String)
  type: Method
  source:
    remote:
      path: src/Juhta.Net.Diagnostics/ITraceWriter.cs
      branch: Dev
      repo: https://github.com/jlahteen/juhta.net
    id: WriteOperationStart
    path: ../src/Juhta.Net.Diagnostics/ITraceWriter.cs
    startLine: 226
  assemblies:
  - Juhta.Net.Diagnostics
  namespace: Juhta.Net.Diagnostics
  summary: "\nWrites an operation start to the underlying trace data storage.\n"
  example: []
  syntax:
    content: void WriteOperationStart(string description)
    parameters:
    - id: description
      type: System.String
      description: Specifies a description for an operation that starts.
    content.vb: Sub WriteOperationStart(description As String)
  overload: Juhta.Net.Diagnostics.ITraceWriter.WriteOperationStart*
- uid: Juhta.Net.Diagnostics.ITraceWriter.WriteSetPropertyEnd
  commentId: M:Juhta.Net.Diagnostics.ITraceWriter.WriteSetPropertyEnd
  id: WriteSetPropertyEnd
  parent: Juhta.Net.Diagnostics.ITraceWriter
  langs:
  - csharp
  - vb
  name: WriteSetPropertyEnd()
  nameWithType: ITraceWriter.WriteSetPropertyEnd()
  fullName: Juhta.Net.Diagnostics.ITraceWriter.WriteSetPropertyEnd()
  type: Method
  source:
    remote:
      path: src/Juhta.Net.Diagnostics/ITraceWriter.cs
      branch: Dev
      repo: https://github.com/jlahteen/juhta.net
    id: WriteSetPropertyEnd
    path: ../src/Juhta.Net.Diagnostics/ITraceWriter.cs
    startLine: 232
  assemblies:
  - Juhta.Net.Diagnostics
  namespace: Juhta.Net.Diagnostics
  summary: "\nWrites a set-property end to the underlying trace data storage. The set-property end will be written for\nthe latest set-property start.\n"
  example: []
  syntax:
    content: void WriteSetPropertyEnd()
    content.vb: Sub WriteSetPropertyEnd
  overload: Juhta.Net.Diagnostics.ITraceWriter.WriteSetPropertyEnd*
- uid: Juhta.Net.Diagnostics.ITraceWriter.WriteSetPropertyEnd(System.String,System.String)
  commentId: M:Juhta.Net.Diagnostics.ITraceWriter.WriteSetPropertyEnd(System.String,System.String)
  id: WriteSetPropertyEnd(System.String,System.String)
  parent: Juhta.Net.Diagnostics.ITraceWriter
  langs:
  - csharp
  - vb
  name: WriteSetPropertyEnd(String, String)
  nameWithType: ITraceWriter.WriteSetPropertyEnd(String, String)
  fullName: Juhta.Net.Diagnostics.ITraceWriter.WriteSetPropertyEnd(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Juhta.Net.Diagnostics/ITraceWriter.cs
      branch: Dev
      repo: https://github.com/jlahteen/juhta.net
    id: WriteSetPropertyEnd
    path: ../src/Juhta.Net.Diagnostics/ITraceWriter.cs
    startLine: 239
  assemblies:
  - Juhta.Net.Diagnostics
  namespace: Juhta.Net.Diagnostics
  summary: "\nWrites a set-property end to the underlying trace data storage.\n"
  example: []
  syntax:
    content: void WriteSetPropertyEnd(string className, string propertyName)
    parameters:
    - id: className
      type: System.String
      description: Specifies a class name.
    - id: propertyName
      type: System.String
      description: Specifies a property name.
    content.vb: Sub WriteSetPropertyEnd(className As String, propertyName As String)
  overload: Juhta.Net.Diagnostics.ITraceWriter.WriteSetPropertyEnd*
- uid: Juhta.Net.Diagnostics.ITraceWriter.WriteSetPropertyStart(System.String,System.String)
  commentId: M:Juhta.Net.Diagnostics.ITraceWriter.WriteSetPropertyStart(System.String,System.String)
  id: WriteSetPropertyStart(System.String,System.String)
  parent: Juhta.Net.Diagnostics.ITraceWriter
  langs:
  - csharp
  - vb
  name: WriteSetPropertyStart(String, String)
  nameWithType: ITraceWriter.WriteSetPropertyStart(String, String)
  fullName: Juhta.Net.Diagnostics.ITraceWriter.WriteSetPropertyStart(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Juhta.Net.Diagnostics/ITraceWriter.cs
      branch: Dev
      repo: https://github.com/jlahteen/juhta.net
    id: WriteSetPropertyStart
    path: ../src/Juhta.Net.Diagnostics/ITraceWriter.cs
    startLine: 246
  assemblies:
  - Juhta.Net.Diagnostics
  namespace: Juhta.Net.Diagnostics
  summary: "\nWrites a set-property start to the underlying trace data storage.\n"
  example: []
  syntax:
    content: void WriteSetPropertyStart(string className, string propertyName)
    parameters:
    - id: className
      type: System.String
      description: Specifies a class name.
    - id: propertyName
      type: System.String
      description: Specifies a property name.
    content.vb: Sub WriteSetPropertyStart(className As String, propertyName As String)
  overload: Juhta.Net.Diagnostics.ITraceWriter.WriteSetPropertyStart*
- uid: Juhta.Net.Diagnostics.ITraceWriter.WriteSetPropertyStart(System.String,System.String,System.Object)
  commentId: M:Juhta.Net.Diagnostics.ITraceWriter.WriteSetPropertyStart(System.String,System.String,System.Object)
  id: WriteSetPropertyStart(System.String,System.String,System.Object)
  parent: Juhta.Net.Diagnostics.ITraceWriter
  langs:
  - csharp
  - vb
  name: WriteSetPropertyStart(String, String, Object)
  nameWithType: ITraceWriter.WriteSetPropertyStart(String, String, Object)
  fullName: Juhta.Net.Diagnostics.ITraceWriter.WriteSetPropertyStart(System.String, System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/Juhta.Net.Diagnostics/ITraceWriter.cs
      branch: Dev
      repo: https://github.com/jlahteen/juhta.net
    id: WriteSetPropertyStart
    path: ../src/Juhta.Net.Diagnostics/ITraceWriter.cs
    startLine: 254
  assemblies:
  - Juhta.Net.Diagnostics
  namespace: Juhta.Net.Diagnostics
  summary: "\nWrites a set-property start to the underlying trace data storage.\n"
  example: []
  syntax:
    content: void WriteSetPropertyStart(string className, string propertyName, object newValue)
    parameters:
    - id: className
      type: System.String
      description: Specifies a class name.
    - id: propertyName
      type: System.String
      description: Specifies a property name.
    - id: newValue
      type: System.Object
      description: Specifies a new value for the property.
    content.vb: Sub WriteSetPropertyStart(className As String, propertyName As String, newValue As Object)
  overload: Juhta.Net.Diagnostics.ITraceWriter.WriteSetPropertyStart*
- uid: Juhta.Net.Diagnostics.ITraceWriter.AbsoluteIndent
  commentId: P:Juhta.Net.Diagnostics.ITraceWriter.AbsoluteIndent
  id: AbsoluteIndent
  parent: Juhta.Net.Diagnostics.ITraceWriter
  langs:
  - csharp
  - vb
  name: AbsoluteIndent
  nameWithType: ITraceWriter.AbsoluteIndent
  fullName: Juhta.Net.Diagnostics.ITraceWriter.AbsoluteIndent
  type: Property
  source:
    remote:
      path: src/Juhta.Net.Diagnostics/ITraceWriter.cs
      branch: Dev
      repo: https://github.com/jlahteen/juhta.net
    id: AbsoluteIndent
    path: ../src/Juhta.Net.Diagnostics/ITraceWriter.cs
    startLine: 263
  assemblies:
  - Juhta.Net.Diagnostics
  namespace: Juhta.Net.Diagnostics
  summary: "\nGets the current absolute indent for trace output.\n"
  example: []
  syntax:
    content: int AbsoluteIndent { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: ReadOnly Property AbsoluteIndent As Integer
  overload: Juhta.Net.Diagnostics.ITraceWriter.AbsoluteIndent*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Juhta.Net.Diagnostics.ITraceWriter.IsThreadSafe
  commentId: P:Juhta.Net.Diagnostics.ITraceWriter.IsThreadSafe
  id: IsThreadSafe
  parent: Juhta.Net.Diagnostics.ITraceWriter
  langs:
  - csharp
  - vb
  name: IsThreadSafe
  nameWithType: ITraceWriter.IsThreadSafe
  fullName: Juhta.Net.Diagnostics.ITraceWriter.IsThreadSafe
  type: Property
  source:
    remote:
      path: src/Juhta.Net.Diagnostics/ITraceWriter.cs
      branch: Dev
      repo: https://github.com/jlahteen/juhta.net
    id: IsThreadSafe
    path: ../src/Juhta.Net.Diagnostics/ITraceWriter.cs
    startLine: 270
  assemblies:
  - Juhta.Net.Diagnostics
  namespace: Juhta.Net.Diagnostics
  summary: "\nGets a boolean value determining whether this ITraceWriter instance is thread-safe. If it&apos;s not, access to\nits methods will be synchronized.\n"
  remarks: Thread-safety is not required on the methods <xref href="Juhta.Net.Diagnostics.ITraceWriter.Open" data-throw-if-not-resolved="false"></xref> and <xref href="Juhta.Net.Diagnostics.ITraceWriter.Close" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: bool IsThreadSafe { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property IsThreadSafe As Boolean
  overload: Juhta.Net.Diagnostics.ITraceWriter.IsThreadSafe*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Juhta.Net.Diagnostics.ITraceWriter.RelativeIndent
  commentId: P:Juhta.Net.Diagnostics.ITraceWriter.RelativeIndent
  id: RelativeIndent
  parent: Juhta.Net.Diagnostics.ITraceWriter
  langs:
  - csharp
  - vb
  name: RelativeIndent
  nameWithType: ITraceWriter.RelativeIndent
  fullName: Juhta.Net.Diagnostics.ITraceWriter.RelativeIndent
  type: Property
  source:
    remote:
      path: src/Juhta.Net.Diagnostics/ITraceWriter.cs
      branch: Dev
      repo: https://github.com/jlahteen/juhta.net
    id: RelativeIndent
    path: ../src/Juhta.Net.Diagnostics/ITraceWriter.cs
    startLine: 275
  assemblies:
  - Juhta.Net.Diagnostics
  namespace: Juhta.Net.Diagnostics
  summary: "\nGets or sets the current relative indent for trace output.\n"
  example: []
  syntax:
    content: int RelativeIndent { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Property RelativeIndent As Integer
  overload: Juhta.Net.Diagnostics.ITraceWriter.RelativeIndent*
  modifiers.csharp:
  - get
  - set
references:
- uid: Juhta.Net.Diagnostics
  commentId: N:Juhta.Net.Diagnostics
  isExternal: false
  name: Juhta.Net.Diagnostics
  nameWithType: Juhta.Net.Diagnostics
  fullName: Juhta.Net.Diagnostics
- uid: Juhta.Net.Diagnostics.ITraceWriter.Close*
  commentId: Overload:Juhta.Net.Diagnostics.ITraceWriter.Close
  isExternal: false
  name: Close
  nameWithType: ITraceWriter.Close
  fullName: Juhta.Net.Diagnostics.ITraceWriter.Close
- uid: Juhta.Net.Diagnostics.ITraceWriter.DecreaseRelativeIndent*
  commentId: Overload:Juhta.Net.Diagnostics.ITraceWriter.DecreaseRelativeIndent
  isExternal: false
  name: DecreaseRelativeIndent
  nameWithType: ITraceWriter.DecreaseRelativeIndent
  fullName: Juhta.Net.Diagnostics.ITraceWriter.DecreaseRelativeIndent
- uid: Juhta.Net.Diagnostics.ITraceWriter.Flush*
  commentId: Overload:Juhta.Net.Diagnostics.ITraceWriter.Flush
  isExternal: false
  name: Flush
  nameWithType: ITraceWriter.Flush
  fullName: Juhta.Net.Diagnostics.ITraceWriter.Flush
- uid: Juhta.Net.Diagnostics.ITraceWriter.IncreaseRelativeIndent*
  commentId: Overload:Juhta.Net.Diagnostics.ITraceWriter.IncreaseRelativeIndent
  isExternal: false
  name: IncreaseRelativeIndent
  nameWithType: ITraceWriter.IncreaseRelativeIndent
  fullName: Juhta.Net.Diagnostics.ITraceWriter.IncreaseRelativeIndent
- uid: Juhta.Net.Diagnostics.ITraceWriter.Open*
  commentId: Overload:Juhta.Net.Diagnostics.ITraceWriter.Open
  isExternal: false
  name: Open
  nameWithType: ITraceWriter.Open
  fullName: Juhta.Net.Diagnostics.ITraceWriter.Open
- uid: Juhta.Net.Diagnostics.ITraceWriter.Write*
  commentId: Overload:Juhta.Net.Diagnostics.ITraceWriter.Write
  isExternal: false
  name: Write
  nameWithType: ITraceWriter.Write
  fullName: Juhta.Net.Diagnostics.ITraceWriter.Write
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Object[]
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullName.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Juhta.Net.Diagnostics.ITraceWriter.WriteBlockEnd*
  commentId: Overload:Juhta.Net.Diagnostics.ITraceWriter.WriteBlockEnd
  isExternal: false
  name: WriteBlockEnd
  nameWithType: ITraceWriter.WriteBlockEnd
  fullName: Juhta.Net.Diagnostics.ITraceWriter.WriteBlockEnd
- uid: Juhta.Net.Diagnostics.ITraceWriter.WriteBlockStart*
  commentId: Overload:Juhta.Net.Diagnostics.ITraceWriter.WriteBlockStart
  isExternal: false
  name: WriteBlockStart
  nameWithType: ITraceWriter.WriteBlockStart
  fullName: Juhta.Net.Diagnostics.ITraceWriter.WriteBlockStart
- uid: Juhta.Net.Diagnostics.ITraceWriter.WriteConstructorEnd*
  commentId: Overload:Juhta.Net.Diagnostics.ITraceWriter.WriteConstructorEnd
  isExternal: false
  name: WriteConstructorEnd
  nameWithType: ITraceWriter.WriteConstructorEnd
  fullName: Juhta.Net.Diagnostics.ITraceWriter.WriteConstructorEnd
- uid: Juhta.Net.Diagnostics.ITraceWriter.WriteConstructorStart*
  commentId: Overload:Juhta.Net.Diagnostics.ITraceWriter.WriteConstructorStart
  isExternal: false
  name: WriteConstructorStart
  nameWithType: ITraceWriter.WriteConstructorStart
  fullName: Juhta.Net.Diagnostics.ITraceWriter.WriteConstructorStart
- uid: Juhta.Net.Diagnostics.ITraceWriter.WriteException*
  commentId: Overload:Juhta.Net.Diagnostics.ITraceWriter.WriteException
  isExternal: false
  name: WriteException
  nameWithType: ITraceWriter.WriteException
  fullName: Juhta.Net.Diagnostics.ITraceWriter.WriteException
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: Juhta.Net.Diagnostics.ITraceWriter.WriteGetPropertyEnd*
  commentId: Overload:Juhta.Net.Diagnostics.ITraceWriter.WriteGetPropertyEnd
  isExternal: false
  name: WriteGetPropertyEnd
  nameWithType: ITraceWriter.WriteGetPropertyEnd
  fullName: Juhta.Net.Diagnostics.ITraceWriter.WriteGetPropertyEnd
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Juhta.Net.Diagnostics.ITraceWriter.WriteGetPropertyStart*
  commentId: Overload:Juhta.Net.Diagnostics.ITraceWriter.WriteGetPropertyStart
  isExternal: false
  name: WriteGetPropertyStart
  nameWithType: ITraceWriter.WriteGetPropertyStart
  fullName: Juhta.Net.Diagnostics.ITraceWriter.WriteGetPropertyStart
- uid: Juhta.Net.Diagnostics.ITraceWriter.WriteLabeledMessage*
  commentId: Overload:Juhta.Net.Diagnostics.ITraceWriter.WriteLabeledMessage
  isExternal: false
  name: WriteLabeledMessage
  nameWithType: ITraceWriter.WriteLabeledMessage
  fullName: Juhta.Net.Diagnostics.ITraceWriter.WriteLabeledMessage
- uid: Juhta.Net.Diagnostics.ITraceWriter.WriteLine*
  commentId: Overload:Juhta.Net.Diagnostics.ITraceWriter.WriteLine
  isExternal: false
  name: WriteLine
  nameWithType: ITraceWriter.WriteLine
  fullName: Juhta.Net.Diagnostics.ITraceWriter.WriteLine
- uid: Juhta.Net.Diagnostics.ITraceWriter.WriteMethodEnd*
  commentId: Overload:Juhta.Net.Diagnostics.ITraceWriter.WriteMethodEnd
  isExternal: false
  name: WriteMethodEnd
  nameWithType: ITraceWriter.WriteMethodEnd
  fullName: Juhta.Net.Diagnostics.ITraceWriter.WriteMethodEnd
- uid: Juhta.Net.Diagnostics.ITraceWriter.WriteMethodStart*
  commentId: Overload:Juhta.Net.Diagnostics.ITraceWriter.WriteMethodStart
  isExternal: false
  name: WriteMethodStart
  nameWithType: ITraceWriter.WriteMethodStart
  fullName: Juhta.Net.Diagnostics.ITraceWriter.WriteMethodStart
- uid: Juhta.Net.Diagnostics.ITraceWriter.WriteObjectGraph*
  commentId: Overload:Juhta.Net.Diagnostics.ITraceWriter.WriteObjectGraph
  isExternal: false
  name: WriteObjectGraph
  nameWithType: ITraceWriter.WriteObjectGraph
  fullName: Juhta.Net.Diagnostics.ITraceWriter.WriteObjectGraph
- uid: Juhta.Net.Diagnostics.ITraceWriter.WriteOperationEnd*
  commentId: Overload:Juhta.Net.Diagnostics.ITraceWriter.WriteOperationEnd
  isExternal: false
  name: WriteOperationEnd
  nameWithType: ITraceWriter.WriteOperationEnd
  fullName: Juhta.Net.Diagnostics.ITraceWriter.WriteOperationEnd
- uid: Juhta.Net.Diagnostics.ITraceWriter.WriteOperationStart*
  commentId: Overload:Juhta.Net.Diagnostics.ITraceWriter.WriteOperationStart
  isExternal: false
  name: WriteOperationStart
  nameWithType: ITraceWriter.WriteOperationStart
  fullName: Juhta.Net.Diagnostics.ITraceWriter.WriteOperationStart
- uid: Juhta.Net.Diagnostics.ITraceWriter.WriteSetPropertyEnd*
  commentId: Overload:Juhta.Net.Diagnostics.ITraceWriter.WriteSetPropertyEnd
  isExternal: false
  name: WriteSetPropertyEnd
  nameWithType: ITraceWriter.WriteSetPropertyEnd
  fullName: Juhta.Net.Diagnostics.ITraceWriter.WriteSetPropertyEnd
- uid: Juhta.Net.Diagnostics.ITraceWriter.WriteSetPropertyStart*
  commentId: Overload:Juhta.Net.Diagnostics.ITraceWriter.WriteSetPropertyStart
  isExternal: false
  name: WriteSetPropertyStart
  nameWithType: ITraceWriter.WriteSetPropertyStart
  fullName: Juhta.Net.Diagnostics.ITraceWriter.WriteSetPropertyStart
- uid: Juhta.Net.Diagnostics.ITraceWriter.AbsoluteIndent*
  commentId: Overload:Juhta.Net.Diagnostics.ITraceWriter.AbsoluteIndent
  isExternal: false
  name: AbsoluteIndent
  nameWithType: ITraceWriter.AbsoluteIndent
  fullName: Juhta.Net.Diagnostics.ITraceWriter.AbsoluteIndent
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Juhta.Net.Diagnostics.ITraceWriter.Open
  commentId: M:Juhta.Net.Diagnostics.ITraceWriter.Open
- uid: Juhta.Net.Diagnostics.ITraceWriter.Close
  commentId: M:Juhta.Net.Diagnostics.ITraceWriter.Close
- uid: Juhta.Net.Diagnostics.ITraceWriter.IsThreadSafe*
  commentId: Overload:Juhta.Net.Diagnostics.ITraceWriter.IsThreadSafe
  isExternal: false
  name: IsThreadSafe
  nameWithType: ITraceWriter.IsThreadSafe
  fullName: Juhta.Net.Diagnostics.ITraceWriter.IsThreadSafe
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Juhta.Net.Diagnostics.ITraceWriter.RelativeIndent*
  commentId: Overload:Juhta.Net.Diagnostics.ITraceWriter.RelativeIndent
  isExternal: false
  name: RelativeIndent
  nameWithType: ITraceWriter.RelativeIndent
  fullName: Juhta.Net.Diagnostics.ITraceWriter.RelativeIndent
