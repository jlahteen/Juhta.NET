### YamlMime:ManagedReference
items:
- uid: Juhta.Net.Common.CommandLineArg
  commentId: T:Juhta.Net.Common.CommandLineArg
  id: CommandLineArg
  parent: Juhta.Net.Common
  children:
  - Juhta.Net.Common.CommandLineArg.#ctor(System.String,System.String)
  - Juhta.Net.Common.CommandLineArg.m_rawArg
  - Juhta.Net.Common.CommandLineArg.m_value
  - Juhta.Net.Common.CommandLineArg.RawArg
  - Juhta.Net.Common.CommandLineArg.ValidateValue(Juhta.Net.Validation.IStringValidator)
  - Juhta.Net.Common.CommandLineArg.ValidateValue(System.String)
  - Juhta.Net.Common.CommandLineArg.Value
  langs:
  - csharp
  - vb
  name: CommandLineArg
  nameWithType: CommandLineArg
  fullName: Juhta.Net.Common.CommandLineArg
  type: Class
  source:
    remote:
      path: Source/Juhta.Net/Common/CommandLineArg.cs
      branch: Dev
      repo: https://github.com/jlahteen/juhta.net
    id: CommandLineArg
    path: ../../Juhta.NET/Source/Juhta.Net/Common/CommandLineArg.cs
    startLine: 16
  assemblies:
  - Juhta.Net
  namespace: Juhta.Net.Common
  summary: "\nDefines an abstract base class for command line arguments.\n"
  example: []
  syntax:
    content: public abstract class CommandLineArg
    content.vb: Public MustInherit Class CommandLineArg
  inheritance:
  - System.Object
  derivedClasses:
  - Juhta.Net.Common.CommandLineOption
  - Juhta.Net.Common.CommandLineParam
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Juhta.Net.Common.CommandLineArg.ValidateValue(Juhta.Net.Validation.IStringValidator)
  commentId: M:Juhta.Net.Common.CommandLineArg.ValidateValue(Juhta.Net.Validation.IStringValidator)
  id: ValidateValue(Juhta.Net.Validation.IStringValidator)
  parent: Juhta.Net.Common.CommandLineArg
  langs:
  - csharp
  - vb
  name: ValidateValue(IStringValidator)
  nameWithType: CommandLineArg.ValidateValue(IStringValidator)
  fullName: Juhta.Net.Common.CommandLineArg.ValidateValue(Juhta.Net.Validation.IStringValidator)
  type: Method
  source:
    remote:
      path: Source/Juhta.Net/Common/CommandLineArg.cs
      branch: Dev
      repo: https://github.com/jlahteen/juhta.net
    id: ValidateValue
    path: ../../Juhta.NET/Source/Juhta.Net/Common/CommandLineArg.cs
    startLine: 24
  assemblies:
  - Juhta.Net
  namespace: Juhta.Net.Common
  summary: "\nValidates the value of this CommandLineArg object through a specified IStringValidator instance.\n"
  example: []
  syntax:
    content: public void ValidateValue(IStringValidator validator)
    parameters:
    - id: validator
      type: Juhta.Net.Validation.IStringValidator
      description: Specifies an IStringValidator instance.
    content.vb: Public Sub ValidateValue(validator As IStringValidator)
  overload: Juhta.Net.Common.CommandLineArg.ValidateValue*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Juhta.Net.Common.CommandLineArg.ValidateValue(System.String)
  commentId: M:Juhta.Net.Common.CommandLineArg.ValidateValue(System.String)
  id: ValidateValue(System.String)
  parent: Juhta.Net.Common.CommandLineArg
  langs:
  - csharp
  - vb
  name: ValidateValue(String)
  nameWithType: CommandLineArg.ValidateValue(String)
  fullName: Juhta.Net.Common.CommandLineArg.ValidateValue(System.String)
  type: Method
  source:
    remote:
      path: Source/Juhta.Net/Common/CommandLineArg.cs
      branch: Dev
      repo: https://github.com/jlahteen/juhta.net
    id: ValidateValue
    path: ../../Juhta.NET/Source/Juhta.Net/Common/CommandLineArg.cs
    startLine: 47
  assemblies:
  - Juhta.Net
  namespace: Juhta.Net.Common
  summary: "\nValidates the value of this CommandLineArg object with a specified regular expression.\n"
  example: []
  syntax:
    content: public void ValidateValue(string regex)
    parameters:
    - id: regex
      type: System.String
      description: Specifies a regular expression.
    content.vb: Public Sub ValidateValue(regex As String)
  overload: Juhta.Net.Common.CommandLineArg.ValidateValue*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Juhta.Net.Common.CommandLineArg.RawArg
  commentId: P:Juhta.Net.Common.CommandLineArg.RawArg
  id: RawArg
  parent: Juhta.Net.Common.CommandLineArg
  langs:
  - csharp
  - vb
  name: RawArg
  nameWithType: CommandLineArg.RawArg
  fullName: Juhta.Net.Common.CommandLineArg.RawArg
  type: Property
  source:
    remote:
      path: Source/Juhta.Net/Common/CommandLineArg.cs
      branch: Dev
      repo: https://github.com/jlahteen/juhta.net
    id: RawArg
    path: ../../Juhta.NET/Source/Juhta.Net/Common/CommandLineArg.cs
    startLine: 66
  assemblies:
  - Juhta.Net
  namespace: Juhta.Net.Common
  summary: "\nGets the raw command line argument specified by this CommandLineArg object.\n"
  example: []
  syntax:
    content: public string RawArg { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property RawArg As String
  overload: Juhta.Net.Common.CommandLineArg.RawArg*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Juhta.Net.Common.CommandLineArg.Value
  commentId: P:Juhta.Net.Common.CommandLineArg.Value
  id: Value
  parent: Juhta.Net.Common.CommandLineArg
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: CommandLineArg.Value
  fullName: Juhta.Net.Common.CommandLineArg.Value
  type: Property
  source:
    remote:
      path: Source/Juhta.Net/Common/CommandLineArg.cs
      branch: Dev
      repo: https://github.com/jlahteen/juhta.net
    id: Value
    path: ../../Juhta.NET/Source/Juhta.Net/Common/CommandLineArg.cs
    startLine: 74
  assemblies:
  - Juhta.Net
  namespace: Juhta.Net.Common
  summary: "\nGets the (possibly parsed) value of the command line argument specified by this CommandLineArg object.\n"
  example: []
  syntax:
    content: public string Value { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Value As String
  overload: Juhta.Net.Common.CommandLineArg.Value*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Juhta.Net.Common.CommandLineArg.#ctor(System.String,System.String)
  commentId: M:Juhta.Net.Common.CommandLineArg.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: Juhta.Net.Common.CommandLineArg
  langs:
  - csharp
  - vb
  name: CommandLineArg(String, String)
  nameWithType: CommandLineArg.CommandLineArg(String, String)
  fullName: Juhta.Net.Common.CommandLineArg.CommandLineArg(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: Source/Juhta.Net/Common/CommandLineArg.cs
      branch: Dev
      repo: https://github.com/jlahteen/juhta.net
    id: .ctor
    path: ../../Juhta.NET/Source/Juhta.Net/Common/CommandLineArg.cs
    startLine: 88
  assemblies:
  - Juhta.Net
  namespace: Juhta.Net.Common
  summary: "\nInitializes a new instance.\n"
  example: []
  syntax:
    content: protected CommandLineArg(string rawArg, string value)
    parameters:
    - id: rawArg
      type: System.String
      description: Specifies a value for the <xref href="Juhta.Net.Common.CommandLineArg.RawArg" data-throw-if-not-resolved="false"></xref> property.
    - id: value
      type: System.String
      description: Specifies a value for the <xref href="Juhta.Net.Common.CommandLineArg.Value" data-throw-if-not-resolved="false"></xref> property.
    content.vb: Protected Sub New(rawArg As String, value As String)
  overload: Juhta.Net.Common.CommandLineArg.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Juhta.Net.Common.CommandLineArg.m_rawArg
  commentId: F:Juhta.Net.Common.CommandLineArg.m_rawArg
  id: m_rawArg
  parent: Juhta.Net.Common.CommandLineArg
  langs:
  - csharp
  - vb
  name: m_rawArg
  nameWithType: CommandLineArg.m_rawArg
  fullName: Juhta.Net.Common.CommandLineArg.m_rawArg
  type: Field
  source:
    remote:
      path: Source/Juhta.Net/Common/CommandLineArg.cs
      branch: Dev
      repo: https://github.com/jlahteen/juhta.net
    id: m_rawArg
    path: ../../Juhta.NET/Source/Juhta.Net/Common/CommandLineArg.cs
    startLine: 102
  assemblies:
  - Juhta.Net
  namespace: Juhta.Net.Common
  summary: "\nStores the <xref href=\"Juhta.Net.Common.CommandLineArg.RawArg\" data-throw-if-not-resolved=\"false\"></xref> property.\n"
  example: []
  syntax:
    content: protected string m_rawArg
    return:
      type: System.String
    content.vb: Protected m_rawArg As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Juhta.Net.Common.CommandLineArg.m_value
  commentId: F:Juhta.Net.Common.CommandLineArg.m_value
  id: m_value
  parent: Juhta.Net.Common.CommandLineArg
  langs:
  - csharp
  - vb
  name: m_value
  nameWithType: CommandLineArg.m_value
  fullName: Juhta.Net.Common.CommandLineArg.m_value
  type: Field
  source:
    remote:
      path: Source/Juhta.Net/Common/CommandLineArg.cs
      branch: Dev
      repo: https://github.com/jlahteen/juhta.net
    id: m_value
    path: ../../Juhta.NET/Source/Juhta.Net/Common/CommandLineArg.cs
    startLine: 107
  assemblies:
  - Juhta.Net
  namespace: Juhta.Net.Common
  summary: "\nStores the <xref href=\"Juhta.Net.Common.CommandLineArg.Value\" data-throw-if-not-resolved=\"false\"></xref> property.\n"
  example: []
  syntax:
    content: protected string m_value
    return:
      type: System.String
    content.vb: Protected m_value As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
references:
- uid: Juhta.Net.Common
  commentId: N:Juhta.Net.Common
  isExternal: false
  name: Juhta.Net.Common
  nameWithType: Juhta.Net.Common
  fullName: Juhta.Net.Common
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Juhta.Net.Common.CommandLineArg.ValidateValue*
  commentId: Overload:Juhta.Net.Common.CommandLineArg.ValidateValue
  isExternal: false
  name: ValidateValue
  nameWithType: CommandLineArg.ValidateValue
  fullName: Juhta.Net.Common.CommandLineArg.ValidateValue
- uid: Juhta.Net.Validation.IStringValidator
  commentId: T:Juhta.Net.Validation.IStringValidator
  parent: Juhta.Net.Validation
  isExternal: false
  name: IStringValidator
  nameWithType: IStringValidator
  fullName: Juhta.Net.Validation.IStringValidator
- uid: Juhta.Net.Validation
  commentId: N:Juhta.Net.Validation
  isExternal: false
  name: Juhta.Net.Validation
  nameWithType: Juhta.Net.Validation
  fullName: Juhta.Net.Validation
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Juhta.Net.Common.CommandLineArg.RawArg*
  commentId: Overload:Juhta.Net.Common.CommandLineArg.RawArg
  isExternal: false
  name: RawArg
  nameWithType: CommandLineArg.RawArg
  fullName: Juhta.Net.Common.CommandLineArg.RawArg
- uid: Juhta.Net.Common.CommandLineArg.Value*
  commentId: Overload:Juhta.Net.Common.CommandLineArg.Value
  isExternal: false
  name: Value
  nameWithType: CommandLineArg.Value
  fullName: Juhta.Net.Common.CommandLineArg.Value
- uid: Juhta.Net.Common.CommandLineArg.RawArg
  commentId: P:Juhta.Net.Common.CommandLineArg.RawArg
  parent: Juhta.Net.Common.CommandLineArg
  isExternal: false
  name: RawArg
  nameWithType: CommandLineArg.RawArg
  fullName: Juhta.Net.Common.CommandLineArg.RawArg
- uid: Juhta.Net.Common.CommandLineArg.Value
  commentId: P:Juhta.Net.Common.CommandLineArg.Value
  parent: Juhta.Net.Common.CommandLineArg
  isExternal: false
  name: Value
  nameWithType: CommandLineArg.Value
  fullName: Juhta.Net.Common.CommandLineArg.Value
- uid: Juhta.Net.Common.CommandLineArg.#ctor*
  commentId: Overload:Juhta.Net.Common.CommandLineArg.#ctor
  isExternal: false
  name: CommandLineArg
  nameWithType: CommandLineArg.CommandLineArg
  fullName: Juhta.Net.Common.CommandLineArg.CommandLineArg
- uid: Juhta.Net.Common.CommandLineArg
  commentId: T:Juhta.Net.Common.CommandLineArg
  parent: Juhta.Net.Common
  isExternal: false
  name: CommandLineArg
  nameWithType: CommandLineArg
  fullName: Juhta.Net.Common.CommandLineArg
